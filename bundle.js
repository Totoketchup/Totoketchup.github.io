/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e={7228:e=>{e.exports=function(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}},2858:e=>{e.exports=function(e){if(Array.isArray(e))return e}},4575:e=>{e.exports=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}},3913:e=>{function t(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}e.exports=function(e,r,n){return r&&t(e.prototype,r),n&&t(e,n),e}},9713:e=>{e.exports=function(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}},7154:e=>{function t(){return e.exports=t=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},t.apply(this,arguments)}e.exports=t},5354:e=>{e.exports=function(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}},3884:e=>{e.exports=function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var r=[],n=!0,o=!1,a=void 0;try{for(var i,l=e[Symbol.iterator]();!(n=(i=l.next()).done)&&(r.push(i.value),!t||r.length!==t);n=!0);}catch(e){o=!0,a=e}finally{try{n||null==l.return||l.return()}finally{if(o)throw a}}return r}}},521:e=>{e.exports=function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}},3038:(e,t,r)=>{var n=r(2858),o=r(3884),a=r(379),i=r(521);e.exports=function(e,t){return n(e)||o(e,t)||a(e,t)||i()}},8655:e=>{e.exports=function(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}},379:(e,t,r)=>{var n=r(7228);e.exports=function(e,t){if(e){if("string"==typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}}},4738:(e,t,r)=>{"use strict";r.d(t,{SG:()=>m,If:()=>h});var n=r(4686),o=r(658),a=r(7294),i="chakra-ui-light",l="chakra-ui-dark",s={classList:{add:o.ZT,remove:o.ZT}};var u="(prefers-color-scheme: dark)";var c="undefined"!=typeof Storage,f="chakra-ui-color-mode",d={get(e){if(!c)return e;var t=window.localStorage.getItem(f);return null!=t?t:e},set(e){c&&window.localStorage.setItem(f,e)},type:"localStorage"},p=a.createContext({});n.__DEV__&&(p.displayName="ColorModeContext");var h=()=>{var e=a.useContext(p);if(void 0===e)throw new Error("useColorMode must be used within a ColorModeProvider");return e};function m(e){var{value:t,children:r,options:{useSystemColorMode:c,initialColorMode:f},colorModeManager:h=d}=e,[m,g]=a.useState("cookie"===h.type?h.get(f):f);a.useEffect((()=>{if(n.isBrowser&&"localStorage"===h.type){var e=c?(t=f,(null!=(r=function(e){var t=null==window.matchMedia?void 0:window.matchMedia("(prefers-color-scheme: dark)");if(t)return!!t.media===t.matches}())?r:"dark"===t)?"dark":"light"):document.documentElement.style.getPropertyValue("--chakra-ui-color-mode")||h.get();e&&g(e)}var t,r}),[h,c,f]),a.useEffect((()=>{var e,t="dark"===m;(function(e){var t=n.isBrowser?document.body:s;t.classList.add(e?l:i),t.classList.remove(e?i:l)})(t),e=t?"dark":"light",n.isBrowser&&document.documentElement.style.setProperty("--chakra-ui-color-mode",e)}),[m]);var b=a.useCallback((e=>{h.set(e),g(e)}),[h]),y=a.useCallback((()=>{b("light"===m?"dark":"light")}),[m,b]);a.useEffect((()=>{var e;return c&&(e=function(e){if(!("matchMedia"in window))return o.ZT;var t=window.matchMedia(u),r=()=>{e(t.matches?"dark":"light")};return r(),t.addListener(r),()=>{t.removeListener(r)}}(b)),()=>{e&&c&&e()}}),[b,c]);var v={colorMode:null!=t?t:m,toggleColorMode:t?o.ZT:y,setColorMode:t?o.ZT:b};return a.createElement(p.Provider,{value:v},r)}n.__DEV__&&(m.displayName="ColorModeProvider"),n.__DEV__,n.__DEV__},2270:(e,t,r)=>{"use strict";r.d(t,{SG:()=>n.SG,If:()=>n.If});var n=r(4738)},2300:(e,t,r)=>{"use strict";r(1180);var n=r(4686);r(7294);n.__DEV__},4442:(e,t,r)=>{"use strict";r(2300);var n=r(1180);r.o(n,"useColorMode")&&r.d(t,{useColorMode:function(){return n.useColorMode}});var o=r(886);r.o(o,"useColorMode")&&r.d(t,{useColorMode:function(){return o.useColorMode}})},7310:(e,t,r)=>{"use strict";r.d(t,{Oq:()=>a,xj:()=>i,Cg:()=>s,Mr:()=>u,$_:()=>f,gT:()=>d,GQ:()=>h,Zo:()=>m,eC:()=>b,w8:()=>y,bK:()=>x,iA:()=>S,pb:()=>G,uU:()=>$,o_:()=>C,Rn:()=>E,Kl:()=>U,nO:()=>V,FK:()=>P,Gt:()=>T,AF:()=>N,ZM:()=>L,Dh:()=>M,ch:()=>B,vs:()=>Z,NV:()=>J,eR:()=>K,Z2:()=>X,cp:()=>I,gQ:()=>H});var n=r(4547),o={bg:{property:"background",scale:"colors"},bgColor:{property:"backgroundColor",scale:"colors"},background:{property:"background",scale:"colors"},backgroundColor:{property:"backgroundColor",scale:"colors"},backgroundImage:!0,backgroundSize:!0,backgroundPosition:!0,backgroundRepeat:!0,backgroundAttachment:!0,backgroundBlendMode:!0,bgImage:{property:"backgroundImage"},bgImg:{property:"backgroundImage"},bgBlendMode:{property:"backgroundBlendMode"},bgSize:{property:"backgroundSize"},bgPosition:{property:"backgroundPosition"},bgPos:{property:"backgroundPosition"},bgRepeat:{property:"backgroundRepeat"},bgAttachment:{property:"backgroundAttachment"}},a=(0,n.By)(o),i=(0,n.jo)(o),l={border:{property:"border",scale:"borders"},borderWidth:{property:"borderWidth",scale:"borderWidths"},borderStyle:{property:"borderStyle",scale:"borderStyles"},borderColor:{property:"borderColor",scale:"colors"},borderRadius:{property:"borderRadius",scale:"radii"},rounded:{property:"borderRadius",scale:"radii"},borderTop:{property:"borderTop",scale:"borders"},borderTopLeftRadius:{property:"borderTopLeftRadius",scale:"radii"},roundedTopLeft:{property:"borderTopLeftRadius",scale:"radii"},borderTopRightRadius:{property:"borderTopRightRadius",scale:"radii"},roundedTopRight:{property:"borderTopRightRadius",scale:"radii"},borderRight:{property:"borderRight",scale:"borders"},borderBottom:{property:"borderBottom",scale:"borders"},borderBottomLeftRadius:{property:"borderBottomLeftRadius",scale:"radii"},roundedBottomLeft:{property:"borderBottomLeftRadius",scale:"radii"},borderBottomRightRadius:{property:"borderBottomRightRadius",scale:"radii"},roundedBottomRight:{property:"borderBottomRightRadius",scale:"radii"},borderLeft:{property:"borderLeft",scale:"borders"},borderX:{properties:["borderLeft","borderRight"],scale:"borders"},borderY:{properties:["borderTop","borderBottom"],scale:"borders"},borderTopWidth:{property:"borderTopWidth",scale:"borderWidths"},borderTopColor:{property:"borderTopColor",scale:"colors"},borderTopStyle:{property:"borderTopStyle",scale:"borderStyles"},borderBottomWidth:{property:"borderBottomWidth",scale:"borderWidths"},borderBottomColor:{property:"borderBottomColor",scale:"colors"},borderBottomStyle:{property:"borderBottomStyle",scale:"borderStyles"},borderLeftWidth:{property:"borderLeftWidth",scale:"borderWidths"},borderLeftColor:{property:"borderLeftColor",scale:"colors"},borderLeftStyle:{property:"borderLeftStyle",scale:"borderStyles"},borderRightWidth:{property:"borderRightWidth",scale:"borderWidths"},borderRightColor:{property:"borderRightColor",scale:"colors"},borderRightStyle:{property:"borderRightStyle",scale:"borderStyles"},borderTopRadius:{properties:["borderTopLeftRadius","borderTopRightRadius"],scale:"radii"},roundedTop:{properties:["borderTopLeftRadius","borderTopRightRadius"],scale:"radii"},borderBottomRadius:{properties:["borderBottomLeftRadius","borderBottomRightRadius"],scale:"radii"},roundedBottom:{properties:["borderBottomLeftRadius","borderBottomRightRadius"],scale:"radii"},borderLeftRadius:{properties:["borderTopLeftRadius","borderBottomLeftRadius"],scale:"radii"},roundedLeft:{properties:["borderTopLeftRadius","borderBottomLeftRadius"],scale:"radii"},borderRightRadius:{properties:["borderTopRightRadius","borderBottomRightRadius"],scale:"radii"},roundedRight:{properties:["borderTopRightRadius","borderBottomRightRadius"],scale:"radii"}},s=(0,n.By)(l),u=(0,n.jo)(l),c={color:{property:"color",scale:"colors"},textColor:{property:"color",scale:"colors"},opacity:!0,fill:{property:"fill",scale:"colors"},stroke:{property:"stroke",scale:"colors"}},f=(0,n.By)(c),d=(0,n.jo)(c),p={alignItems:!0,alignContent:!0,justifyItems:!0,justifyContent:!0,flexWrap:!0,flexDirection:!0,flex:!0,flexGrow:!0,flexShrink:!0,flexBasis:{property:"flexBasis",scale:"sizes"},justifySelf:!0,alignSelf:!0,order:!0,flexDir:{property:"flexDirection"}},h=(0,n.By)(p),m=(0,n.jo)(p),g={gridGap:{property:"gridGap",scale:"space"},gridColumnGap:{property:"gridColumnGap",scale:"space"},gridRowGap:{property:"gridRowGap",scale:"space"},gridColumn:!0,gridRow:!0,gridAutoFlow:!0,gridAutoColumns:!0,gridColumnStart:!0,gridColumnEnd:!0,gridAutoRows:!0,gridTemplateColumns:!0,gridTemplateRows:!0,gridTemplateAreas:!0,gridArea:!0,placeItems:!0},b=(0,n.By)(g),y=(0,n.jo)(g),v=r(4686);function w(e,t){var r=!(0,v.isNumber)(e)||e>1?e:100*e+"%";return(0,v.memoizedGet)(t,e,r)}var k={width:{property:"width",scale:"sizes",transform:w},w:{property:"width",scale:"sizes",transform:w},height:{property:"height",scale:"sizes"},h:{property:"height",scale:"sizes"},boxSize:{properties:["width","height"],scale:"sizes"},minWidth:{property:"minWidth",scale:"sizes"},minW:{property:"minWidth",scale:"sizes"},minHeight:{property:"minHeight",scale:"sizes"},minH:{property:"minHeight",scale:"sizes"},maxWidth:{property:"maxWidth",scale:"sizes"},maxW:{property:"maxWidth",scale:"sizes"},maxHeight:{property:"maxHeight",scale:"sizes"},maxH:{property:"maxHeight",scale:"sizes"},d:{property:"display"},overflow:!0,overflowX:!0,overflowY:!0,display:!0,verticalAlign:!0,boxSizing:!0},x=(0,n.By)(k),S=(0,n.jo)(k),_={animation:!0,appearance:!0,visibility:!0,userSelect:!0,pointerEvents:!0,cursor:!0,resize:!0,objectFit:!0,objectPosition:!0,float:!0,willChange:!0},C=(0,n.By)(_),E=(0,n.jo)(_),A=r(4305),z=r.n(A);function O(e,t){if(!t||null==e)return e;var r,n=e.toString();if("-","-"===n.slice(0,0+"-".length)){var o=t[n.slice(1)];r=(0,v.isString)(o)?"-"+o:(0,v.isNumber)(o)?-1*o:e}else{var a;r=null!=(a=t[e])?a:e}var i=r||e;return z()(i)||Number.isNaN(Number(i))||(i=Number(i)),i}var R={position:!0,pos:{property:"position"},zIndex:{property:"zIndex",scale:"zIndices"},inset:{properties:["left","top","bottom","right"],scale:"space",transform:O},insetX:{properties:["left","right"],scale:"space",transform:O},insetY:{properties:["top","bottom"],scale:"space",transform:O},top:{property:"top",scale:"space",transform:O},right:{property:"right",scale:"space",transform:O},bottom:{property:"bottom",scale:"space",transform:O},left:{property:"left",scale:"space",transform:O}},P=(0,n.By)(R),T=(0,n.jo)(R),j={boxShadow:{property:"boxShadow",scale:"shadows"},textShadow:{property:"textShadow",scale:"shadows"},shadow:{property:"boxShadow",scale:"shadows"}},N=(0,n.By)(j),L=(0,n.jo)(j),F={margin:{property:"margin",transform:O,scale:"space"},m:{property:"margin",transform:O,scale:"space"},marginTop:{property:"marginTop",transform:O,scale:"space"},mt:{property:"marginTop",transform:O,scale:"space"},marginRight:{property:"marginRight",transform:O,scale:"space"},mr:{property:"marginRight",transform:O,scale:"space"},marginBottom:{property:"marginBottom",transform:O,scale:"space"},mb:{property:"marginBottom",transform:O,scale:"space"},marginLeft:{property:"marginLeft",transform:O,scale:"space"},ml:{property:"marginLeft",transform:O,scale:"space"},marginX:{properties:["marginLeft","marginRight"],transform:O,scale:"space"},mx:{properties:["marginLeft","marginRight"],transform:O,scale:"space"},marginY:{properties:["marginTop","marginBottom"],transform:O,scale:"space"},my:{properties:["marginTop","marginBottom"],transform:O,scale:"space"},padding:{property:"padding",scale:"space"},p:{property:"padding",scale:"space"},paddingTop:{property:"paddingTop",scale:"space"},pt:{property:"paddingTop",scale:"space"},paddingRight:{property:"paddingRight",scale:"space"},pr:{property:"paddingRight",scale:"space"},paddingBottom:{property:"paddingBottom",scale:"space"},pb:{property:"paddingBottom",scale:"space"},paddingLeft:{property:"paddingLeft",scale:"space"},pl:{property:"paddingLeft",scale:"space"},paddingX:{properties:["paddingLeft","paddingRight"],scale:"space"},px:{properties:["paddingLeft","paddingRight"],scale:"space"},paddingY:{properties:["paddingTop","paddingBottom"],scale:"space"},py:{properties:["paddingTop","paddingBottom"],scale:"space"}},M=(0,n.By)(F),B=(0,n.jo)(F),D={fontFamily:{property:"fontFamily",scale:"fonts"},fontSize:{property:"fontSize",scale:"fontSizes"},fontWeight:{property:"fontWeight",scale:"fontWeights"},lineHeight:{property:"lineHeight",scale:"lineHeights"},letterSpacing:{property:"letterSpacing",scale:"letterSpacings"},textAlign:!0,fontStyle:!0,wordBreak:!0,overflowWrap:!0,textOverflow:!0,textTransform:!0,whiteSpace:!0,textDecoration:!0,textDecor:{property:"textDecoration"}},I=(0,n.By)(D),H=(0,n.jo)(D),W={outline:!0,outlineOffset:!0,outlineColor:{property:"outlineColor",scale:"colors"}},U=(0,n.By)(W),V=(0,n.jo)(W),q={listStyleType:!0,listStylePosition:!0,listStylePos:{property:"listStylePosition"},listStyleImage:!0,listStyleImg:{property:"listStyleImage"}},G=(0,n.By)(q),$=(0,n.jo)(q),Q={transition:!0,transitionDuration:{property:"transitionDuration",scale:"transition.duration"},transitionProperty:{property:"transitionProperty",scale:"transition.property"},transitionTimingFunction:{property:"transitionTimingFunction",scale:"transition.easing"}},K=(0,n.By)(Q),X=(0,n.jo)(Q),Y={transform:!0,transformOrigin:!0},Z=(0,n.By)(Y),J=(0,n.jo)(Y)},7720:(e,t,r)=>{"use strict";r.d(t,{i:()=>c});var n=r(4686),o=r(658),a=r(4547),i=r(7310),l=(0,a.qC)(i.xj,i.Mr,i.gT,i.Zo,i.iA,i.nO,i.w8,i.Rn,i.Gt,i.ZM,i.ch,i.gQ,i.NV,i.Z2,i.uU),s=r(8270),u={themeBreakpoints:[],breakpoints:[],breakpointValues:[],mediaQueries:[]},c=function e(t){return void 0===t&&(t={}),function(r){void 0===r&&(r={});var a="theme"in r?r.theme:r,i={},c=(e=>t=>{var r={},{breakpoints:a,mediaQueries:i}=function(e){if(void 0===e&&(e=[]),u.themeBreakpoints===e)return u;var{breakpoints:t,breakpointValues:r}=Object.entries(e).filter((e=>{var[t]=e;return(0,n.isCustomBreakpoint)(t)})).reduce(((e,t)=>{var[r,n]=t;return e.breakpoints.push(r),e.breakpointValues.push(n),e}),{breakpoints:[],breakpointValues:[]}),o=[null,...r.map((e=>"@media screen and (min-width: "+e+")")).slice(1)];return u.themeBreakpoints=e,u.mediaQueries=o,u.breakpointValues=r,u.breakpoints=t,{breakpoints:t,mediaQueries:o}}(t.breakpoints);for(var l in e){var s=(0,o.Pu)(e[l],t);if(null!=s)if(s=(0,n.isResponsiveObjectLike)(s,a)?(0,n.objectToArrayNotation)(s,a):s,(0,n.isArray)(s))for(var c=s.slice(0,i.length).length,f=0;f<c;f+=1){var d=i[f];d?(r[d]=r[d]||{},null!=s[f]&&(r[d][l]=s[f])):r[l]=s[f]}else r[l]=s}return r})((0,o.Pu)(t,a))(a);for(var f in c){var d,p=c[f],h=(0,o.Pu)(p,a),m=f in s.vP?s.vP[f]:f,g=l.config[m];if("apply"!==m)if((0,n.isObject)(h))i[m]=e(h)(a);else{var b=(0,n.memoizedGet)(a,null==g?void 0:g.scale,{}),y=null!=(d=null==g||null==g.transform?void 0:g.transform(h,b))?d:(0,n.memoizedGet)(b,h,h);if(null==g?void 0:g.properties)for(var v of g.properties)i[v]=y;else(null==g?void 0:g.property)?i[g.property]=y:i[m]=y}else{var w=e((0,n.memoizedGet)(a,h))(a);i=(0,n.mergeWith)({},i,w)}}return i}}},3063:()=>{},9421:(e,t,r)=>{"use strict";r.d(t,{css:()=>o.i,propNames:()=>l.cC}),r(7310),r(4547);var n=r(8270);r.o(n,"GlobalStyle")&&r.d(t,{GlobalStyle:function(){return n.GlobalStyle}}),r.o(n,"ThemeProvider")&&r.d(t,{ThemeProvider:function(){return n.ThemeProvider}}),r.o(n,"chakra")&&r.d(t,{chakra:function(){return n.chakra}}),r.o(n,"css")&&r.d(t,{css:function(){return n.css}}),r.o(n,"forwardRef")&&r.d(t,{forwardRef:function(){return n.forwardRef}}),r.o(n,"propNames")&&r.d(t,{propNames:function(){return n.propNames}}),r.o(n,"useMultiStyleConfig")&&r.d(t,{useMultiStyleConfig:function(){return n.useMultiStyleConfig}}),r.o(n,"useStyleConfig")&&r.d(t,{useStyleConfig:function(){return n.useStyleConfig}});var o=r(7720),a=r(3063);r.o(a,"GlobalStyle")&&r.d(t,{GlobalStyle:function(){return a.GlobalStyle}}),r.o(a,"ThemeProvider")&&r.d(t,{ThemeProvider:function(){return a.ThemeProvider}}),r.o(a,"chakra")&&r.d(t,{chakra:function(){return a.chakra}}),r.o(a,"forwardRef")&&r.d(t,{forwardRef:function(){return a.forwardRef}}),r.o(a,"propNames")&&r.d(t,{propNames:function(){return a.propNames}}),r.o(a,"useMultiStyleConfig")&&r.d(t,{useMultiStyleConfig:function(){return a.useMultiStyleConfig}}),r.o(a,"useStyleConfig")&&r.d(t,{useStyleConfig:function(){return a.useStyleConfig}});var i=r(8351);r.o(i,"GlobalStyle")&&r.d(t,{GlobalStyle:function(){return i.GlobalStyle}}),r.o(i,"ThemeProvider")&&r.d(t,{ThemeProvider:function(){return i.ThemeProvider}}),r.o(i,"chakra")&&r.d(t,{chakra:function(){return i.chakra}}),r.o(i,"forwardRef")&&r.d(t,{forwardRef:function(){return i.forwardRef}}),r.o(i,"propNames")&&r.d(t,{propNames:function(){return i.propNames}}),r.o(i,"useMultiStyleConfig")&&r.d(t,{useMultiStyleConfig:function(){return i.useMultiStyleConfig}}),r.o(i,"useStyleConfig")&&r.d(t,{useStyleConfig:function(){return i.useStyleConfig}});var l=r(5503)},8351:()=>{},8270:(e,t,r)=>{"use strict";r.d(t,{_F:()=>n._,vP:()=>n.v}),r(7213);var n=r(7579),o=r(6660);r.o(o,"GlobalStyle")&&r.d(t,{GlobalStyle:function(){return o.GlobalStyle}}),r.o(o,"ThemeProvider")&&r.d(t,{ThemeProvider:function(){return o.ThemeProvider}}),r.o(o,"chakra")&&r.d(t,{chakra:function(){return o.chakra}}),r.o(o,"css")&&r.d(t,{css:function(){return o.css}}),r.o(o,"forwardRef")&&r.d(t,{forwardRef:function(){return o.forwardRef}}),r.o(o,"propNames")&&r.d(t,{propNames:function(){return o.propNames}}),r.o(o,"useMultiStyleConfig")&&r.d(t,{useMultiStyleConfig:function(){return o.useMultiStyleConfig}}),r.o(o,"useStyleConfig")&&r.d(t,{useStyleConfig:function(){return o.useStyleConfig}})},7579:(e,t,r)=>{"use strict";r.d(t,{v:()=>i,_:()=>l});var n=r(4686);function o(e){return a(e,"[role=group]","[data-group]")}function a(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),n=1;n<t;n++)r[n-1]=arguments[n];return r.map(e).join(", ")}var i={_hover:"&:hover, &[data-hover]",_active:"&:active, &[data-active]",_focus:"&:focus, &[data-focus]",_highlighted:"&[data-highlighted]",_focusWithin:"&:focus-within",_focusVisible:"&:focus-visible",_disabled:a((e=>e+", "+e+":focus, "+e+":hover"),"&[disabled]","&[aria-disabled=true]","&[data-disabled]"),_readOnly:"&[aria-readonly=true], &[readonly], &[data-readonly]",_before:"&::before",_after:"&::after",_empty:"&:empty",_expanded:"&[aria-expanded=true], &[data-expanded]",_checked:"&[aria-checked=true], &[data-checked]",_grabbed:"&[aria-grabbed=true], &[data-grabbed]",_pressed:"&[aria-pressed=true], &[data-pressed]",_invalid:"&[aria-invalid=true], &[data-invalid]",_valid:"&[data-valid], &[data-state=valid]",_loading:"&[data-loading], &[aria-busy=true]",_selected:"&[aria-selected=true], &[data-selected]",_hidden:"&[hidden], &[data-hidden]",_autofill:"&:-webkit-autofill",_even:"&:nth-of-type(even)",_odd:"&:nth-of-type(odd)",_first:"&:first-of-type",_last:"&:last-of-type",_notFirst:"&:not(:first-of-type)",_notLast:"&:not(:last-of-type)",_visited:"&:visited",_activeLink:"&[aria-current=page]",_indeterminate:"&:indeterminate, &[aria-checked=mixed], &[data-indeterminate]",_groupHover:o((e=>e+":hover &, "+e+"[data-hover] &")),_groupFocus:o((e=>e+":focus &, "+e+"[data-focus] &")),_groupActive:o((e=>e+":active &, "+e+"[data-active] &")),_groupDisabled:o((e=>e+":disabled &, "+e+"[data-disabled] &")),_groupInvalid:o((e=>e+":invalid &, "+e+"[data-invalid] &")),_groupChecked:o((e=>e+":checked &, "+e+"[data-checked] &")),_placeholder:"&::placeholder",_fullScreen:"&:fullscreen",_selection:"&::selection"},l=(0,n.objectKeys)(i)},6660:()=>{},7213:(e,t,r)=>{"use strict";r(7579)},5503:(e,t,r)=>{"use strict";r.d(t,{cC:()=>l});var n=r(4547),o=r(7310),a=r(8270),i=(0,n.qC)(o.Oq,o.Cg,o.$_,o.GQ,o.bK,o.Kl,o.eC,o.o_,o.FK,o.AF,o.Dh,o.cp,o.vs,o.pb,o.eR),l=((0,n.qC)(o.Dh,o.bK,o.GQ,o.eC,o.FK).propNames,[...i.propNames,...a._F])},63:(e,t,r)=>{"use strict";r.d(t,{G:()=>o});var n=r(7294);function o(e){return n.forwardRef(e)}},1180:(e,t,r)=>{"use strict";r.d(t,{ColorModeProvider:()=>n.SG,useColorMode:()=>n.If,GlobalStyle:()=>i.ZL,ThemeProvider:()=>i.f6,chakra:()=>l.m$,forwardRef:()=>s.G,useMultiStyleConfig:()=>u.j,useStyleConfig:()=>u.m});var n=r(2270),o=r(9421);r.o(o,"GlobalStyle")&&r.d(t,{GlobalStyle:function(){return o.GlobalStyle}}),r.o(o,"ThemeProvider")&&r.d(t,{ThemeProvider:function(){return o.ThemeProvider}}),r.o(o,"chakra")&&r.d(t,{chakra:function(){return o.chakra}}),r.o(o,"forwardRef")&&r.d(t,{forwardRef:function(){return o.forwardRef}}),r.o(o,"useMultiStyleConfig")&&r.d(t,{useMultiStyleConfig:function(){return o.useMultiStyleConfig}}),r.o(o,"useStyleConfig")&&r.d(t,{useStyleConfig:function(){return o.useStyleConfig}}),r(6418);var a=r(5070);r.o(a,"GlobalStyle")&&r.d(t,{GlobalStyle:function(){return a.GlobalStyle}}),r.o(a,"ThemeProvider")&&r.d(t,{ThemeProvider:function(){return a.ThemeProvider}}),r.o(a,"chakra")&&r.d(t,{chakra:function(){return a.chakra}}),r.o(a,"forwardRef")&&r.d(t,{forwardRef:function(){return a.forwardRef}}),r.o(a,"useMultiStyleConfig")&&r.d(t,{useMultiStyleConfig:function(){return a.useMultiStyleConfig}}),r.o(a,"useStyleConfig")&&r.d(t,{useStyleConfig:function(){return a.useStyleConfig}});var i=r(9676),l=r(9384),s=r(63),u=r(2326)},9676:(e,t,r)=>{"use strict";r.d(t,{f6:()=>u,Fg:()=>c,ZL:()=>p});var n=r(4738),o=r(9421),a=r(4686),i=r(658),l=r(6418),s=r(7294),u=e=>{var{children:t,theme:r}=e,n=s.useContext(l.Ni),o=(0,a.mergeWith)({},n,r);return s.createElement(l.Ni.Provider,{value:o},t)};function c(){var e=s.useContext(l.Ni);if(!e)throw Error("useTheme: `theme` is undefined. Seems you forgot to wrap your app in `<ChakraProvider />`");return e}var[f,d]=(0,a.createContext)({name:"StylesContext",errorMessage:"useStyles: `styles` is undefined. Seems you forgot to wrap the components in `<StylesProvider />` "}),p=()=>{var{colorMode:e}=(0,n.If)();return s.createElement(l.xB,{styles:t=>{var r=(0,a.memoizedGet)(t,"styles.global"),n=(0,i.Pu)(r,{theme:t,colorMode:e});if(n)return(0,o.css)(n)(t)}})}},9384:(e,t,r)=>{"use strict";r.d(t,{m$:()=>p});var n=r(9421),o=r(4686),a=r(395),i=new Set([...n.propNames,"textStyle","layerStyle","apply","isTruncated","noOfLines","focusBorderColor","errorBorderColor","as","__css","css","sx"]),l=new Set(["htmlWidth","htmlHeight","htmlSize"]),s=e=>l.has(e)||!i.has(e),u=r(5284);function c(){return(c=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function f(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}var d=n.propNames.reduce(((e,t)=>("object"!=typeof t&&"function"!=typeof t&&(e[t]=t),e)),{}),p=function(e,t){var r=null!=t?t:{},{baseStyle:i}=r,l=c({},f(r,["baseStyle"]),{shouldForwardProp:s});return(0,a.Z)(e,l)((e=>{var{baseStyle:t}=e;return e=>{var{theme:r,layerStyle:a,textStyle:i,apply:l,noOfLines:s,isTruncated:u,css:c,__css:p,sx:h}=e,m=f(e,["theme","layerStyle","textStyle","apply","noOfLines","isTruncated","css","__css","sx"]),g=(0,o.memoizedGet)(r,"layerStyles."+a,{}),b=(0,o.memoizedGet)(r,"textStyles."+i,{}),y=(0,o.objectFilter)(m,((e,t)=>t in d)),v={};null!=s?v={overflow:"hidden",textOverflow:"ellipsis",display:"-webkit-box",WebkitBoxOrient:"vertical",WebkitLineClamp:s}:u&&(v={overflow:"hidden",textOverflow:"ellipsis",whiteSpace:"nowrap"});var w=(0,o.objectAssign)({},p,t,{apply:l},g,b,v,y,h),k=(0,n.css)(w)(e.theme);return(0,o.objectAssign)(k,(0,o.isFunction)(c)?c(r):c)}})({baseStyle:i}))};u.t6.forEach((e=>{p[e]=p(e)}))},5070:()=>{},5284:(e,t,r)=>{"use strict";r.d(t,{t6:()=>o,Lr:()=>a});var n=r(4686),o=["a","b","article","aside","blockquote","button","caption","cite","circle","code","dd","div","dl","dt","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hr","img","input","kbd","label","li","mark","nav","ol","p","path","pre","q","rect","s","svg","section","select","strong","small","span","sub","sup","table","tbody","td","textarea","tfoot","th","thead","tr","ul"];function a(e){return(0,n.omit)(e,["styleConfig","size","variant","colorScheme"])}},2326:(e,t,r)=>{"use strict";r.d(t,{j:()=>d,m:()=>f});var n=r(4686),o=r(658),a=r(7294),i=r(9590),l=r.n(i),s=r(4738),u=r(9676);function c(){return(c=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function f(e,t,r){var i,{styleConfig:f}=t,d=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(t,["styleConfig"]),{theme:p,colorMode:h}=c({},(0,s.If)(),{theme:(0,u.Fg)()}),m=(0,n.memoizedGet)(p,"components."+e),g=f||m,b=(0,n.mergeWith)({theme:p,colorMode:h},null!=(i=null==g?void 0:g.defaultProps)?i:{},(0,n.filterUndefined)((0,n.omit)(d,["children"]))),y=(0,a.useRef)({});return(0,a.useMemo)((()=>{if(g){var e,t,a,i,s,u=(0,o.Pu)(null!=(e=g.baseStyle)?e:{},b),c=(0,o.Pu)(null!=(t=null==(a=g.variants)?void 0:a[b.variant])?t:{},b),f=(0,o.Pu)(null!=(i=null==(s=g.sizes)?void 0:s[b.size])?i:{},b),d=(0,n.mergeWith)({},u,f,c);(null==r?void 0:r.isMultiPart)&&g.parts&&g.parts.forEach((e=>{var t;d[e]=null!=(t=d[e])?t:{}})),l()(y.current,d)||(y.current=d)}return y.current}),[g,b,null==r?void 0:r.isMultiPart])}function d(e,t){return f(e,t,{isMultiPart:!0})}},886:(e,t,r)=>{"use strict";var n=r(7657);r.o(n,"useColorMode")&&r.d(t,{useColorMode:function(){return n.useColorMode}})},7657:()=>{},7277:(e,t,r)=>{"use strict";function n(e){var t=null==e?0:e.length;return t?e[t-1]:void 0}r.d(t,{s:()=>n,X4:()=>o});var o=e=>Number.isNaN(parseInt(e,10))},3808:(e,t,r)=>{"use strict";function n(e){return"number"==typeof e}function o(e){return Array.isArray(e)}function a(e){return"function"==typeof e}r.d(t,{hj:()=>n,kJ:()=>o,mf:()=>a,Kn:()=>i,Qr:()=>l,Ft:()=>s,HD:()=>u,Ts:()=>c});var i=e=>{var t=typeof e;return null!=e&&("object"===t||"function"===t)&&!o(e)},l=e=>i(e)&&0===Object.keys(e).length,s=e=>null==e;function u(e){return"[object String]"===Object.prototype.toString.call(e)}var c=!1},4461:(e,t,r)=>{"use strict";var n;r.d(t,{jU:()=>a,PB:()=>i,cx:()=>l});try{n=window}catch(e){}var o=e=>{var t,r;return null!=(t=null==e||null==(r=e.ownerDocument)?void 0:r.defaultView)?t:n},a=function(){var e=o();return Boolean(void 0!==e&&e.document&&e.document.createElement)}(),i=e=>e?"":void 0,l=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return t.filter(Boolean).join(" ")}},658:(e,t,r)=>{"use strict";r.d(t,{Pu:()=>o,v0:()=>a,ZT:()=>l});var n=r(3808);function o(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),o=1;o<t;o++)r[o-1]=arguments[o];return(0,n.mf)(e)?e(...r):e}function a(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return function(e){t.some((t=>(null==t||t(e),null==e?void 0:e.defaultPrevented)))}}function i(e){var t;return function(){if(e){for(var r=arguments.length,n=new Array(r),o=0;o<r;o++)n[o]=arguments[o];t=e.apply(this,n),e=null}return t}}var l=()=>{};i((e=>{var{condition:t,message:r}=e;t&&n.Ts&&console.warn(r)})),i((e=>{var{condition:t,message:r}=e;t&&n.Ts&&console.error(r)}))},4686:(e,t,r)=>{"use strict";r.d(t,{cx:()=>o.cx,dataAttr:()=>o.PB,isBrowser:()=>o.jU,isCustomBreakpoint:()=>a.X4,filterUndefined:()=>i.YU,fromEntries:()=>i.sq,memoizedGet:()=>i.Wf,mergeWith:()=>i.bT,objectAssign:()=>i.wB,objectFilter:()=>i.lw,objectKeys:()=>i.Yd,omit:()=>i.CE,__DEV__:()=>l.Ts,isArray:()=>l.kJ,isEmptyObject:()=>l.Qr,isFunction:()=>l.mf,isNull:()=>l.Ft,isNumber:()=>l.hj,isObject:()=>l.Kn,isString:()=>l.HD,createContext:()=>s.kr,mergeRefs:()=>s.lq,isResponsiveObjectLike:()=>u.WN,mapResponsive:()=>u.XQ,objectToArrayNotation:()=>u.kQ});var n=r(5515);r.o(n,"__DEV__")&&r.d(t,{__DEV__:function(){return n.__DEV__}}),r.o(n,"createContext")&&r.d(t,{createContext:function(){return n.createContext}}),r.o(n,"cx")&&r.d(t,{cx:function(){return n.cx}}),r.o(n,"dataAttr")&&r.d(t,{dataAttr:function(){return n.dataAttr}}),r.o(n,"filterUndefined")&&r.d(t,{filterUndefined:function(){return n.filterUndefined}}),r.o(n,"fromEntries")&&r.d(t,{fromEntries:function(){return n.fromEntries}}),r.o(n,"isArray")&&r.d(t,{isArray:function(){return n.isArray}}),r.o(n,"isBrowser")&&r.d(t,{isBrowser:function(){return n.isBrowser}}),r.o(n,"isCustomBreakpoint")&&r.d(t,{isCustomBreakpoint:function(){return n.isCustomBreakpoint}}),r.o(n,"isEmptyObject")&&r.d(t,{isEmptyObject:function(){return n.isEmptyObject}}),r.o(n,"isFunction")&&r.d(t,{isFunction:function(){return n.isFunction}}),r.o(n,"isNull")&&r.d(t,{isNull:function(){return n.isNull}}),r.o(n,"isNumber")&&r.d(t,{isNumber:function(){return n.isNumber}}),r.o(n,"isObject")&&r.d(t,{isObject:function(){return n.isObject}}),r.o(n,"isResponsiveObjectLike")&&r.d(t,{isResponsiveObjectLike:function(){return n.isResponsiveObjectLike}}),r.o(n,"isString")&&r.d(t,{isString:function(){return n.isString}}),r.o(n,"mapResponsive")&&r.d(t,{mapResponsive:function(){return n.mapResponsive}}),r.o(n,"memoizedGet")&&r.d(t,{memoizedGet:function(){return n.memoizedGet}}),r.o(n,"mergeRefs")&&r.d(t,{mergeRefs:function(){return n.mergeRefs}}),r.o(n,"mergeWith")&&r.d(t,{mergeWith:function(){return n.mergeWith}}),r.o(n,"objectAssign")&&r.d(t,{objectAssign:function(){return n.objectAssign}}),r.o(n,"objectFilter")&&r.d(t,{objectFilter:function(){return n.objectFilter}}),r.o(n,"objectKeys")&&r.d(t,{objectKeys:function(){return n.objectKeys}}),r.o(n,"objectToArrayNotation")&&r.d(t,{objectToArrayNotation:function(){return n.objectToArrayNotation}}),r.o(n,"omit")&&r.d(t,{omit:function(){return n.omit}});var o=r(4461),a=r(7277),i=r(4651),l=r(3808),s=r(4691),u=r(6678)},4651:(e,t,r)=>{"use strict";r.d(t,{bT:()=>o.a,wB:()=>i.a,CE:()=>l,Wf:()=>c,lw:()=>f,YU:()=>d,Yd:()=>p,sq:()=>h});var n=r(8554),o=r.n(n),a=r(7418),i=r.n(a);function l(e,t){var r={};return Object.keys(e).forEach((n=>{t.includes(n)||(r[n]=e[n])})),r}var s,u,c=(s=function(e,t,r,n){var o="string"==typeof t?t.split("."):[t];for(n=0;n<o.length&&e;n+=1)e=e[o[n]];return void 0===e?r:e},u=new WeakMap,(e,t,r,n)=>{u.has(e)||u.set(e,new Map);var o=u.get(e),a="string"==typeof t?t.split("."):[t];if(o.has(a))return o.get(a);var i=s(e,t,r,n);return o.set(a,i),i});function f(e,t){var r={};return Object.keys(e).forEach((n=>{var o=e[n];t(o,n,e)&&(r[n]=o)})),r}var d=e=>f(e,(e=>null!=e)),p=e=>Object.keys(e),h=e=>e.reduce(((e,t)=>{var[r,n]=t;return e[r]=n,e}),{})},4691:(e,t,r)=>{"use strict";r.d(t,{kr:()=>a,lq:()=>l});var n=r(7294),o=r(3808);function a(e){void 0===e&&(e={});var{strict:t=!0,errorMessage:r="useContext: `context` is undefined. Seems you forgot to wrap component within the Provider",name:o}=e,a=n.createContext(void 0);return a.displayName=o,[a.Provider,function(){var e=n.useContext(a);if(!e&&t)throw new Error(r);return e},a]}function i(e,t){if(null!=e)if((0,o.mf)(e))e(t);else try{e.current=t}catch(r){throw new Error("Cannot assign value '"+t+"' to ref '"+e+"'")}}function l(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return e=>{t.forEach((t=>i(t,e)))}}},6678:(e,t,r)=>{"use strict";r.d(t,{XQ:()=>l,kQ:()=>s,WN:()=>u});var n=r(3808),o=r(4651),a=r(7277),i=Object.freeze(["base","sm","md","lg","xl"]);function l(e,t){return(0,n.kJ)(e)?e.map((e=>null===e?null:t(e))):(0,n.Kn)(e)?(0,o.Yd)(e).reduce(((r,n)=>(r[n]=t(e[n]),r)),{}):null!=e?t(e):null}function s(e,t){void 0===t&&(t=i);for(var r=t.map((t=>{var r;return null!=(r=e[t])?r:null}));null===(0,a.s)(r);)r.pop();return r}function u(e,t){void 0===t&&(t=i);var r=Object.keys(e);return r.length>0&&r.every((e=>t.includes(e)))}},5515:()=>{},6418:(e,t,r)=>{"use strict";r.d(t,{xB:()=>y,Ni:()=>g,F4:()=>w,Xn:()=>b});var n=r(5354),o=r.n(n),a=r(7294),i=function(){function e(e){this.isSpeedy=void 0===e.speedy||e.speedy,this.tags=[],this.ctr=0,this.nonce=e.nonce,this.key=e.key,this.container=e.container,this.before=null}var t=e.prototype;return t.insert=function(e){if(this.ctr%(this.isSpeedy?65e3:1)==0){var t,r=function(e){var t=document.createElement("style");return t.setAttribute("data-emotion",e.key),void 0!==e.nonce&&t.setAttribute("nonce",e.nonce),t.appendChild(document.createTextNode("")),t}(this);t=0===this.tags.length?this.before:this.tags[this.tags.length-1].nextSibling,this.container.insertBefore(r,t),this.tags.push(r)}var n=this.tags[this.tags.length-1];if(this.isSpeedy){var o=function(e){if(e.sheet)return e.sheet;for(var t=0;t<document.styleSheets.length;t++)if(document.styleSheets[t].ownerNode===e)return document.styleSheets[t]}(n);try{var a=105===e.charCodeAt(1)&&64===e.charCodeAt(0);o.insertRule(e,a?0:o.cssRules.length)}catch(e){}}else n.appendChild(document.createTextNode(e));this.ctr++},t.flush=function(){this.tags.forEach((function(e){return e.parentNode.removeChild(e)})),this.tags=[],this.ctr=0},e}();const l=function(e){function t(e,n,s,u,d){for(var p,h,m,g,w,x=0,S=0,_=0,C=0,E=0,T=0,N=m=p=0,F=0,M=0,B=0,D=0,I=s.length,H=I-1,W="",U="",V="",q="";F<I;){if(h=s.charCodeAt(F),F===H&&0!==S+C+_+x&&(0!==S&&(h=47===S?10:47),C=_=x=0,I++,H++),0===S+C+_+x){if(F===H&&(0<M&&(W=W.replace(f,"")),0<W.trim().length)){switch(h){case 32:case 9:case 59:case 13:case 10:break;default:W+=s.charAt(F)}h=59}switch(h){case 123:for(p=(W=W.trim()).charCodeAt(0),m=1,D=++F;F<I;){switch(h=s.charCodeAt(F)){case 123:m++;break;case 125:m--;break;case 47:switch(h=s.charCodeAt(F+1)){case 42:case 47:e:{for(N=F+1;N<H;++N)switch(s.charCodeAt(N)){case 47:if(42===h&&42===s.charCodeAt(N-1)&&F+2!==N){F=N+1;break e}break;case 10:if(47===h){F=N+1;break e}}F=N}}break;case 91:h++;case 40:h++;case 34:case 39:for(;F++<H&&s.charCodeAt(F)!==h;);}if(0===m)break;F++}switch(m=s.substring(D,F),0===p&&(p=(W=W.replace(c,"").trim()).charCodeAt(0)),p){case 64:switch(0<M&&(W=W.replace(f,"")),h=W.charCodeAt(1)){case 100:case 109:case 115:case 45:M=n;break;default:M=P}if(D=(m=t(n,M,m,h,d+1)).length,0<j&&(w=l(3,m,M=r(P,W,B),n,z,A,D,h,d,u),W=M.join(""),void 0!==w&&0===(D=(m=w.trim()).length)&&(h=0,m="")),0<D)switch(h){case 115:W=W.replace(k,i);case 100:case 109:case 45:m=W+"{"+m+"}";break;case 107:m=(W=W.replace(b,"$1 $2"))+"{"+m+"}",m=1===R||2===R&&a("@"+m,3)?"@-webkit-"+m+"@"+m:"@"+m;break;default:m=W+m,112===u&&(U+=m,m="")}else m="";break;default:m=t(n,r(n,W,B),m,u,d+1)}V+=m,m=B=M=N=p=0,W="",h=s.charCodeAt(++F);break;case 125:case 59:if(1<(D=(W=(0<M?W.replace(f,""):W).trim()).length))switch(0===N&&(p=W.charCodeAt(0),45===p||96<p&&123>p)&&(D=(W=W.replace(" ",":")).length),0<j&&void 0!==(w=l(1,W,n,e,z,A,U.length,u,d,u))&&0===(D=(W=w.trim()).length)&&(W="\0\0"),p=W.charCodeAt(0),h=W.charCodeAt(1),p){case 0:break;case 64:if(105===h||99===h){q+=W+s.charAt(F);break}default:58!==W.charCodeAt(D-1)&&(U+=o(W,p,h,W.charCodeAt(2)))}B=M=N=p=0,W="",h=s.charCodeAt(++F)}}switch(h){case 13:case 10:47===S?S=0:0===1+p&&107!==u&&0<W.length&&(M=1,W+="\0"),0<j*L&&l(0,W,n,e,z,A,U.length,u,d,u),A=1,z++;break;case 59:case 125:if(0===S+C+_+x){A++;break}default:switch(A++,g=s.charAt(F),h){case 9:case 32:if(0===C+x+S)switch(E){case 44:case 58:case 9:case 32:g="";break;default:32!==h&&(g=" ")}break;case 0:g="\\0";break;case 12:g="\\f";break;case 11:g="\\v";break;case 38:0===C+S+x&&(M=B=1,g="\f"+g);break;case 108:if(0===C+S+x+O&&0<N)switch(F-N){case 2:112===E&&58===s.charCodeAt(F-3)&&(O=E);case 8:111===T&&(O=T)}break;case 58:0===C+S+x&&(N=F);break;case 44:0===S+_+C+x&&(M=1,g+="\r");break;case 34:case 39:0===S&&(C=C===h?0:0===C?h:C);break;case 91:0===C+S+_&&x++;break;case 93:0===C+S+_&&x--;break;case 41:0===C+S+x&&_--;break;case 40:if(0===C+S+x){if(0===p)switch(2*E+3*T){case 533:break;default:p=1}_++}break;case 64:0===S+_+C+x+N+m&&(m=1);break;case 42:case 47:if(!(0<C+x+_))switch(S){case 0:switch(2*h+3*s.charCodeAt(F+1)){case 235:S=47;break;case 220:D=F,S=42}break;case 42:47===h&&42===E&&D+2!==F&&(33===s.charCodeAt(D+2)&&(U+=s.substring(D,F+1)),g="",S=0)}}0===S&&(W+=g)}T=E,E=h,F++}if(0<(D=U.length)){if(M=n,0<j&&void 0!==(w=l(2,U,M,e,z,A,D,u,d,u))&&0===(U=w).length)return q+U+V;if(U=M.join(",")+"{"+U+"}",0!=R*O){switch(2!==R||a(U,2)||(O=0),O){case 111:U=U.replace(v,":-moz-$1")+U;break;case 112:U=U.replace(y,"::-webkit-input-$1")+U.replace(y,"::-moz-$1")+U.replace(y,":-ms-input-$1")+U}O=0}}return q+U+V}function r(e,t,r){var o=t.trim().split(m);t=o;var a=o.length,i=e.length;switch(i){case 0:case 1:var l=0;for(e=0===i?"":e[0]+" ";l<a;++l)t[l]=n(e,t[l],r).trim();break;default:var s=l=0;for(t=[];l<a;++l)for(var u=0;u<i;++u)t[s++]=n(e[u]+" ",o[l],r).trim()}return t}function n(e,t,r){var n=t.charCodeAt(0);switch(33>n&&(n=(t=t.trim()).charCodeAt(0)),n){case 38:return t.replace(g,"$1"+e.trim());case 58:return e.trim()+t.replace(g,"$1"+e.trim());default:if(0<1*r&&0<t.indexOf("\f"))return t.replace(g,(58===e.charCodeAt(0)?"":"$1")+e.trim())}return e+t}function o(e,t,r,n){var i=e+";",l=2*t+3*r+4*n;if(944===l){e=i.indexOf(":",9)+1;var s=i.substring(e,i.length-1).trim();return s=i.substring(0,e).trim()+s+";",1===R||2===R&&a(s,1)?"-webkit-"+s+s:s}if(0===R||2===R&&!a(i,1))return i;switch(l){case 1015:return 97===i.charCodeAt(10)?"-webkit-"+i+i:i;case 951:return 116===i.charCodeAt(3)?"-webkit-"+i+i:i;case 963:return 110===i.charCodeAt(5)?"-webkit-"+i+i:i;case 1009:if(100!==i.charCodeAt(4))break;case 969:case 942:return"-webkit-"+i+i;case 978:return"-webkit-"+i+"-moz-"+i+i;case 1019:case 983:return"-webkit-"+i+"-moz-"+i+"-ms-"+i+i;case 883:if(45===i.charCodeAt(8))return"-webkit-"+i+i;if(0<i.indexOf("image-set(",11))return i.replace(E,"$1-webkit-$2")+i;break;case 932:if(45===i.charCodeAt(4))switch(i.charCodeAt(5)){case 103:return"-webkit-box-"+i.replace("-grow","")+"-webkit-"+i+"-ms-"+i.replace("grow","positive")+i;case 115:return"-webkit-"+i+"-ms-"+i.replace("shrink","negative")+i;case 98:return"-webkit-"+i+"-ms-"+i.replace("basis","preferred-size")+i}return"-webkit-"+i+"-ms-"+i+i;case 964:return"-webkit-"+i+"-ms-flex-"+i+i;case 1023:if(99!==i.charCodeAt(8))break;return"-webkit-box-pack"+(s=i.substring(i.indexOf(":",15)).replace("flex-","").replace("space-between","justify"))+"-webkit-"+i+"-ms-flex-pack"+s+i;case 1005:return p.test(i)?i.replace(d,":-webkit-")+i.replace(d,":-moz-")+i:i;case 1e3:switch(t=(s=i.substring(13).trim()).indexOf("-")+1,s.charCodeAt(0)+s.charCodeAt(t)){case 226:s=i.replace(w,"tb");break;case 232:s=i.replace(w,"tb-rl");break;case 220:s=i.replace(w,"lr");break;default:return i}return"-webkit-"+i+"-ms-"+s+i;case 1017:if(-1===i.indexOf("sticky",9))break;case 975:switch(t=(i=e).length-10,l=(s=(33===i.charCodeAt(t)?i.substring(0,t):i).substring(e.indexOf(":",7)+1).trim()).charCodeAt(0)+(0|s.charCodeAt(7))){case 203:if(111>s.charCodeAt(8))break;case 115:i=i.replace(s,"-webkit-"+s)+";"+i;break;case 207:case 102:i=i.replace(s,"-webkit-"+(102<l?"inline-":"")+"box")+";"+i.replace(s,"-webkit-"+s)+";"+i.replace(s,"-ms-"+s+"box")+";"+i}return i+";";case 938:if(45===i.charCodeAt(5))switch(i.charCodeAt(6)){case 105:return s=i.replace("-items",""),"-webkit-"+i+"-webkit-box-"+s+"-ms-flex-"+s+i;case 115:return"-webkit-"+i+"-ms-flex-item-"+i.replace(S,"")+i;default:return"-webkit-"+i+"-ms-flex-line-pack"+i.replace("align-content","").replace(S,"")+i}break;case 973:case 989:if(45!==i.charCodeAt(3)||122===i.charCodeAt(4))break;case 931:case 953:if(!0===C.test(e))return 115===(s=e.substring(e.indexOf(":")+1)).charCodeAt(0)?o(e.replace("stretch","fill-available"),t,r,n).replace(":fill-available",":stretch"):i.replace(s,"-webkit-"+s)+i.replace(s,"-moz-"+s.replace("fill-",""))+i;break;case 962:if(i="-webkit-"+i+(102===i.charCodeAt(5)?"-ms-"+i:"")+i,211===r+n&&105===i.charCodeAt(13)&&0<i.indexOf("transform",10))return i.substring(0,i.indexOf(";",27)+1).replace(h,"$1-webkit-$2")+i}return i}function a(e,t){var r=e.indexOf(1===t?":":"{"),n=e.substring(0,3!==t?r:10);return r=e.substring(r+1,e.length-1),N(2!==t?n:n.replace(_,"$1"),r,t)}function i(e,t){var r=o(t,t.charCodeAt(0),t.charCodeAt(1),t.charCodeAt(2));return r!==t+";"?r.replace(x," or ($1)").substring(4):"("+t+")"}function l(e,t,r,n,o,a,i,l,s,c){for(var f,d=0,p=t;d<j;++d)switch(f=T[d].call(u,e,p,r,n,o,a,i,l,s,c)){case void 0:case!1:case!0:case null:break;default:p=f}if(p!==t)return p}function s(e){return void 0!==(e=e.prefix)&&(N=null,e?"function"!=typeof e?R=1:(R=2,N=e):R=0),s}function u(e,r){var n=e;if(33>n.charCodeAt(0)&&(n=n.trim()),n=[n],0<j){var o=l(-1,r,n,n,z,A,0,0,0,0);void 0!==o&&"string"==typeof o&&(r=o)}var a=t(P,n,r,0,0);return 0<j&&void 0!==(o=l(-2,a,n,n,z,A,a.length,0,0,0))&&(a=o),O=0,A=z=1,a}var c=/^\0+/g,f=/[\0\r\f]/g,d=/: */g,p=/zoo|gra/,h=/([,: ])(transform)/g,m=/,\r+?/g,g=/([\t\r\n ])*\f?&/g,b=/@(k\w+)\s*(\S*)\s*/,y=/::(place)/g,v=/:(read-only)/g,w=/[svh]\w+-[tblr]{2}/,k=/\(\s*(.*)\s*\)/g,x=/([\s\S]*?);/g,S=/-self|flex-/g,_=/[^]*?(:[rp][el]a[\w-]+)[^]*/,C=/stretch|:\s*\w+\-(?:conte|avail)/,E=/([^-])(image-set\()/,A=1,z=1,O=0,R=1,P=[],T=[],j=0,N=null,L=0;return u.use=function e(t){switch(t){case void 0:case null:j=T.length=0;break;default:if("function"==typeof t)T[j++]=t;else if("object"==typeof t)for(var r=0,n=t.length;r<n;++r)e(t[r]);else L=0|!!t}return e},u.set=s,void 0!==e&&s(e),u};var s="/*|*/";function u(e){e&&c.current.insert(e+"}")}var c={current:null},f=function(e,t,r,n,o,a,i,l,f,d){switch(e){case 1:switch(t.charCodeAt(0)){case 64:return c.current.insert(t+";"),"";case 108:if(98===t.charCodeAt(2))return""}break;case 2:if(0===l)return t+s;break;case 3:switch(l){case 102:case 112:return c.current.insert(r[0]+t),"";default:return t+(0===d?s:"")}case-2:t.split("/*|*/}").forEach(u)}};var d=r(8087),p=r(2015);const h=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return(0,p.O)(t)};var m=(0,a.createContext)("undefined"!=typeof HTMLElement?function(e){void 0===e&&(e={});var t,r=e.key||"css";void 0!==e.prefix&&(t={prefix:e.prefix});var n,o=new l(t),a={};n=e.container||document.head;var s,u=document.querySelectorAll("style[data-emotion-"+r+"]");Array.prototype.forEach.call(u,(function(e){e.getAttribute("data-emotion-"+r).split(" ").forEach((function(e){a[e]=!0})),e.parentNode!==n&&n.appendChild(e)})),o.use(e.stylisPlugins)(f),s=function(e,t,r,n){var a=t.name;c.current=r,o(e,t.styles),n&&(d.inserted[a]=!0)};var d={key:r,sheet:new i({key:r,container:n,nonce:e.nonce,speedy:e.speedy}),nonce:e.nonce,inserted:a,registered:{},insert:s};return d}():null),g=(0,a.createContext)({}),b=(m.Provider,function(e){return(0,a.forwardRef)((function(t,r){return(0,a.createElement)(m.Consumer,null,(function(n){return e(t,n,r)}))}))});Object.prototype.hasOwnProperty;var y=b((function(e,t){var r=e.styles;if("function"==typeof r)return(0,a.createElement)(g.Consumer,null,(function(e){var n=(0,p.O)([r(e)]);return(0,a.createElement)(v,{serialized:n,cache:t})}));var n=(0,p.O)([r]);return(0,a.createElement)(v,{serialized:n,cache:t})})),v=function(e){function t(t,r,n){return e.call(this,t,r,n)||this}o()(t,e);var r=t.prototype;return r.componentDidMount=function(){this.sheet=new i({key:this.props.cache.key+"-global",nonce:this.props.cache.sheet.nonce,container:this.props.cache.sheet.container});var e=document.querySelector("style[data-emotion-"+this.props.cache.key+'="'+this.props.serialized.name+'"]');null!==e&&this.sheet.tags.push(e),this.props.cache.sheet.tags.length&&(this.sheet.before=this.props.cache.sheet.tags[0]),this.insertStyles()},r.componentDidUpdate=function(e){e.serialized.name!==this.props.serialized.name&&this.insertStyles()},r.insertStyles=function(){if(void 0!==this.props.serialized.next&&(0,d.M)(this.props.cache,this.props.serialized.next,!0),this.sheet.tags.length){var e=this.sheet.tags[this.sheet.tags.length-1].nextElementSibling;this.sheet.before=e,this.sheet.flush()}this.props.cache.insert("",this.props.serialized,this.sheet,!1)},r.componentWillUnmount=function(){this.sheet.flush()},r.render=function(){return null},t}(a.Component),w=function(){var e=h.apply(void 0,arguments),t="animation-"+e.name;return{name:t,styles:"@keyframes "+t+"{"+e.styles+"}",anim:1,toString:function(){return"_EMO_"+this.name+"_"+this.styles+"_EMO_"}}},k=function e(t){for(var r=t.length,n=0,o="";n<r;n++){var a=t[n];if(null!=a){var i=void 0;switch(typeof a){case"boolean":break;case"object":if(Array.isArray(a))i=e(a);else for(var l in i="",a)a[l]&&l&&(i&&(i+=" "),i+=l);break;default:i=a}i&&(o&&(o+=" "),o+=i)}}return o};function x(e,t,r){var n=[],o=(0,d.f)(e,n,r);return n.length<2?r:o+t(n)}b((function(e,t){return(0,a.createElement)(g.Consumer,null,(function(r){var n=function(){for(var e=arguments.length,r=new Array(e),n=0;n<e;n++)r[n]=arguments[n];var o=(0,p.O)(r,t.registered);return(0,d.M)(t,o,!1),t.key+"-"+o.name},o={css:n,cx:function(){for(var e=arguments.length,r=new Array(e),o=0;o<e;o++)r[o]=arguments[o];return x(t.registered,n,k(r))},theme:r};return e.children(o)}))}))},2717:(e,t,r)=>{"use strict";r.d(t,{Z:()=>n});const n=function(e){var t={};return function(r){return void 0===t[r]&&(t[r]=e(r)),t[r]}}},2015:(e,t,r)=>{"use strict";r.d(t,{O:()=>m});const n=function(e){for(var t,r=0,n=0,o=e.length;o>=4;++n,o-=4)t=1540483477*(65535&(t=255&e.charCodeAt(n)|(255&e.charCodeAt(++n))<<8|(255&e.charCodeAt(++n))<<16|(255&e.charCodeAt(++n))<<24))+(59797*(t>>>16)<<16),r=1540483477*(65535&(t^=t>>>24))+(59797*(t>>>16)<<16)^1540483477*(65535&r)+(59797*(r>>>16)<<16);switch(o){case 3:r^=(255&e.charCodeAt(n+2))<<16;case 2:r^=(255&e.charCodeAt(n+1))<<8;case 1:r=1540483477*(65535&(r^=255&e.charCodeAt(n)))+(59797*(r>>>16)<<16)}return(((r=1540483477*(65535&(r^=r>>>13))+(59797*(r>>>16)<<16))^r>>>15)>>>0).toString(36)},o={animationIterationCount:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1};var a=r(2717),i=/[A-Z]|^ms/g,l=/_EMO_([^_]+?)_([^]*?)_EMO_/g,s=function(e){return 45===e.charCodeAt(1)},u=function(e){return null!=e&&"boolean"!=typeof e},c=(0,a.Z)((function(e){return s(e)?e:e.replace(i,"-$&").toLowerCase()})),f=function(e,t){switch(e){case"animation":case"animationName":if("string"==typeof t)return t.replace(l,(function(e,t,r){return p={name:t,styles:r,next:p},t}))}return 1===o[e]||s(e)||"number"!=typeof t||0===t?t:t+"px"};function d(e,t,r,n){if(null==r)return"";if(void 0!==r.__emotion_styles)return r;switch(typeof r){case"boolean":return"";case"object":if(1===r.anim)return p={name:r.name,styles:r.styles,next:p},r.name;if(void 0!==r.styles){var o=r.next;if(void 0!==o)for(;void 0!==o;)p={name:o.name,styles:o.styles,next:p},o=o.next;return r.styles+";"}return function(e,t,r){var n="";if(Array.isArray(r))for(var o=0;o<r.length;o++)n+=d(e,t,r[o],!1);else for(var a in r){var i=r[a];if("object"!=typeof i)null!=t&&void 0!==t[i]?n+=a+"{"+t[i]+"}":u(i)&&(n+=c(a)+":"+f(a,i)+";");else if(!Array.isArray(i)||"string"!=typeof i[0]||null!=t&&void 0!==t[i[0]]){var l=d(e,t,i,!1);switch(a){case"animation":case"animationName":n+=c(a)+":"+l+";";break;default:n+=a+"{"+l+"}"}}else for(var s=0;s<i.length;s++)u(i[s])&&(n+=c(a)+":"+f(a,i[s])+";")}return n}(e,t,r);case"function":if(void 0!==e){var a=p,i=r(e);return p=a,d(e,t,i,n)}}if(null==t)return r;var l=t[r];return void 0===l||n?r:l}var p,h=/label:\s*([^\s;\n{]+)\s*;/g,m=function(e,t,r){if(1===e.length&&"object"==typeof e[0]&&null!==e[0]&&void 0!==e[0].styles)return e[0];var o=!0,a="";p=void 0;var i=e[0];null==i||void 0===i.raw?(o=!1,a+=d(r,t,i,!1)):a+=i[0];for(var l=1;l<e.length;l++)a+=d(r,t,e[l],46===a.charCodeAt(a.length-1)),o&&(a+=i[l]);h.lastIndex=0;for(var s,u="";null!==(s=h.exec(a));)u+="-"+s[1];return{name:n(a)+u,styles:a,next:p}}},395:(e,t,r)=>{"use strict";r.d(t,{Z:()=>y});var n=r(9713),o=r.n(n),a=r(7294),i=r(2717),l=/^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/;const s=(0,i.Z)((function(e){return l.test(e)||111===e.charCodeAt(0)&&110===e.charCodeAt(1)&&e.charCodeAt(2)<91}));var u=r(6418),c=r(8087),f=r(2015),d=s,p=function(e){return"theme"!==e&&"innerRef"!==e},h=function(e){return"string"==typeof e&&e.charCodeAt(0)>96?d:p};function m(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function g(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?m(r,!0).forEach((function(t){o()(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):m(r).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var b=function e(t,r){var n,o,i;void 0!==r&&(n=r.label,i=r.target,o=t.__emotion_forwardProp&&r.shouldForwardProp?function(e){return t.__emotion_forwardProp(e)&&r.shouldForwardProp(e)}:r.shouldForwardProp);var l=t.__emotion_real===t,s=l&&t.__emotion_base||t;"function"!=typeof o&&l&&(o=t.__emotion_forwardProp);var d=o||h(s),p=!d("as");return function(){var m=arguments,b=l&&void 0!==t.__emotion_styles?t.__emotion_styles.slice(0):[];if(void 0!==n&&b.push("label:"+n+";"),null==m[0]||void 0===m[0].raw)b.push.apply(b,m);else{b.push(m[0][0]);for(var y=m.length,v=1;v<y;v++)b.push(m[v],m[0][v])}var w=(0,u.Xn)((function(e,t,r){return(0,a.createElement)(u.Ni.Consumer,null,(function(n){var l=p&&e.as||s,u="",m=[],g=e;if(null==e.theme){for(var y in g={},e)g[y]=e[y];g.theme=n}"string"==typeof e.className?u=(0,c.f)(t.registered,m,e.className):null!=e.className&&(u=e.className+" ");var v=(0,f.O)(b.concat(m),t.registered,g);(0,c.M)(t,v,"string"==typeof l),u+=t.key+"-"+v.name,void 0!==i&&(u+=" "+i);var w=p&&void 0===o?h(l):d,k={};for(var x in e)p&&"as"===x||w(x)&&(k[x]=e[x]);return k.className=u,k.ref=r||e.innerRef,(0,a.createElement)(l,k)}))}));return w.displayName=void 0!==n?n:"Styled("+("string"==typeof s?s:s.displayName||s.name||"Component")+")",w.defaultProps=t.defaultProps,w.__emotion_real=w,w.__emotion_base=s,w.__emotion_styles=b,w.__emotion_forwardProp=o,Object.defineProperty(w,"toString",{value:function(){return"."+i}}),w.withComponent=function(t,n){return e(t,void 0!==n?g({},r||{},{},n):r).apply(void 0,b)},w}}.bind();["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","marquee","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","tspan"].forEach((function(e){b[e]=b(e)}));const y=b},8087:(e,t,r)=>{"use strict";function n(e,t,r){var n="";return r.split(" ").forEach((function(r){void 0!==e[r]?t.push(e[r]):n+=r+" "})),n}r.d(t,{f:()=>n,M:()=>o});var o=function(e,t,r){var n=e.key+"-"+t.name;if(!1===r&&void 0===e.registered[n]&&(e.registered[n]=t.styles),void 0===e.inserted[t.name]){var o=t;do{e.insert("."+n,o,e.sheet,!0),o=o.next}while(void 0!==o)}}},4547:(e,t,r)=>{"use strict";r.d(t,{jo:()=>c,By:()=>h,qC:()=>m});var n=r(7418),o=r.n(n),a=function(e,t){var r=o()({},e,t);for(var n in e){var a;e[n]&&"object"==typeof t[n]&&o()(r,((a={})[n]=o()(e[n],t[n]),a))}return r},i={breakpoints:[40,52,64].map((function(e){return e+"em"}))},l=function(e){return"@media screen and (min-width: "+e+")"},s=function(e,t){return u(t,e,e)},u=function(e,t,r,n,o){for(t=t&&t.split?t.split("."):[t],n=0;n<t.length;n++)e=e?e[t[n]]:o;return e===o?r:e},c=function e(t){var r={},n=function(e){var n,s,c={},p=!1,h=e.theme&&e.theme.disableStyledSystemCache;for(var m in e)if(t[m]){var g=t[m],b=e[m],y=u(e.theme,g.scale,g.defaults);if("object"!=typeof b)o()(c,g(b,y,e));else{if(r.breakpoints=!h&&r.breakpoints||u(e.theme,"breakpoints",i.breakpoints),Array.isArray(b)){r.media=!h&&r.media||[null].concat(r.breakpoints.map(l)),c=a(c,f(r.media,g,y,b,e));continue}null!==b&&(c=a(c,d(r.breakpoints,g,y,b,e)),p=!0)}}return p&&(n=c,s={},Object.keys(n).sort((function(e,t){return e.localeCompare(t,void 0,{numeric:!0,sensitivity:"base"})})).forEach((function(e){s[e]=n[e]})),c=s),c};n.config=t,n.propNames=Object.keys(t),n.cache=r;var s=Object.keys(t).filter((function(e){return"config"!==e}));return s.length>1&&s.forEach((function(r){var o;n[r]=e(((o={})[r]=t[r],o))})),n},f=function(e,t,r,n,a){var i={};return n.slice(0,e.length).forEach((function(n,l){var s,u=e[l],c=t(n,r,a);u?o()(i,((s={})[u]=o()({},i[u],c),s)):o()(i,c)})),i},d=function(e,t,r,n,a){var i={};for(var s in n){var u=e[s],c=t(n[s],r,a);if(u){var f,d=l(u);o()(i,((f={})[d]=o()({},i[d],c),f))}else o()(i,c)}return i},p=function(e){var t=e.properties,r=e.property,n=e.scale,o=e.transform,a=void 0===o?s:o,i=e.defaultScale;t=t||[r];var l=function(e,r,n){var o={},i=a(e,r,n);if(null!==i)return t.forEach((function(e){o[e]=i})),o};return l.scale=n,l.defaults=i,l},h=function(e){void 0===e&&(e={});var t={};return Object.keys(e).forEach((function(r){var n=e[r];t[r]=!0!==n?"function"!=typeof n?p(n):n:p({property:r,scale:r})})),c(t)},m=function(){for(var e={},t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];r.forEach((function(t){t&&t.config&&o()(e,t.config)}));var a=c(e);return a}},4305:e=>{e.exports=function(e){var t=e.length;if(!e||!t)return null;for(var r=t;r--;)if(!isNaN(e[r]))return e.slice(r+1,t)||null;return null}},8554:(e,t,r)=>{e=r.nmd(e);var n="__lodash_hash_undefined__",o=9007199254740991,a="[object Arguments]",i="[object Function]",l="[object Object]",s=/^\[object .+?Constructor\]$/,u=/^(?:0|[1-9]\d*)$/,c={};c["[object Float32Array]"]=c["[object Float64Array]"]=c["[object Int8Array]"]=c["[object Int16Array]"]=c["[object Int32Array]"]=c["[object Uint8Array]"]=c["[object Uint8ClampedArray]"]=c["[object Uint16Array]"]=c["[object Uint32Array]"]=!0,c[a]=c["[object Array]"]=c["[object ArrayBuffer]"]=c["[object Boolean]"]=c["[object DataView]"]=c["[object Date]"]=c["[object Error]"]=c[i]=c["[object Map]"]=c["[object Number]"]=c[l]=c["[object RegExp]"]=c["[object Set]"]=c["[object String]"]=c["[object WeakMap]"]=!1;var f="object"==typeof r.g&&r.g&&r.g.Object===Object&&r.g,d="object"==typeof self&&self&&self.Object===Object&&self,p=f||d||Function("return this")(),h=t&&!t.nodeType&&t,m=h&&e&&!e.nodeType&&e,g=m&&m.exports===h,b=g&&f.process,y=function(){try{return m&&m.require&&m.require("util").types||b&&b.binding&&b.binding("util")}catch(e){}}(),v=y&&y.isTypedArray;function w(e,t,r){switch(r.length){case 0:return e.call(t);case 1:return e.call(t,r[0]);case 2:return e.call(t,r[0],r[1]);case 3:return e.call(t,r[0],r[1],r[2])}return e.apply(t,r)}var k,x,S,_=Array.prototype,C=Function.prototype,E=Object.prototype,A=p["__core-js_shared__"],z=C.toString,O=E.hasOwnProperty,R=(k=/[^.]+$/.exec(A&&A.keys&&A.keys.IE_PROTO||""))?"Symbol(src)_1."+k:"",P=E.toString,T=z.call(Object),j=RegExp("^"+z.call(O).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),N=g?p.Buffer:void 0,L=p.Symbol,F=p.Uint8Array,M=(N&&N.allocUnsafe,x=Object.getPrototypeOf,S=Object,function(e){return x(S(e))}),B=Object.create,D=E.propertyIsEnumerable,I=_.splice,H=L?L.toStringTag:void 0,W=function(){try{var e=le(Object,"defineProperty");return e({},"",{}),e}catch(e){}}(),U=N?N.isBuffer:void 0,V=Math.max,q=Date.now,G=le(p,"Map"),$=le(Object,"create"),Q=function(){function e(){}return function(t){if(!ve(t))return{};if(B)return B(t);e.prototype=t;var r=new e;return e.prototype=void 0,r}}();function K(e){var t=-1,r=null==e?0:e.length;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1])}}function X(e){var t=-1,r=null==e?0:e.length;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1])}}function Y(e){var t=-1,r=null==e?0:e.length;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1])}}function Z(e){var t=this.__data__=new X(e);this.size=t.size}function J(e,t,r){(void 0!==r&&!de(e[t],r)||void 0===r&&!(t in e))&&re(e,t,r)}function ee(e,t,r){var n=e[t];O.call(e,t)&&de(n,r)&&(void 0!==r||t in e)||re(e,t,r)}function te(e,t){for(var r=e.length;r--;)if(de(e[r][0],t))return r;return-1}function re(e,t,r){"__proto__"==t&&W?W(e,t,{configurable:!0,enumerable:!0,value:r,writable:!0}):e[t]=r}K.prototype.clear=function(){this.__data__=$?$(null):{},this.size=0},K.prototype.delete=function(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t},K.prototype.get=function(e){var t=this.__data__;if($){var r=t[e];return r===n?void 0:r}return O.call(t,e)?t[e]:void 0},K.prototype.has=function(e){var t=this.__data__;return $?void 0!==t[e]:O.call(t,e)},K.prototype.set=function(e,t){var r=this.__data__;return this.size+=this.has(e)?0:1,r[e]=$&&void 0===t?n:t,this},X.prototype.clear=function(){this.__data__=[],this.size=0},X.prototype.delete=function(e){var t=this.__data__,r=te(t,e);return!(r<0||(r==t.length-1?t.pop():I.call(t,r,1),--this.size,0))},X.prototype.get=function(e){var t=this.__data__,r=te(t,e);return r<0?void 0:t[r][1]},X.prototype.has=function(e){return te(this.__data__,e)>-1},X.prototype.set=function(e,t){var r=this.__data__,n=te(r,e);return n<0?(++this.size,r.push([e,t])):r[n][1]=t,this},Y.prototype.clear=function(){this.size=0,this.__data__={hash:new K,map:new(G||X),string:new K}},Y.prototype.delete=function(e){var t=ie(this,e).delete(e);return this.size-=t?1:0,t},Y.prototype.get=function(e){return ie(this,e).get(e)},Y.prototype.has=function(e){return ie(this,e).has(e)},Y.prototype.set=function(e,t){var r=ie(this,e),n=r.size;return r.set(e,t),this.size+=r.size==n?0:1,this},Z.prototype.clear=function(){this.__data__=new X,this.size=0},Z.prototype.delete=function(e){var t=this.__data__,r=t.delete(e);return this.size=t.size,r},Z.prototype.get=function(e){return this.__data__.get(e)},Z.prototype.has=function(e){return this.__data__.has(e)},Z.prototype.set=function(e,t){var r=this.__data__;if(r instanceof X){var n=r.__data__;if(!G||n.length<199)return n.push([e,t]),this.size=++r.size,this;r=this.__data__=new Y(n)}return r.set(e,t),this.size=r.size,this};function ne(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":H&&H in Object(e)?function(e){var t=O.call(e,H),r=e[H];try{e[H]=void 0;var n=!0}catch(e){}var o=P.call(e);return n&&(t?e[H]=r:delete e[H]),o}(e):function(e){return P.call(e)}(e)}function oe(e){return we(e)&&ne(e)==a}function ae(e,t,r,n,o){e!==t&&function(e,t,r){for(var n=-1,o=Object(e),a=r(e),i=a.length;i--;){var l=a[++n];if(!1===t(o[l],l,o))break}}(t,(function(a,i){if(o||(o=new Z),ve(a))!function(e,t,r,n,o,a,i){var s=ce(e,r),u=ce(t,r),c=i.get(u);if(c)J(e,r,c);else{var f,d,p,h,m,g=a?a(s,u,r+"",e,t,i):void 0,b=void 0===g;if(b){var y=he(u),v=!y&&ge(u),w=!y&&!v&&ke(u);g=u,y||v||w?he(s)?g=s:we(m=s)&&me(m)?g=function(e,t){var r=-1,n=e.length;for(t||(t=Array(n));++r<n;)t[r]=e[r];return t}(s):v?(b=!1,g=function(e,t){return e.slice()}(u)):w?(b=!1,h=new(p=(f=u).buffer).constructor(p.byteLength),new F(h).set(new F(p)),d=h,g=new f.constructor(d,f.byteOffset,f.length)):g=[]:function(e){if(!we(e)||ne(e)!=l)return!1;var t=M(e);if(null===t)return!0;var r=O.call(t,"constructor")&&t.constructor;return"function"==typeof r&&r instanceof r&&z.call(r)==T}(u)||pe(u)?(g=s,pe(s)?g=function(e){return function(e,t,r,n){var o=!r;r||(r={});for(var a=-1,i=t.length;++a<i;){var l=t[a],s=void 0;void 0===s&&(s=e[l]),o?re(r,l,s):ee(r,l,s)}return r}(e,xe(e))}(s):ve(s)&&!be(s)||(g=function(e){return"function"!=typeof e.constructor||ue(e)?{}:Q(M(e))}(u))):b=!1}b&&(i.set(u,g),o(g,u,n,a,i),i.delete(u)),J(e,r,g)}}(e,t,i,r,ae,n,o);else{var s=n?n(ce(e,i),a,i+"",e,t,o):void 0;void 0===s&&(s=a),J(e,i,s)}}),xe)}function ie(e,t){var r,n,o=e.__data__;return("string"==(n=typeof(r=t))||"number"==n||"symbol"==n||"boolean"==n?"__proto__"!==r:null===r)?o["string"==typeof t?"string":"hash"]:o.map}function le(e,t){var r=function(e,t){return null==e?void 0:e[t]}(e,t);return function(e){return!(!ve(e)||function(e){return!!R&&R in e}(e))&&(be(e)?j:s).test(function(e){if(null!=e){try{return z.call(e)}catch(e){}try{return e+""}catch(e){}}return""}(e))}(r)?r:void 0}function se(e,t){var r=typeof e;return!!(t=null==t?o:t)&&("number"==r||"symbol"!=r&&u.test(e))&&e>-1&&e%1==0&&e<t}function ue(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||E)}function ce(e,t){if(("constructor"!==t||"function"!=typeof e[t])&&"__proto__"!=t)return e[t]}var fe=function(e){var t=0,r=0;return function(){var n=q(),o=16-(n-r);if(r=n,o>0){if(++t>=800)return arguments[0]}else t=0;return e.apply(void 0,arguments)}}(W?function(e,t){return W(e,"toString",{configurable:!0,enumerable:!1,value:(r=t,function(){return r}),writable:!0});var r}:Ce);function de(e,t){return e===t||e!=e&&t!=t}var pe=oe(function(){return arguments}())?oe:function(e){return we(e)&&O.call(e,"callee")&&!D.call(e,"callee")},he=Array.isArray;function me(e){return null!=e&&ye(e.length)&&!be(e)}var ge=U||function(){return!1};function be(e){if(!ve(e))return!1;var t=ne(e);return t==i||"[object GeneratorFunction]"==t||"[object AsyncFunction]"==t||"[object Proxy]"==t}function ye(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=o}function ve(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)}function we(e){return null!=e&&"object"==typeof e}var ke=v?function(e){return function(t){return e(t)}}(v):function(e){return we(e)&&ye(e.length)&&!!c[ne(e)]};function xe(e){return me(e)?function(e,t){var r=he(e),n=!r&&pe(e),o=!r&&!n&&ge(e),a=!r&&!n&&!o&&ke(e),i=r||n||o||a,l=i?function(e,t){for(var r=-1,n=Array(e);++r<e;)n[r]=t(r);return n}(e.length,String):[],s=l.length;for(var u in e)!t&&!O.call(e,u)||i&&("length"==u||o&&("offset"==u||"parent"==u)||a&&("buffer"==u||"byteLength"==u||"byteOffset"==u)||se(u,s))||l.push(u);return l}(e,!0):function(e){if(!ve(e))return function(e){var t=[];if(null!=e)for(var r in Object(e))t.push(r);return t}(e);var t=ue(e),r=[];for(var n in e)("constructor"!=n||!t&&O.call(e,n))&&r.push(n);return r}(e)}var Se,_e=(Se=function(e,t,r,n){ae(e,t,r,n)},function(e,t){return fe(function(e,t,r){return t=V(void 0===t?e.length-1:t,0),function(){for(var n=arguments,o=-1,a=V(n.length-t,0),i=Array(a);++o<a;)i[o]=n[t+o];o=-1;for(var l=Array(t+1);++o<t;)l[o]=n[o];return l[t]=r(i),w(e,this,l)}}(e,t,Ce),e+"")}((function(e,t){var r=-1,n=t.length,o=n>1?t[n-1]:void 0,a=n>2?t[2]:void 0;for(o=Se.length>3&&"function"==typeof o?(n--,o):void 0,a&&function(e,t,r){if(!ve(r))return!1;var n=typeof t;return!!("number"==n?me(r)&&se(t,r.length):"string"==n&&t in r)&&de(r[t],e)}(t[0],t[1],a)&&(o=n<3?void 0:o,n=1),e=Object(e);++r<n;){var i=t[r];i&&Se(e,i,r,o)}return e})));function Ce(e){return e}e.exports=_e},7418:e=>{"use strict";var t=Object.getOwnPropertySymbols,r=Object.prototype.hasOwnProperty,n=Object.prototype.propertyIsEnumerable;function o(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},r=0;r<10;r++)t["_"+String.fromCharCode(r)]=r;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var n={};return"abcdefghijklmnopqrst".split("").forEach((function(e){n[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},n)).join("")}catch(e){return!1}}()?Object.assign:function(e,a){for(var i,l,s=o(e),u=1;u<arguments.length;u++){for(var c in i=Object(arguments[u]))r.call(i,c)&&(s[c]=i[c]);if(t){l=t(i);for(var f=0;f<l.length;f++)n.call(i,l[f])&&(s[l[f]]=i[l[f]])}}return s}},2703:(e,t,r)=>{"use strict";var n=r(414);function o(){}function a(){}a.resetWarningCache=o,e.exports=function(){function e(e,t,r,o,a,i){if(i!==n){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function t(){return e}e.isRequired=e;var r={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:a,resetWarningCache:o};return r.PropTypes=r,r}},5697:(e,t,r)=>{e.exports=r(2703)()},414:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},4448:(e,t,r)=>{"use strict";var n=r(7294),o=r(7418),a=r(3840);function i(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=1;r<arguments.length;r++)t+="&args[]="+encodeURIComponent(arguments[r]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!n)throw Error(i(227));var l=new Set,s={};function u(e,t){c(e,t),c(e+"Capture",t)}function c(e,t){for(s[e]=t,e=0;e<t.length;e++)l.add(t[e])}var f=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p=Object.prototype.hasOwnProperty,h={},m={};function g(e,t,r,n,o,a,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=n,this.attributeNamespace=o,this.mustUseProperty=r,this.propertyName=e,this.type=t,this.sanitizeURL=a,this.removeEmptyString=i}var b={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){b[e]=new g(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];b[t]=new g(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){b[e]=new g(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){b[e]=new g(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){b[e]=new g(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){b[e]=new g(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){b[e]=new g(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){b[e]=new g(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){b[e]=new g(e,5,!1,e.toLowerCase(),null,!1,!1)}));var y=/[\-:]([a-z])/g;function v(e){return e[1].toUpperCase()}function w(e,t,r,n){var o=b.hasOwnProperty(t)?b[t]:null;(null!==o?0===o.type:!n&&2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1]))||(function(e,t,r,n){if(null==t||function(e,t,r,n){if(null!==r&&0===r.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!n&&(null!==r?!r.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,r,n))return!0;if(n)return!1;if(null!==r)switch(r.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,r,o,n)&&(r=null),n||null===o?function(e){return!!p.call(m,e)||!p.call(h,e)&&(d.test(e)?m[e]=!0:(h[e]=!0,!1))}(t)&&(null===r?e.removeAttribute(t):e.setAttribute(t,""+r)):o.mustUseProperty?e[o.propertyName]=null===r?3!==o.type&&"":r:(t=o.attributeName,n=o.attributeNamespace,null===r?e.removeAttribute(t):(r=3===(o=o.type)||4===o&&!0===r?"":""+r,n?e.setAttributeNS(n,t,r):e.setAttribute(t,r))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(y,v);b[t]=new g(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(y,v);b[t]=new g(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(y,v);b[t]=new g(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){b[e]=new g(e,1,!1,e.toLowerCase(),null,!1,!1)})),b.xlinkHref=new g("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){b[e]=new g(e,1,!1,e.toLowerCase(),null,!0,!0)}));var k=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,x=60103,S=60106,_=60107,C=60108,E=60114,A=60109,z=60110,O=60112,R=60113,P=60120,T=60115,j=60116,N=60121,L=60128,F=60129,M=60130,B=60131;if("function"==typeof Symbol&&Symbol.for){var D=Symbol.for;x=D("react.element"),S=D("react.portal"),_=D("react.fragment"),C=D("react.strict_mode"),E=D("react.profiler"),A=D("react.provider"),z=D("react.context"),O=D("react.forward_ref"),R=D("react.suspense"),P=D("react.suspense_list"),T=D("react.memo"),j=D("react.lazy"),N=D("react.block"),D("react.scope"),L=D("react.opaque.id"),F=D("react.debug_trace_mode"),M=D("react.offscreen"),B=D("react.legacy_hidden")}var I,H="function"==typeof Symbol&&Symbol.iterator;function W(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=H&&e[H]||e["@@iterator"])?e:null}function U(e){if(void 0===I)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);I=t&&t[1]||""}return"\n"+I+e}var V=!1;function q(e,t){if(!e||V)return"";V=!0;var r=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var n=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){n=e}e.call(t.prototype)}else{try{throw Error()}catch(e){n=e}e()}}catch(e){if(e&&n&&"string"==typeof e.stack){for(var o=e.stack.split("\n"),a=n.stack.split("\n"),i=o.length-1,l=a.length-1;1<=i&&0<=l&&o[i]!==a[l];)l--;for(;1<=i&&0<=l;i--,l--)if(o[i]!==a[l]){if(1!==i||1!==l)do{if(i--,0>--l||o[i]!==a[l])return"\n"+o[i].replace(" at new "," at ")}while(1<=i&&0<=l);break}}}finally{V=!1,Error.prepareStackTrace=r}return(e=e?e.displayName||e.name:"")?U(e):""}function G(e){switch(e.tag){case 5:return U(e.type);case 16:return U("Lazy");case 13:return U("Suspense");case 19:return U("SuspenseList");case 0:case 2:case 15:return q(e.type,!1);case 11:return q(e.type.render,!1);case 22:return q(e.type._render,!1);case 1:return q(e.type,!0);default:return""}}function $(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case _:return"Fragment";case S:return"Portal";case E:return"Profiler";case C:return"StrictMode";case R:return"Suspense";case P:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case z:return(e.displayName||"Context")+".Consumer";case A:return(e._context.displayName||"Context")+".Provider";case O:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case T:return $(e.type);case N:return $(e._render);case j:t=e._payload,e=e._init;try{return $(e(t))}catch(e){}}return null}function Q(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function K(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function X(e){e._valueTracker||(e._valueTracker=function(e){var t=K(e)?"checked":"value",r=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),n=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==r&&"function"==typeof r.get&&"function"==typeof r.set){var o=r.get,a=r.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){n=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:r.enumerable}),{getValue:function(){return n},setValue:function(e){n=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Y(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var r=t.getValue(),n="";return e&&(n=K(e)?e.checked?"true":"false":e.value),(e=n)!==r&&(t.setValue(e),!0)}function Z(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function J(e,t){var r=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=r?r:e._wrapperState.initialChecked})}function ee(e,t){var r=null==t.defaultValue?"":t.defaultValue,n=null!=t.checked?t.checked:t.defaultChecked;r=Q(null!=t.value?t.value:r),e._wrapperState={initialChecked:n,initialValue:r,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function te(e,t){null!=(t=t.checked)&&w(e,"checked",t,!1)}function re(e,t){te(e,t);var r=Q(t.value),n=t.type;if(null!=r)"number"===n?(0===r&&""===e.value||e.value!=r)&&(e.value=""+r):e.value!==""+r&&(e.value=""+r);else if("submit"===n||"reset"===n)return void e.removeAttribute("value");t.hasOwnProperty("value")?oe(e,t.type,r):t.hasOwnProperty("defaultValue")&&oe(e,t.type,Q(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function ne(e,t,r){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var n=t.type;if(!("submit"!==n&&"reset"!==n||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,r||t===e.value||(e.value=t),e.defaultValue=t}""!==(r=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==r&&(e.name=r)}function oe(e,t,r){"number"===t&&Z(e.ownerDocument)===e||(null==r?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+r&&(e.defaultValue=""+r))}function ae(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return n.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function ie(e,t,r,n){if(e=e.options,t){t={};for(var o=0;o<r.length;o++)t["$"+r[o]]=!0;for(r=0;r<e.length;r++)o=t.hasOwnProperty("$"+e[r].value),e[r].selected!==o&&(e[r].selected=o),o&&n&&(e[r].defaultSelected=!0)}else{for(r=""+Q(r),t=null,o=0;o<e.length;o++){if(e[o].value===r)return e[o].selected=!0,void(n&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function le(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(i(91));return o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function se(e,t){var r=t.value;if(null==r){if(r=t.children,t=t.defaultValue,null!=r){if(null!=t)throw Error(i(92));if(Array.isArray(r)){if(!(1>=r.length))throw Error(i(93));r=r[0]}t=r}null==t&&(t=""),r=t}e._wrapperState={initialValue:Q(r)}}function ue(e,t){var r=Q(t.value),n=Q(t.defaultValue);null!=r&&((r=""+r)!==e.value&&(e.value=r),null==t.defaultValue&&e.defaultValue!==r&&(e.defaultValue=r)),null!=n&&(e.defaultValue=""+n)}function ce(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var fe="http://www.w3.org/1999/xhtml";function de(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function pe(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?de(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var he,me,ge=(me=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((he=he||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=he.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,r,n){MSApp.execUnsafeLocalFunction((function(){return me(e,t)}))}:me);function be(e,t){if(t){var r=e.firstChild;if(r&&r===e.lastChild&&3===r.nodeType)return void(r.nodeValue=t)}e.textContent=t}var ye={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},ve=["Webkit","ms","Moz","O"];function we(e,t,r){return null==t||"boolean"==typeof t||""===t?"":r||"number"!=typeof t||0===t||ye.hasOwnProperty(e)&&ye[e]?(""+t).trim():t+"px"}function ke(e,t){for(var r in e=e.style,t)if(t.hasOwnProperty(r)){var n=0===r.indexOf("--"),o=we(r,t[r],n);"float"===r&&(r="cssFloat"),n?e.setProperty(r,o):e[r]=o}}Object.keys(ye).forEach((function(e){ve.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ye[t]=ye[e]}))}));var xe=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Se(e,t){if(t){if(xe[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(i(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(i(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(i(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(i(62))}}function _e(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function Ce(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Ee=null,Ae=null,ze=null;function Oe(e){if(e=Zn(e)){if("function"!=typeof Ee)throw Error(i(280));var t=e.stateNode;t&&(t=eo(t),Ee(e.stateNode,e.type,t))}}function Re(e){Ae?ze?ze.push(e):ze=[e]:Ae=e}function Pe(){if(Ae){var e=Ae,t=ze;if(ze=Ae=null,Oe(e),t)for(e=0;e<t.length;e++)Oe(t[e])}}function Te(e,t){return e(t)}function je(e,t,r,n,o){return e(t,r,n,o)}function Ne(){}var Le=Te,Fe=!1,Me=!1;function Be(){null===Ae&&null===ze||(Ne(),Pe())}function De(e,t){var r=e.stateNode;if(null===r)return null;var n=eo(r);if(null===n)return null;r=n[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(n=!n.disabled)||(n=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!n;break e;default:e=!1}if(e)return null;if(r&&"function"!=typeof r)throw Error(i(231,t,typeof r));return r}var Ie=!1;if(f)try{var He={};Object.defineProperty(He,"passive",{get:function(){Ie=!0}}),window.addEventListener("test",He,He),window.removeEventListener("test",He,He)}catch(me){Ie=!1}function We(e,t,r,n,o,a,i,l,s){var u=Array.prototype.slice.call(arguments,3);try{t.apply(r,u)}catch(e){this.onError(e)}}var Ue=!1,Ve=null,qe=!1,Ge=null,$e={onError:function(e){Ue=!0,Ve=e}};function Qe(e,t,r,n,o,a,i,l,s){Ue=!1,Ve=null,We.apply($e,arguments)}function Ke(e){var t=e,r=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).flags)&&(r=t.return),e=t.return}while(e)}return 3===t.tag?r:null}function Xe(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function Ye(e){if(Ke(e)!==e)throw Error(i(188))}function Ze(e,t){for(var r=e.alternate;null!==t;){if(t===e||t===r)return!0;t=t.return}return!1}var Je,et,tt,rt,nt=!1,ot=[],at=null,it=null,lt=null,st=new Map,ut=new Map,ct=[],ft="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function dt(e,t,r,n,o){return{blockedOn:e,domEventName:t,eventSystemFlags:16|r,nativeEvent:o,targetContainers:[n]}}function pt(e,t){switch(e){case"focusin":case"focusout":at=null;break;case"dragenter":case"dragleave":it=null;break;case"mouseover":case"mouseout":lt=null;break;case"pointerover":case"pointerout":st.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":ut.delete(t.pointerId)}}function ht(e,t,r,n,o,a){return null===e||e.nativeEvent!==a?(e=dt(t,r,n,o,a),null!==t&&null!==(t=Zn(t))&&et(t),e):(e.eventSystemFlags|=n,t=e.targetContainers,null!==o&&-1===t.indexOf(o)&&t.push(o),e)}function mt(e){var t=Yn(e.target);if(null!==t){var r=Ke(t);if(null!==r)if(13===(t=r.tag)){if(null!==(t=Xe(r)))return e.blockedOn=t,void rt(e.lanePriority,(function(){a.unstable_runWithPriority(e.priority,(function(){tt(r)}))}))}else if(3===t&&r.stateNode.hydrate)return void(e.blockedOn=3===r.tag?r.stateNode.containerInfo:null)}e.blockedOn=null}function gt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var r=Yt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==r)return null!==(t=Zn(r))&&et(t),e.blockedOn=r,!1;t.shift()}return!0}function bt(e,t,r){gt(e)&&r.delete(t)}function yt(){for(nt=!1;0<ot.length;){var e=ot[0];if(null!==e.blockedOn){null!==(e=Zn(e.blockedOn))&&Je(e);break}for(var t=e.targetContainers;0<t.length;){var r=Yt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==r){e.blockedOn=r;break}t.shift()}null===e.blockedOn&&ot.shift()}null!==at&&gt(at)&&(at=null),null!==it&&gt(it)&&(it=null),null!==lt&&gt(lt)&&(lt=null),st.forEach(bt),ut.forEach(bt)}function vt(e,t){e.blockedOn===t&&(e.blockedOn=null,nt||(nt=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,yt)))}function wt(e){function t(t){return vt(t,e)}if(0<ot.length){vt(ot[0],e);for(var r=1;r<ot.length;r++){var n=ot[r];n.blockedOn===e&&(n.blockedOn=null)}}for(null!==at&&vt(at,e),null!==it&&vt(it,e),null!==lt&&vt(lt,e),st.forEach(t),ut.forEach(t),r=0;r<ct.length;r++)(n=ct[r]).blockedOn===e&&(n.blockedOn=null);for(;0<ct.length&&null===(r=ct[0]).blockedOn;)mt(r),null===r.blockedOn&&ct.shift()}function kt(e,t){var r={};return r[e.toLowerCase()]=t.toLowerCase(),r["Webkit"+e]="webkit"+t,r["Moz"+e]="moz"+t,r}var xt={animationend:kt("Animation","AnimationEnd"),animationiteration:kt("Animation","AnimationIteration"),animationstart:kt("Animation","AnimationStart"),transitionend:kt("Transition","TransitionEnd")},St={},_t={};function Ct(e){if(St[e])return St[e];if(!xt[e])return e;var t,r=xt[e];for(t in r)if(r.hasOwnProperty(t)&&t in _t)return St[e]=r[t];return e}f&&(_t=document.createElement("div").style,"AnimationEvent"in window||(delete xt.animationend.animation,delete xt.animationiteration.animation,delete xt.animationstart.animation),"TransitionEvent"in window||delete xt.transitionend.transition);var Et=Ct("animationend"),At=Ct("animationiteration"),zt=Ct("animationstart"),Ot=Ct("transitionend"),Rt=new Map,Pt=new Map,Tt=["abort","abort",Et,"animationEnd",At,"animationIteration",zt,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Ot,"transitionEnd","waiting","waiting"];function jt(e,t){for(var r=0;r<e.length;r+=2){var n=e[r],o=e[r+1];o="on"+(o[0].toUpperCase()+o.slice(1)),Pt.set(n,t),Rt.set(n,o),u(o,[n])}}(0,a.unstable_now)();var Nt=8;function Lt(e){if(0!=(1&e))return Nt=15,1;if(0!=(2&e))return Nt=14,2;if(0!=(4&e))return Nt=13,4;var t=24&e;return 0!==t?(Nt=12,t):0!=(32&e)?(Nt=11,32):0!=(t=192&e)?(Nt=10,t):0!=(256&e)?(Nt=9,256):0!=(t=3584&e)?(Nt=8,t):0!=(4096&e)?(Nt=7,4096):0!=(t=4186112&e)?(Nt=6,t):0!=(t=62914560&e)?(Nt=5,t):67108864&e?(Nt=4,67108864):0!=(134217728&e)?(Nt=3,134217728):0!=(t=805306368&e)?(Nt=2,t):0!=(1073741824&e)?(Nt=1,1073741824):(Nt=8,e)}function Ft(e,t){var r=e.pendingLanes;if(0===r)return Nt=0;var n=0,o=0,a=e.expiredLanes,i=e.suspendedLanes,l=e.pingedLanes;if(0!==a)n=a,o=Nt=15;else if(0!=(a=134217727&r)){var s=a&~i;0!==s?(n=Lt(s),o=Nt):0!=(l&=a)&&(n=Lt(l),o=Nt)}else 0!=(a=r&~i)?(n=Lt(a),o=Nt):0!==l&&(n=Lt(l),o=Nt);if(0===n)return 0;if(n=r&((0>(n=31-Wt(n))?0:1<<n)<<1)-1,0!==t&&t!==n&&0==(t&i)){if(Lt(t),o<=Nt)return t;Nt=o}if(0!==(t=e.entangledLanes))for(e=e.entanglements,t&=n;0<t;)o=1<<(r=31-Wt(t)),n|=e[r],t&=~o;return n}function Mt(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function Bt(e,t){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=Dt(24&~t))?Bt(10,t):e;case 10:return 0===(e=Dt(192&~t))?Bt(8,t):e;case 8:return 0===(e=Dt(3584&~t))&&0===(e=Dt(4186112&~t))&&(e=512),e;case 2:return 0===(t=Dt(805306368&~t))&&(t=268435456),t}throw Error(i(358,e))}function Dt(e){return e&-e}function It(e){for(var t=[],r=0;31>r;r++)t.push(e);return t}function Ht(e,t,r){e.pendingLanes|=t;var n=t-1;e.suspendedLanes&=n,e.pingedLanes&=n,(e=e.eventTimes)[t=31-Wt(t)]=r}var Wt=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(Ut(e)/Vt|0)|0},Ut=Math.log,Vt=Math.LN2,qt=a.unstable_UserBlockingPriority,Gt=a.unstable_runWithPriority,$t=!0;function Qt(e,t,r,n){Fe||Ne();var o=Xt,a=Fe;Fe=!0;try{je(o,e,t,r,n)}finally{(Fe=a)||Be()}}function Kt(e,t,r,n){Gt(qt,Xt.bind(null,e,t,r,n))}function Xt(e,t,r,n){var o;if($t)if((o=0==(4&t))&&0<ot.length&&-1<ft.indexOf(e))e=dt(null,e,t,r,n),ot.push(e);else{var a=Yt(e,t,r,n);if(null===a)o&&pt(e,n);else{if(o){if(-1<ft.indexOf(e))return e=dt(a,e,t,r,n),void ot.push(e);if(function(e,t,r,n,o){switch(t){case"focusin":return at=ht(at,e,t,r,n,o),!0;case"dragenter":return it=ht(it,e,t,r,n,o),!0;case"mouseover":return lt=ht(lt,e,t,r,n,o),!0;case"pointerover":var a=o.pointerId;return st.set(a,ht(st.get(a)||null,e,t,r,n,o)),!0;case"gotpointercapture":return a=o.pointerId,ut.set(a,ht(ut.get(a)||null,e,t,r,n,o)),!0}return!1}(a,e,t,r,n))return;pt(e,n)}Rn(e,t,n,null,r)}}}function Yt(e,t,r,n){var o=Ce(n);if(null!==(o=Yn(o))){var a=Ke(o);if(null===a)o=null;else{var i=a.tag;if(13===i){if(null!==(o=Xe(a)))return o;o=null}else if(3===i){if(a.stateNode.hydrate)return 3===a.tag?a.stateNode.containerInfo:null;o=null}else a!==o&&(o=null)}}return Rn(e,t,n,o,r),null}var Zt=null,Jt=null,er=null;function tr(){if(er)return er;var e,t,r=Jt,n=r.length,o="value"in Zt?Zt.value:Zt.textContent,a=o.length;for(e=0;e<n&&r[e]===o[e];e++);var i=n-e;for(t=1;t<=i&&r[n-t]===o[a-t];t++);return er=o.slice(e,1<t?1-t:void 0)}function rr(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function nr(){return!0}function or(){return!1}function ar(e){function t(t,r,n,o,a){for(var i in this._reactName=t,this._targetInst=n,this.type=r,this.nativeEvent=o,this.target=a,this.currentTarget=null,e)e.hasOwnProperty(i)&&(t=e[i],this[i]=t?t(o):o[i]);return this.isDefaultPrevented=(null!=o.defaultPrevented?o.defaultPrevented:!1===o.returnValue)?nr:or,this.isPropagationStopped=or,this}return o(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=nr)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=nr)},persist:function(){},isPersistent:nr}),t}var ir,lr,sr,ur={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},cr=ar(ur),fr=o({},ur,{view:0,detail:0}),dr=ar(fr),pr=o({},fr,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:_r,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==sr&&(sr&&"mousemove"===e.type?(ir=e.screenX-sr.screenX,lr=e.screenY-sr.screenY):lr=ir=0,sr=e),ir)},movementY:function(e){return"movementY"in e?e.movementY:lr}}),hr=ar(pr),mr=ar(o({},pr,{dataTransfer:0})),gr=ar(o({},fr,{relatedTarget:0})),br=ar(o({},ur,{animationName:0,elapsedTime:0,pseudoElement:0})),yr=ar(o({},ur,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}})),vr=ar(o({},ur,{data:0})),wr={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},kr={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},xr={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Sr(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=xr[e])&&!!t[e]}function _r(){return Sr}var Cr=ar(o({},fr,{key:function(e){if(e.key){var t=wr[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=rr(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?kr[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:_r,charCode:function(e){return"keypress"===e.type?rr(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?rr(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}})),Er=ar(o({},pr,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Ar=ar(o({},fr,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:_r})),zr=ar(o({},ur,{propertyName:0,elapsedTime:0,pseudoElement:0})),Or=ar(o({},pr,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0})),Rr=[9,13,27,32],Pr=f&&"CompositionEvent"in window,Tr=null;f&&"documentMode"in document&&(Tr=document.documentMode);var jr=f&&"TextEvent"in window&&!Tr,Nr=f&&(!Pr||Tr&&8<Tr&&11>=Tr),Lr=String.fromCharCode(32),Fr=!1;function Mr(e,t){switch(e){case"keyup":return-1!==Rr.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Br(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Dr=!1,Ir={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Hr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Ir[e.type]:"textarea"===t}function Wr(e,t,r,n){Re(n),0<(t=Tn(t,"onChange")).length&&(r=new cr("onChange","change",null,r,n),e.push({event:r,listeners:t}))}var Ur=null,Vr=null;function qr(e){_n(e,0)}function Gr(e){if(Y(Jn(e)))return e}function $r(e,t){if("change"===e)return t}var Qr=!1;if(f){var Kr;if(f){var Xr="oninput"in document;if(!Xr){var Yr=document.createElement("div");Yr.setAttribute("oninput","return;"),Xr="function"==typeof Yr.oninput}Kr=Xr}else Kr=!1;Qr=Kr&&(!document.documentMode||9<document.documentMode)}function Zr(){Ur&&(Ur.detachEvent("onpropertychange",Jr),Vr=Ur=null)}function Jr(e){if("value"===e.propertyName&&Gr(Vr)){var t=[];if(Wr(t,Vr,e,Ce(e)),e=qr,Fe)e(t);else{Fe=!0;try{Te(e,t)}finally{Fe=!1,Be()}}}}function en(e,t,r){"focusin"===e?(Zr(),Vr=r,(Ur=t).attachEvent("onpropertychange",Jr)):"focusout"===e&&Zr()}function tn(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Gr(Vr)}function rn(e,t){if("click"===e)return Gr(t)}function nn(e,t){if("input"===e||"change"===e)return Gr(t)}var on="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},an=Object.prototype.hasOwnProperty;function ln(e,t){if(on(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var r=Object.keys(e),n=Object.keys(t);if(r.length!==n.length)return!1;for(n=0;n<r.length;n++)if(!an.call(t,r[n])||!on(e[r[n]],t[r[n]]))return!1;return!0}function sn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function un(e,t){var r,n=sn(e);for(e=0;n;){if(3===n.nodeType){if(r=e+n.textContent.length,e<=t&&r>=t)return{node:n,offset:t-e};e=r}e:{for(;n;){if(n.nextSibling){n=n.nextSibling;break e}n=n.parentNode}n=void 0}n=sn(n)}}function cn(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?cn(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function fn(){for(var e=window,t=Z();t instanceof e.HTMLIFrameElement;){try{var r="string"==typeof t.contentWindow.location.href}catch(e){r=!1}if(!r)break;t=Z((e=t.contentWindow).document)}return t}function dn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var pn=f&&"documentMode"in document&&11>=document.documentMode,hn=null,mn=null,gn=null,bn=!1;function yn(e,t,r){var n=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;bn||null==hn||hn!==Z(n)||(n="selectionStart"in(n=hn)&&dn(n)?{start:n.selectionStart,end:n.selectionEnd}:{anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},gn&&ln(gn,n)||(gn=n,0<(n=Tn(mn,"onSelect")).length&&(t=new cr("onSelect","select",null,t,r),e.push({event:t,listeners:n}),t.target=hn)))}jt("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),jt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),jt(Tt,2);for(var vn="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),wn=0;wn<vn.length;wn++)Pt.set(vn[wn],0);c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),u("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),u("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),u("onBeforeInput",["compositionend","keypress","textInput","paste"]),u("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var kn="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),xn=new Set("cancel close invalid load scroll toggle".split(" ").concat(kn));function Sn(e,t,r){var n=e.type||"unknown-event";e.currentTarget=r,function(e,t,r,n,o,a,l,s,u){if(Qe.apply(this,arguments),Ue){if(!Ue)throw Error(i(198));var c=Ve;Ue=!1,Ve=null,qe||(qe=!0,Ge=c)}}(n,t,void 0,e),e.currentTarget=null}function _n(e,t){t=0!=(4&t);for(var r=0;r<e.length;r++){var n=e[r],o=n.event;n=n.listeners;e:{var a=void 0;if(t)for(var i=n.length-1;0<=i;i--){var l=n[i],s=l.instance,u=l.currentTarget;if(l=l.listener,s!==a&&o.isPropagationStopped())break e;Sn(o,l,u),a=s}else for(i=0;i<n.length;i++){if(s=(l=n[i]).instance,u=l.currentTarget,l=l.listener,s!==a&&o.isPropagationStopped())break e;Sn(o,l,u),a=s}}}if(qe)throw e=Ge,qe=!1,Ge=null,e}function Cn(e,t){var r=to(t),n=e+"__bubble";r.has(n)||(On(t,e,2,!1),r.add(n))}var En="_reactListening"+Math.random().toString(36).slice(2);function An(e){e[En]||(e[En]=!0,l.forEach((function(t){xn.has(t)||zn(t,!1,e,null),zn(t,!0,e,null)})))}function zn(e,t,r,n){var o=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,a=r;if("selectionchange"===e&&9!==r.nodeType&&(a=r.ownerDocument),null!==n&&!t&&xn.has(e)){if("scroll"!==e)return;o|=2,a=n}var i=to(a),l=e+"__"+(t?"capture":"bubble");i.has(l)||(t&&(o|=4),On(a,e,o,t),i.add(l))}function On(e,t,r,n){var o=Pt.get(t);switch(void 0===o?2:o){case 0:o=Qt;break;case 1:o=Kt;break;default:o=Xt}r=o.bind(null,t,r,e),o=void 0,!Ie||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(o=!0),n?void 0!==o?e.addEventListener(t,r,{capture:!0,passive:o}):e.addEventListener(t,r,!0):void 0!==o?e.addEventListener(t,r,{passive:o}):e.addEventListener(t,r,!1)}function Rn(e,t,r,n,o){var a=n;if(0==(1&t)&&0==(2&t)&&null!==n)e:for(;;){if(null===n)return;var i=n.tag;if(3===i||4===i){var l=n.stateNode.containerInfo;if(l===o||8===l.nodeType&&l.parentNode===o)break;if(4===i)for(i=n.return;null!==i;){var s=i.tag;if((3===s||4===s)&&((s=i.stateNode.containerInfo)===o||8===s.nodeType&&s.parentNode===o))return;i=i.return}for(;null!==l;){if(null===(i=Yn(l)))return;if(5===(s=i.tag)||6===s){n=a=i;continue e}l=l.parentNode}}n=n.return}!function(e,t,r){if(Me)return e();Me=!0;try{Le(e,t,r)}finally{Me=!1,Be()}}((function(){var n=a,o=Ce(r),i=[];e:{var l=Rt.get(e);if(void 0!==l){var s=cr,u=e;switch(e){case"keypress":if(0===rr(r))break e;case"keydown":case"keyup":s=Cr;break;case"focusin":u="focus",s=gr;break;case"focusout":u="blur",s=gr;break;case"beforeblur":case"afterblur":s=gr;break;case"click":if(2===r.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":s=hr;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":s=mr;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":s=Ar;break;case Et:case At:case zt:s=br;break;case Ot:s=zr;break;case"scroll":s=dr;break;case"wheel":s=Or;break;case"copy":case"cut":case"paste":s=yr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":s=Er}var c=0!=(4&t),f=!c&&"scroll"===e,d=c?null!==l?l+"Capture":null:l;c=[];for(var p,h=n;null!==h;){var m=(p=h).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==d&&null!=(m=De(h,d))&&c.push(Pn(h,m,p))),f)break;h=h.return}0<c.length&&(l=new s(l,u,null,r,o),i.push({event:l,listeners:c}))}}if(0==(7&t)){if(s="mouseout"===e||"pointerout"===e,(!(l="mouseover"===e||"pointerover"===e)||0!=(16&t)||!(u=r.relatedTarget||r.fromElement)||!Yn(u)&&!u[Kn])&&(s||l)&&(l=o.window===o?o:(l=o.ownerDocument)?l.defaultView||l.parentWindow:window,s?(s=n,null!==(u=(u=r.relatedTarget||r.toElement)?Yn(u):null)&&(u!==(f=Ke(u))||5!==u.tag&&6!==u.tag)&&(u=null)):(s=null,u=n),s!==u)){if(c=hr,m="onMouseLeave",d="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(c=Er,m="onPointerLeave",d="onPointerEnter",h="pointer"),f=null==s?l:Jn(s),p=null==u?l:Jn(u),(l=new c(m,h+"leave",s,r,o)).target=f,l.relatedTarget=p,m=null,Yn(o)===n&&((c=new c(d,h+"enter",u,r,o)).target=p,c.relatedTarget=f,m=c),f=m,s&&u)e:{for(d=u,h=0,p=c=s;p;p=jn(p))h++;for(p=0,m=d;m;m=jn(m))p++;for(;0<h-p;)c=jn(c),h--;for(;0<p-h;)d=jn(d),p--;for(;h--;){if(c===d||null!==d&&c===d.alternate)break e;c=jn(c),d=jn(d)}c=null}else c=null;null!==s&&Nn(i,l,s,c,!1),null!==u&&null!==f&&Nn(i,f,u,c,!0)}if("select"===(s=(l=n?Jn(n):window).nodeName&&l.nodeName.toLowerCase())||"input"===s&&"file"===l.type)var g=$r;else if(Hr(l))if(Qr)g=nn;else{g=tn;var b=en}else(s=l.nodeName)&&"input"===s.toLowerCase()&&("checkbox"===l.type||"radio"===l.type)&&(g=rn);switch(g&&(g=g(e,n))?Wr(i,g,r,o):(b&&b(e,l,n),"focusout"===e&&(b=l._wrapperState)&&b.controlled&&"number"===l.type&&oe(l,"number",l.value)),b=n?Jn(n):window,e){case"focusin":(Hr(b)||"true"===b.contentEditable)&&(hn=b,mn=n,gn=null);break;case"focusout":gn=mn=hn=null;break;case"mousedown":bn=!0;break;case"contextmenu":case"mouseup":case"dragend":bn=!1,yn(i,r,o);break;case"selectionchange":if(pn)break;case"keydown":case"keyup":yn(i,r,o)}var y;if(Pr)e:{switch(e){case"compositionstart":var v="onCompositionStart";break e;case"compositionend":v="onCompositionEnd";break e;case"compositionupdate":v="onCompositionUpdate";break e}v=void 0}else Dr?Mr(e,r)&&(v="onCompositionEnd"):"keydown"===e&&229===r.keyCode&&(v="onCompositionStart");v&&(Nr&&"ko"!==r.locale&&(Dr||"onCompositionStart"!==v?"onCompositionEnd"===v&&Dr&&(y=tr()):(Jt="value"in(Zt=o)?Zt.value:Zt.textContent,Dr=!0)),0<(b=Tn(n,v)).length&&(v=new vr(v,e,null,r,o),i.push({event:v,listeners:b}),(y||null!==(y=Br(r)))&&(v.data=y))),(y=jr?function(e,t){switch(e){case"compositionend":return Br(t);case"keypress":return 32!==t.which?null:(Fr=!0,Lr);case"textInput":return(e=t.data)===Lr&&Fr?null:e;default:return null}}(e,r):function(e,t){if(Dr)return"compositionend"===e||!Pr&&Mr(e,t)?(e=tr(),er=Jt=Zt=null,Dr=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Nr&&"ko"!==t.locale?null:t.data;default:return null}}(e,r))&&0<(n=Tn(n,"onBeforeInput")).length&&(o=new vr("onBeforeInput","beforeinput",null,r,o),i.push({event:o,listeners:n}),o.data=y)}_n(i,t)}))}function Pn(e,t,r){return{instance:e,listener:t,currentTarget:r}}function Tn(e,t){for(var r=t+"Capture",n=[];null!==e;){var o=e,a=o.stateNode;5===o.tag&&null!==a&&(o=a,null!=(a=De(e,r))&&n.unshift(Pn(e,a,o)),null!=(a=De(e,t))&&n.push(Pn(e,a,o))),e=e.return}return n}function jn(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Nn(e,t,r,n,o){for(var a=t._reactName,i=[];null!==r&&r!==n;){var l=r,s=l.alternate,u=l.stateNode;if(null!==s&&s===n)break;5===l.tag&&null!==u&&(l=u,o?null!=(s=De(r,a))&&i.unshift(Pn(r,s,l)):o||null!=(s=De(r,a))&&i.push(Pn(r,s,l))),r=r.return}0!==i.length&&e.push({event:t,listeners:i})}function Ln(){}var Fn=null,Mn=null;function Bn(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Dn(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var In="function"==typeof setTimeout?setTimeout:void 0,Hn="function"==typeof clearTimeout?clearTimeout:void 0;function Wn(e){(1===e.nodeType||9===e.nodeType&&null!=(e=e.body))&&(e.textContent="")}function Un(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function Vn(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var r=e.data;if("$"===r||"$!"===r||"$?"===r){if(0===t)return e;t--}else"/$"===r&&t++}e=e.previousSibling}return null}var qn=0,Gn=Math.random().toString(36).slice(2),$n="__reactFiber$"+Gn,Qn="__reactProps$"+Gn,Kn="__reactContainer$"+Gn,Xn="__reactEvents$"+Gn;function Yn(e){var t=e[$n];if(t)return t;for(var r=e.parentNode;r;){if(t=r[Kn]||r[$n]){if(r=t.alternate,null!==t.child||null!==r&&null!==r.child)for(e=Vn(e);null!==e;){if(r=e[$n])return r;e=Vn(e)}return t}r=(e=r).parentNode}return null}function Zn(e){return!(e=e[$n]||e[Kn])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function Jn(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(i(33))}function eo(e){return e[Qn]||null}function to(e){var t=e[Xn];return void 0===t&&(t=e[Xn]=new Set),t}var ro=[],no=-1;function oo(e){return{current:e}}function ao(e){0>no||(e.current=ro[no],ro[no]=null,no--)}function io(e,t){no++,ro[no]=e.current,e.current=t}var lo={},so=oo(lo),uo=oo(!1),co=lo;function fo(e,t){var r=e.type.contextTypes;if(!r)return lo;var n=e.stateNode;if(n&&n.__reactInternalMemoizedUnmaskedChildContext===t)return n.__reactInternalMemoizedMaskedChildContext;var o,a={};for(o in r)a[o]=t[o];return n&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function po(e){return null!=e.childContextTypes}function ho(){ao(uo),ao(so)}function mo(e,t,r){if(so.current!==lo)throw Error(i(168));io(so,t),io(uo,r)}function go(e,t,r){var n=e.stateNode;if(e=t.childContextTypes,"function"!=typeof n.getChildContext)return r;for(var a in n=n.getChildContext())if(!(a in e))throw Error(i(108,$(t)||"Unknown",a));return o({},r,n)}function bo(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||lo,co=so.current,io(so,e),io(uo,uo.current),!0}function yo(e,t,r){var n=e.stateNode;if(!n)throw Error(i(169));r?(e=go(e,t,co),n.__reactInternalMemoizedMergedChildContext=e,ao(uo),ao(so),io(so,e)):ao(uo),io(uo,r)}var vo=null,wo=null,ko=a.unstable_runWithPriority,xo=a.unstable_scheduleCallback,So=a.unstable_cancelCallback,_o=a.unstable_shouldYield,Co=a.unstable_requestPaint,Eo=a.unstable_now,Ao=a.unstable_getCurrentPriorityLevel,zo=a.unstable_ImmediatePriority,Oo=a.unstable_UserBlockingPriority,Ro=a.unstable_NormalPriority,Po=a.unstable_LowPriority,To=a.unstable_IdlePriority,jo={},No=void 0!==Co?Co:function(){},Lo=null,Fo=null,Mo=!1,Bo=Eo(),Do=1e4>Bo?Eo:function(){return Eo()-Bo};function Io(){switch(Ao()){case zo:return 99;case Oo:return 98;case Ro:return 97;case Po:return 96;case To:return 95;default:throw Error(i(332))}}function Ho(e){switch(e){case 99:return zo;case 98:return Oo;case 97:return Ro;case 96:return Po;case 95:return To;default:throw Error(i(332))}}function Wo(e,t){return e=Ho(e),ko(e,t)}function Uo(e,t,r){return e=Ho(e),xo(e,t,r)}function Vo(){if(null!==Fo){var e=Fo;Fo=null,So(e)}qo()}function qo(){if(!Mo&&null!==Lo){Mo=!0;var e=0;try{var t=Lo;Wo(99,(function(){for(;e<t.length;e++){var r=t[e];do{r=r(!0)}while(null!==r)}})),Lo=null}catch(t){throw null!==Lo&&(Lo=Lo.slice(e+1)),xo(zo,Vo),t}finally{Mo=!1}}}var Go=k.ReactCurrentBatchConfig;function $o(e,t){if(e&&e.defaultProps){for(var r in t=o({},t),e=e.defaultProps)void 0===t[r]&&(t[r]=e[r]);return t}return t}var Qo=oo(null),Ko=null,Xo=null,Yo=null;function Zo(){Yo=Xo=Ko=null}function Jo(e){var t=Qo.current;ao(Qo),e.type._context._currentValue=t}function ea(e,t){for(;null!==e;){var r=e.alternate;if((e.childLanes&t)===t){if(null===r||(r.childLanes&t)===t)break;r.childLanes|=t}else e.childLanes|=t,null!==r&&(r.childLanes|=t);e=e.return}}function ta(e,t){Ko=e,Yo=Xo=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(Ti=!0),e.firstContext=null)}function ra(e,t){if(Yo!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Yo=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Xo){if(null===Ko)throw Error(i(308));Xo=t,Ko.dependencies={lanes:0,firstContext:t,responders:null}}else Xo=Xo.next=t;return e._currentValue}var na=!1;function oa(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function aa(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function ia(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function la(e,t){if(null!==(e=e.updateQueue)){var r=(e=e.shared).pending;null===r?t.next=t:(t.next=r.next,r.next=t),e.pending=t}}function sa(e,t){var r=e.updateQueue,n=e.alternate;if(null!==n&&r===(n=n.updateQueue)){var o=null,a=null;if(null!==(r=r.firstBaseUpdate)){do{var i={eventTime:r.eventTime,lane:r.lane,tag:r.tag,payload:r.payload,callback:r.callback,next:null};null===a?o=a=i:a=a.next=i,r=r.next}while(null!==r);null===a?o=a=t:a=a.next=t}else o=a=t;return r={baseState:n.baseState,firstBaseUpdate:o,lastBaseUpdate:a,shared:n.shared,effects:n.effects},void(e.updateQueue=r)}null===(e=r.lastBaseUpdate)?r.firstBaseUpdate=t:e.next=t,r.lastBaseUpdate=t}function ua(e,t,r,n){var a=e.updateQueue;na=!1;var i=a.firstBaseUpdate,l=a.lastBaseUpdate,s=a.shared.pending;if(null!==s){a.shared.pending=null;var u=s,c=u.next;u.next=null,null===l?i=c:l.next=c,l=u;var f=e.alternate;if(null!==f){var d=(f=f.updateQueue).lastBaseUpdate;d!==l&&(null===d?f.firstBaseUpdate=c:d.next=c,f.lastBaseUpdate=u)}}if(null!==i){for(d=a.baseState,l=0,f=c=u=null;;){s=i.lane;var p=i.eventTime;if((n&s)===s){null!==f&&(f=f.next={eventTime:p,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var h=e,m=i;switch(s=t,p=r,m.tag){case 1:if("function"==typeof(h=m.payload)){d=h.call(p,d,s);break e}d=h;break e;case 3:h.flags=-4097&h.flags|64;case 0:if(null==(s="function"==typeof(h=m.payload)?h.call(p,d,s):h))break e;d=o({},d,s);break e;case 2:na=!0}}null!==i.callback&&(e.flags|=32,null===(s=a.effects)?a.effects=[i]:s.push(i))}else p={eventTime:p,lane:s,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===f?(c=f=p,u=d):f=f.next=p,l|=s;if(null===(i=i.next)){if(null===(s=a.shared.pending))break;i=s.next,s.next=null,a.lastBaseUpdate=s,a.shared.pending=null}}null===f&&(u=d),a.baseState=u,a.firstBaseUpdate=c,a.lastBaseUpdate=f,Nl|=l,e.lanes=l,e.memoizedState=d}}function ca(e,t,r){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var n=e[t],o=n.callback;if(null!==o){if(n.callback=null,n=r,"function"!=typeof o)throw Error(i(191,o));o.call(n)}}}var fa=(new n.Component).refs;function da(e,t,r,n){r=null==(r=r(n,t=e.memoizedState))?t:o({},t,r),e.memoizedState=r,0===e.lanes&&(e.updateQueue.baseState=r)}var pa={isMounted:function(e){return!!(e=e._reactInternals)&&Ke(e)===e},enqueueSetState:function(e,t,r){e=e._reactInternals;var n=as(),o=is(e),a=ia(n,o);a.payload=t,null!=r&&(a.callback=r),la(e,a),ls(e,o,n)},enqueueReplaceState:function(e,t,r){e=e._reactInternals;var n=as(),o=is(e),a=ia(n,o);a.tag=1,a.payload=t,null!=r&&(a.callback=r),la(e,a),ls(e,o,n)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var r=as(),n=is(e),o=ia(r,n);o.tag=2,null!=t&&(o.callback=t),la(e,o),ls(e,n,r)}};function ha(e,t,r,n,o,a,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(n,a,i):!(t.prototype&&t.prototype.isPureReactComponent&&ln(r,n)&&ln(o,a))}function ma(e,t,r){var n=!1,o=lo,a=t.contextType;return"object"==typeof a&&null!==a?a=ra(a):(o=po(t)?co:so.current,a=(n=null!=(n=t.contextTypes))?fo(e,o):lo),t=new t(r,a),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=pa,e.stateNode=t,t._reactInternals=e,n&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=a),t}function ga(e,t,r,n){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(r,n),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(r,n),t.state!==e&&pa.enqueueReplaceState(t,t.state,null)}function ba(e,t,r,n){var o=e.stateNode;o.props=r,o.state=e.memoizedState,o.refs=fa,oa(e);var a=t.contextType;"object"==typeof a&&null!==a?o.context=ra(a):(a=po(t)?co:so.current,o.context=fo(e,a)),ua(e,r,o,n),o.state=e.memoizedState,"function"==typeof(a=t.getDerivedStateFromProps)&&(da(e,t,a,r),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&pa.enqueueReplaceState(o,o.state,null),ua(e,r,o,n),o.state=e.memoizedState),"function"==typeof o.componentDidMount&&(e.flags|=4)}var ya=Array.isArray;function va(e,t,r){if(null!==(e=r.ref)&&"function"!=typeof e&&"object"!=typeof e){if(r._owner){if(r=r._owner){if(1!==r.tag)throw Error(i(309));var n=r.stateNode}if(!n)throw Error(i(147,e));var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=n.refs;t===fa&&(t=n.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}if("string"!=typeof e)throw Error(i(284));if(!r._owner)throw Error(i(290,e))}return e}function wa(e,t){if("textarea"!==e.type)throw Error(i(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t))}function ka(e){function t(t,r){if(e){var n=t.lastEffect;null!==n?(n.nextEffect=r,t.lastEffect=r):t.firstEffect=t.lastEffect=r,r.nextEffect=null,r.flags=8}}function r(r,n){if(!e)return null;for(;null!==n;)t(r,n),n=n.sibling;return null}function n(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t){return(e=Ms(e,t)).index=0,e.sibling=null,e}function a(t,r,n){return t.index=n,e?null!==(n=t.alternate)?(n=n.index)<r?(t.flags=2,r):n:(t.flags=2,r):r}function l(t){return e&&null===t.alternate&&(t.flags=2),t}function s(e,t,r,n){return null===t||6!==t.tag?((t=Hs(r,e.mode,n)).return=e,t):((t=o(t,r)).return=e,t)}function u(e,t,r,n){return null!==t&&t.elementType===r.type?((n=o(t,r.props)).ref=va(e,t,r),n.return=e,n):((n=Bs(r.type,r.key,r.props,null,e.mode,n)).ref=va(e,t,r),n.return=e,n)}function c(e,t,r,n){return null===t||4!==t.tag||t.stateNode.containerInfo!==r.containerInfo||t.stateNode.implementation!==r.implementation?((t=Ws(r,e.mode,n)).return=e,t):((t=o(t,r.children||[])).return=e,t)}function f(e,t,r,n,a){return null===t||7!==t.tag?((t=Ds(r,e.mode,n,a)).return=e,t):((t=o(t,r)).return=e,t)}function d(e,t,r){if("string"==typeof t||"number"==typeof t)return(t=Hs(""+t,e.mode,r)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case x:return(r=Bs(t.type,t.key,t.props,null,e.mode,r)).ref=va(e,null,t),r.return=e,r;case S:return(t=Ws(t,e.mode,r)).return=e,t}if(ya(t)||W(t))return(t=Ds(t,e.mode,r,null)).return=e,t;wa(e,t)}return null}function p(e,t,r,n){var o=null!==t?t.key:null;if("string"==typeof r||"number"==typeof r)return null!==o?null:s(e,t,""+r,n);if("object"==typeof r&&null!==r){switch(r.$$typeof){case x:return r.key===o?r.type===_?f(e,t,r.props.children,n,o):u(e,t,r,n):null;case S:return r.key===o?c(e,t,r,n):null}if(ya(r)||W(r))return null!==o?null:f(e,t,r,n,null);wa(e,r)}return null}function h(e,t,r,n,o){if("string"==typeof n||"number"==typeof n)return s(t,e=e.get(r)||null,""+n,o);if("object"==typeof n&&null!==n){switch(n.$$typeof){case x:return e=e.get(null===n.key?r:n.key)||null,n.type===_?f(t,e,n.props.children,o,n.key):u(t,e,n,o);case S:return c(t,e=e.get(null===n.key?r:n.key)||null,n,o)}if(ya(n)||W(n))return f(t,e=e.get(r)||null,n,o,null);wa(t,n)}return null}function m(o,i,l,s){for(var u=null,c=null,f=i,m=i=0,g=null;null!==f&&m<l.length;m++){f.index>m?(g=f,f=null):g=f.sibling;var b=p(o,f,l[m],s);if(null===b){null===f&&(f=g);break}e&&f&&null===b.alternate&&t(o,f),i=a(b,i,m),null===c?u=b:c.sibling=b,c=b,f=g}if(m===l.length)return r(o,f),u;if(null===f){for(;m<l.length;m++)null!==(f=d(o,l[m],s))&&(i=a(f,i,m),null===c?u=f:c.sibling=f,c=f);return u}for(f=n(o,f);m<l.length;m++)null!==(g=h(f,o,m,l[m],s))&&(e&&null!==g.alternate&&f.delete(null===g.key?m:g.key),i=a(g,i,m),null===c?u=g:c.sibling=g,c=g);return e&&f.forEach((function(e){return t(o,e)})),u}function g(o,l,s,u){var c=W(s);if("function"!=typeof c)throw Error(i(150));if(null==(s=c.call(s)))throw Error(i(151));for(var f=c=null,m=l,g=l=0,b=null,y=s.next();null!==m&&!y.done;g++,y=s.next()){m.index>g?(b=m,m=null):b=m.sibling;var v=p(o,m,y.value,u);if(null===v){null===m&&(m=b);break}e&&m&&null===v.alternate&&t(o,m),l=a(v,l,g),null===f?c=v:f.sibling=v,f=v,m=b}if(y.done)return r(o,m),c;if(null===m){for(;!y.done;g++,y=s.next())null!==(y=d(o,y.value,u))&&(l=a(y,l,g),null===f?c=y:f.sibling=y,f=y);return c}for(m=n(o,m);!y.done;g++,y=s.next())null!==(y=h(m,o,g,y.value,u))&&(e&&null!==y.alternate&&m.delete(null===y.key?g:y.key),l=a(y,l,g),null===f?c=y:f.sibling=y,f=y);return e&&m.forEach((function(e){return t(o,e)})),c}return function(e,n,a,s){var u="object"==typeof a&&null!==a&&a.type===_&&null===a.key;u&&(a=a.props.children);var c="object"==typeof a&&null!==a;if(c)switch(a.$$typeof){case x:e:{for(c=a.key,u=n;null!==u;){if(u.key===c){switch(u.tag){case 7:if(a.type===_){r(e,u.sibling),(n=o(u,a.props.children)).return=e,e=n;break e}break;default:if(u.elementType===a.type){r(e,u.sibling),(n=o(u,a.props)).ref=va(e,u,a),n.return=e,e=n;break e}}r(e,u);break}t(e,u),u=u.sibling}a.type===_?((n=Ds(a.props.children,e.mode,s,a.key)).return=e,e=n):((s=Bs(a.type,a.key,a.props,null,e.mode,s)).ref=va(e,n,a),s.return=e,e=s)}return l(e);case S:e:{for(u=a.key;null!==n;){if(n.key===u){if(4===n.tag&&n.stateNode.containerInfo===a.containerInfo&&n.stateNode.implementation===a.implementation){r(e,n.sibling),(n=o(n,a.children||[])).return=e,e=n;break e}r(e,n);break}t(e,n),n=n.sibling}(n=Ws(a,e.mode,s)).return=e,e=n}return l(e)}if("string"==typeof a||"number"==typeof a)return a=""+a,null!==n&&6===n.tag?(r(e,n.sibling),(n=o(n,a)).return=e,e=n):(r(e,n),(n=Hs(a,e.mode,s)).return=e,e=n),l(e);if(ya(a))return m(e,n,a,s);if(W(a))return g(e,n,a,s);if(c&&wa(e,a),void 0===a&&!u)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(i(152,$(e.type)||"Component"))}return r(e,n)}}var xa=ka(!0),Sa=ka(!1),_a={},Ca=oo(_a),Ea=oo(_a),Aa=oo(_a);function za(e){if(e===_a)throw Error(i(174));return e}function Oa(e,t){switch(io(Aa,t),io(Ea,e),io(Ca,_a),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:pe(null,"");break;default:t=pe(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}ao(Ca),io(Ca,t)}function Ra(){ao(Ca),ao(Ea),ao(Aa)}function Pa(e){za(Aa.current);var t=za(Ca.current),r=pe(t,e.type);t!==r&&(io(Ea,e),io(Ca,r))}function Ta(e){Ea.current===e&&(ao(Ca),ao(Ea))}var ja=oo(0);function Na(e){for(var t=e;null!==t;){if(13===t.tag){var r=t.memoizedState;if(null!==r&&(null===(r=r.dehydrated)||"$?"===r.data||"$!"===r.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var La=null,Fa=null,Ma=!1;function Ba(e,t){var r=Ls(5,null,null,0);r.elementType="DELETED",r.type="DELETED",r.stateNode=t,r.return=e,r.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=r,e.lastEffect=r):e.firstEffect=e.lastEffect=r}function Da(e,t){switch(e.tag){case 5:var r=e.type;return null!==(t=1!==t.nodeType||r.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Ia(e){if(Ma){var t=Fa;if(t){var r=t;if(!Da(e,t)){if(!(t=Un(r.nextSibling))||!Da(e,t))return e.flags=-1025&e.flags|2,Ma=!1,void(La=e);Ba(La,r)}La=e,Fa=Un(t.firstChild)}else e.flags=-1025&e.flags|2,Ma=!1,La=e}}function Ha(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;La=e}function Wa(e){if(e!==La)return!1;if(!Ma)return Ha(e),Ma=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Dn(t,e.memoizedProps))for(t=Fa;t;)Ba(e,t),t=Un(t.nextSibling);if(Ha(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(i(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var r=e.data;if("/$"===r){if(0===t){Fa=Un(e.nextSibling);break e}t--}else"$"!==r&&"$!"!==r&&"$?"!==r||t++}e=e.nextSibling}Fa=null}}else Fa=La?Un(e.stateNode.nextSibling):null;return!0}function Ua(){Fa=La=null,Ma=!1}var Va=[];function qa(){for(var e=0;e<Va.length;e++)Va[e]._workInProgressVersionPrimary=null;Va.length=0}var Ga=k.ReactCurrentDispatcher,$a=k.ReactCurrentBatchConfig,Qa=0,Ka=null,Xa=null,Ya=null,Za=!1,Ja=!1;function ei(){throw Error(i(321))}function ti(e,t){if(null===t)return!1;for(var r=0;r<t.length&&r<e.length;r++)if(!on(e[r],t[r]))return!1;return!0}function ri(e,t,r,n,o,a){if(Qa=a,Ka=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,Ga.current=null===e||null===e.memoizedState?zi:Oi,e=r(n,o),Ja){a=0;do{if(Ja=!1,!(25>a))throw Error(i(301));a+=1,Ya=Xa=null,t.updateQueue=null,Ga.current=Ri,e=r(n,o)}while(Ja)}if(Ga.current=Ai,t=null!==Xa&&null!==Xa.next,Qa=0,Ya=Xa=Ka=null,Za=!1,t)throw Error(i(300));return e}function ni(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Ya?Ka.memoizedState=Ya=e:Ya=Ya.next=e,Ya}function oi(){if(null===Xa){var e=Ka.alternate;e=null!==e?e.memoizedState:null}else e=Xa.next;var t=null===Ya?Ka.memoizedState:Ya.next;if(null!==t)Ya=t,Xa=e;else{if(null===e)throw Error(i(310));e={memoizedState:(Xa=e).memoizedState,baseState:Xa.baseState,baseQueue:Xa.baseQueue,queue:Xa.queue,next:null},null===Ya?Ka.memoizedState=Ya=e:Ya=Ya.next=e}return Ya}function ai(e,t){return"function"==typeof t?t(e):t}function ii(e){var t=oi(),r=t.queue;if(null===r)throw Error(i(311));r.lastRenderedReducer=e;var n=Xa,o=n.baseQueue,a=r.pending;if(null!==a){if(null!==o){var l=o.next;o.next=a.next,a.next=l}n.baseQueue=o=a,r.pending=null}if(null!==o){o=o.next,n=n.baseState;var s=l=a=null,u=o;do{var c=u.lane;if((Qa&c)===c)null!==s&&(s=s.next={lane:0,action:u.action,eagerReducer:u.eagerReducer,eagerState:u.eagerState,next:null}),n=u.eagerReducer===e?u.eagerState:e(n,u.action);else{var f={lane:c,action:u.action,eagerReducer:u.eagerReducer,eagerState:u.eagerState,next:null};null===s?(l=s=f,a=n):s=s.next=f,Ka.lanes|=c,Nl|=c}u=u.next}while(null!==u&&u!==o);null===s?a=n:s.next=l,on(n,t.memoizedState)||(Ti=!0),t.memoizedState=n,t.baseState=a,t.baseQueue=s,r.lastRenderedState=n}return[t.memoizedState,r.dispatch]}function li(e){var t=oi(),r=t.queue;if(null===r)throw Error(i(311));r.lastRenderedReducer=e;var n=r.dispatch,o=r.pending,a=t.memoizedState;if(null!==o){r.pending=null;var l=o=o.next;do{a=e(a,l.action),l=l.next}while(l!==o);on(a,t.memoizedState)||(Ti=!0),t.memoizedState=a,null===t.baseQueue&&(t.baseState=a),r.lastRenderedState=a}return[a,n]}function si(e,t,r){var n=t._getVersion;n=n(t._source);var o=t._workInProgressVersionPrimary;if(null!==o?e=o===n:(e=e.mutableReadLanes,(e=(Qa&e)===e)&&(t._workInProgressVersionPrimary=n,Va.push(t))),e)return r(t._source);throw Va.push(t),Error(i(350))}function ui(e,t,r,n){var o=El;if(null===o)throw Error(i(349));var a=t._getVersion,l=a(t._source),s=Ga.current,u=s.useState((function(){return si(o,t,r)})),c=u[1],f=u[0];u=Ya;var d=e.memoizedState,p=d.refs,h=p.getSnapshot,m=d.source;d=d.subscribe;var g=Ka;return e.memoizedState={refs:p,source:t,subscribe:n},s.useEffect((function(){p.getSnapshot=r,p.setSnapshot=c;var e=a(t._source);if(!on(l,e)){e=r(t._source),on(f,e)||(c(e),e=is(g),o.mutableReadLanes|=e&o.pendingLanes),e=o.mutableReadLanes,o.entangledLanes|=e;for(var n=o.entanglements,i=e;0<i;){var s=31-Wt(i),u=1<<s;n[s]|=e,i&=~u}}}),[r,t,n]),s.useEffect((function(){return n(t._source,(function(){var e=p.getSnapshot,r=p.setSnapshot;try{r(e(t._source));var n=is(g);o.mutableReadLanes|=n&o.pendingLanes}catch(e){r((function(){throw e}))}}))}),[t,n]),on(h,r)&&on(m,t)&&on(d,n)||((e={pending:null,dispatch:null,lastRenderedReducer:ai,lastRenderedState:f}).dispatch=c=Ei.bind(null,Ka,e),u.queue=e,u.baseQueue=null,f=si(o,t,r),u.memoizedState=u.baseState=f),f}function ci(e,t,r){return ui(oi(),e,t,r)}function fi(e){var t=ni();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:ai,lastRenderedState:e}).dispatch=Ei.bind(null,Ka,e),[t.memoizedState,e]}function di(e,t,r,n){return e={tag:e,create:t,destroy:r,deps:n,next:null},null===(t=Ka.updateQueue)?(t={lastEffect:null},Ka.updateQueue=t,t.lastEffect=e.next=e):null===(r=t.lastEffect)?t.lastEffect=e.next=e:(n=r.next,r.next=e,e.next=n,t.lastEffect=e),e}function pi(e){return e={current:e},ni().memoizedState=e}function hi(){return oi().memoizedState}function mi(e,t,r,n){var o=ni();Ka.flags|=e,o.memoizedState=di(1|t,r,void 0,void 0===n?null:n)}function gi(e,t,r,n){var o=oi();n=void 0===n?null:n;var a=void 0;if(null!==Xa){var i=Xa.memoizedState;if(a=i.destroy,null!==n&&ti(n,i.deps))return void di(t,r,a,n)}Ka.flags|=e,o.memoizedState=di(1|t,r,a,n)}function bi(e,t){return mi(516,4,e,t)}function yi(e,t){return gi(516,4,e,t)}function vi(e,t){return gi(4,2,e,t)}function wi(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function ki(e,t,r){return r=null!=r?r.concat([e]):null,gi(4,2,wi.bind(null,t,e),r)}function xi(){}function Si(e,t){var r=oi();t=void 0===t?null:t;var n=r.memoizedState;return null!==n&&null!==t&&ti(t,n[1])?n[0]:(r.memoizedState=[e,t],e)}function _i(e,t){var r=oi();t=void 0===t?null:t;var n=r.memoizedState;return null!==n&&null!==t&&ti(t,n[1])?n[0]:(e=e(),r.memoizedState=[e,t],e)}function Ci(e,t){var r=Io();Wo(98>r?98:r,(function(){e(!0)})),Wo(97<r?97:r,(function(){var r=$a.transition;$a.transition=1;try{e(!1),t()}finally{$a.transition=r}}))}function Ei(e,t,r){var n=as(),o=is(e),a={lane:o,action:r,eagerReducer:null,eagerState:null,next:null},i=t.pending;if(null===i?a.next=a:(a.next=i.next,i.next=a),t.pending=a,i=e.alternate,e===Ka||null!==i&&i===Ka)Ja=Za=!0;else{if(0===e.lanes&&(null===i||0===i.lanes)&&null!==(i=t.lastRenderedReducer))try{var l=t.lastRenderedState,s=i(l,r);if(a.eagerReducer=i,a.eagerState=s,on(s,l))return}catch(e){}ls(e,o,n)}}var Ai={readContext:ra,useCallback:ei,useContext:ei,useEffect:ei,useImperativeHandle:ei,useLayoutEffect:ei,useMemo:ei,useReducer:ei,useRef:ei,useState:ei,useDebugValue:ei,useDeferredValue:ei,useTransition:ei,useMutableSource:ei,useOpaqueIdentifier:ei,unstable_isNewReconciler:!1},zi={readContext:ra,useCallback:function(e,t){return ni().memoizedState=[e,void 0===t?null:t],e},useContext:ra,useEffect:bi,useImperativeHandle:function(e,t,r){return r=null!=r?r.concat([e]):null,mi(4,2,wi.bind(null,t,e),r)},useLayoutEffect:function(e,t){return mi(4,2,e,t)},useMemo:function(e,t){var r=ni();return t=void 0===t?null:t,e=e(),r.memoizedState=[e,t],e},useReducer:function(e,t,r){var n=ni();return t=void 0!==r?r(t):t,n.memoizedState=n.baseState=t,e=(e=n.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=Ei.bind(null,Ka,e),[n.memoizedState,e]},useRef:pi,useState:fi,useDebugValue:xi,useDeferredValue:function(e){var t=fi(e),r=t[0],n=t[1];return bi((function(){var t=$a.transition;$a.transition=1;try{n(e)}finally{$a.transition=t}}),[e]),r},useTransition:function(){var e=fi(!1),t=e[0];return pi(e=Ci.bind(null,e[1])),[e,t]},useMutableSource:function(e,t,r){var n=ni();return n.memoizedState={refs:{getSnapshot:t,setSnapshot:null},source:e,subscribe:r},ui(n,e,t,r)},useOpaqueIdentifier:function(){if(Ma){var e=!1,t=function(e){return{$$typeof:L,toString:e,valueOf:e}}((function(){throw e||(e=!0,r("r:"+(qn++).toString(36))),Error(i(355))})),r=fi(t)[1];return 0==(2&Ka.mode)&&(Ka.flags|=516,di(5,(function(){r("r:"+(qn++).toString(36))}),void 0,null)),t}return fi(t="r:"+(qn++).toString(36)),t},unstable_isNewReconciler:!1},Oi={readContext:ra,useCallback:Si,useContext:ra,useEffect:yi,useImperativeHandle:ki,useLayoutEffect:vi,useMemo:_i,useReducer:ii,useRef:hi,useState:function(){return ii(ai)},useDebugValue:xi,useDeferredValue:function(e){var t=ii(ai),r=t[0],n=t[1];return yi((function(){var t=$a.transition;$a.transition=1;try{n(e)}finally{$a.transition=t}}),[e]),r},useTransition:function(){var e=ii(ai)[0];return[hi().current,e]},useMutableSource:ci,useOpaqueIdentifier:function(){return ii(ai)[0]},unstable_isNewReconciler:!1},Ri={readContext:ra,useCallback:Si,useContext:ra,useEffect:yi,useImperativeHandle:ki,useLayoutEffect:vi,useMemo:_i,useReducer:li,useRef:hi,useState:function(){return li(ai)},useDebugValue:xi,useDeferredValue:function(e){var t=li(ai),r=t[0],n=t[1];return yi((function(){var t=$a.transition;$a.transition=1;try{n(e)}finally{$a.transition=t}}),[e]),r},useTransition:function(){var e=li(ai)[0];return[hi().current,e]},useMutableSource:ci,useOpaqueIdentifier:function(){return li(ai)[0]},unstable_isNewReconciler:!1},Pi=k.ReactCurrentOwner,Ti=!1;function ji(e,t,r,n){t.child=null===e?Sa(t,null,r,n):xa(t,e.child,r,n)}function Ni(e,t,r,n,o){r=r.render;var a=t.ref;return ta(t,o),n=ri(e,t,r,n,a,o),null===e||Ti?(t.flags|=1,ji(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~o,Zi(e,t,o))}function Li(e,t,r,n,o,a){if(null===e){var i=r.type;return"function"!=typeof i||Fs(i)||void 0!==i.defaultProps||null!==r.compare||void 0!==r.defaultProps?((e=Bs(r.type,null,n,t,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=i,Fi(e,t,i,n,o,a))}return i=e.child,0==(o&a)&&(o=i.memoizedProps,(r=null!==(r=r.compare)?r:ln)(o,n)&&e.ref===t.ref)?Zi(e,t,a):(t.flags|=1,(e=Ms(i,n)).ref=t.ref,e.return=t,t.child=e)}function Fi(e,t,r,n,o,a){if(null!==e&&ln(e.memoizedProps,n)&&e.ref===t.ref){if(Ti=!1,0==(a&o))return t.lanes=e.lanes,Zi(e,t,a);0!=(16384&e.flags)&&(Ti=!0)}return Di(e,t,r,n,a)}function Mi(e,t,r){var n=t.pendingProps,o=n.children,a=null!==e?e.memoizedState:null;if("hidden"===n.mode||"unstable-defer-without-hiding"===n.mode)if(0==(4&t.mode))t.memoizedState={baseLanes:0},ps(0,r);else{if(0==(1073741824&r))return e=null!==a?a.baseLanes|r:r,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e},ps(0,e),null;t.memoizedState={baseLanes:0},ps(0,null!==a?a.baseLanes:r)}else null!==a?(n=a.baseLanes|r,t.memoizedState=null):n=r,ps(0,n);return ji(e,t,o,r),t.child}function Bi(e,t){var r=t.ref;(null===e&&null!==r||null!==e&&e.ref!==r)&&(t.flags|=128)}function Di(e,t,r,n,o){var a=po(r)?co:so.current;return a=fo(t,a),ta(t,o),r=ri(e,t,r,n,a,o),null===e||Ti?(t.flags|=1,ji(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~o,Zi(e,t,o))}function Ii(e,t,r,n,o){if(po(r)){var a=!0;bo(t)}else a=!1;if(ta(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),ma(t,r,n),ba(t,r,n,o),n=!0;else if(null===e){var i=t.stateNode,l=t.memoizedProps;i.props=l;var s=i.context,u=r.contextType;u="object"==typeof u&&null!==u?ra(u):fo(t,u=po(r)?co:so.current);var c=r.getDerivedStateFromProps,f="function"==typeof c||"function"==typeof i.getSnapshotBeforeUpdate;f||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==n||s!==u)&&ga(t,i,n,u),na=!1;var d=t.memoizedState;i.state=d,ua(t,n,i,o),s=t.memoizedState,l!==n||d!==s||uo.current||na?("function"==typeof c&&(da(t,r,c,n),s=t.memoizedState),(l=na||ha(t,r,l,n,d,s,u))?(f||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(t.flags|=4)):("function"==typeof i.componentDidMount&&(t.flags|=4),t.memoizedProps=n,t.memoizedState=s),i.props=n,i.state=s,i.context=u,n=l):("function"==typeof i.componentDidMount&&(t.flags|=4),n=!1)}else{i=t.stateNode,aa(e,t),l=t.memoizedProps,u=t.type===t.elementType?l:$o(t.type,l),i.props=u,f=t.pendingProps,d=i.context,s="object"==typeof(s=r.contextType)&&null!==s?ra(s):fo(t,s=po(r)?co:so.current);var p=r.getDerivedStateFromProps;(c="function"==typeof p||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==f||d!==s)&&ga(t,i,n,s),na=!1,d=t.memoizedState,i.state=d,ua(t,n,i,o);var h=t.memoizedState;l!==f||d!==h||uo.current||na?("function"==typeof p&&(da(t,r,p,n),h=t.memoizedState),(u=na||ha(t,r,u,n,d,h,s))?(c||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(n,h,s),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(n,h,s)),"function"==typeof i.componentDidUpdate&&(t.flags|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(t.flags|=256)):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),t.memoizedProps=n,t.memoizedState=h),i.props=n,i.state=h,i.context=s,n=u):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),n=!1)}return Hi(e,t,r,n,a,o)}function Hi(e,t,r,n,o,a){Bi(e,t);var i=0!=(64&t.flags);if(!n&&!i)return o&&yo(t,r,!1),Zi(e,t,a);n=t.stateNode,Pi.current=t;var l=i&&"function"!=typeof r.getDerivedStateFromError?null:n.render();return t.flags|=1,null!==e&&i?(t.child=xa(t,e.child,null,a),t.child=xa(t,null,l,a)):ji(e,t,l,a),t.memoizedState=n.state,o&&yo(t,r,!0),t.child}function Wi(e){var t=e.stateNode;t.pendingContext?mo(0,t.pendingContext,t.pendingContext!==t.context):t.context&&mo(0,t.context,!1),Oa(e,t.containerInfo)}var Ui,Vi,qi,Gi={dehydrated:null,retryLane:0};function $i(e,t,r){var n,o=t.pendingProps,a=ja.current,i=!1;return(n=0!=(64&t.flags))||(n=(null===e||null!==e.memoizedState)&&0!=(2&a)),n?(i=!0,t.flags&=-65):null!==e&&null===e.memoizedState||void 0===o.fallback||!0===o.unstable_avoidThisFallback||(a|=1),io(ja,1&a),null===e?(void 0!==o.fallback&&Ia(t),e=o.children,a=o.fallback,i?(e=Qi(t,e,a,r),t.child.memoizedState={baseLanes:r},t.memoizedState=Gi,e):"number"==typeof o.unstable_expectedLoadTime?(e=Qi(t,e,a,r),t.child.memoizedState={baseLanes:r},t.memoizedState=Gi,t.lanes=33554432,e):((r=Is({mode:"visible",children:e},t.mode,r,null)).return=t,t.child=r)):(e.memoizedState,i?(o=function(e,t,r,n,o){var a=t.mode,i=e.child;e=i.sibling;var l={mode:"hidden",children:r};return 0==(2&a)&&t.child!==i?((r=t.child).childLanes=0,r.pendingProps=l,null!==(i=r.lastEffect)?(t.firstEffect=r.firstEffect,t.lastEffect=i,i.nextEffect=null):t.firstEffect=t.lastEffect=null):r=Ms(i,l),null!==e?n=Ms(e,n):(n=Ds(n,a,o,null)).flags|=2,n.return=t,r.return=t,r.sibling=n,t.child=r,n}(e,t,o.children,o.fallback,r),i=t.child,a=e.child.memoizedState,i.memoizedState=null===a?{baseLanes:r}:{baseLanes:a.baseLanes|r},i.childLanes=e.childLanes&~r,t.memoizedState=Gi,o):(r=function(e,t,r,n){var o=e.child;return e=o.sibling,r=Ms(o,{mode:"visible",children:r}),0==(2&t.mode)&&(r.lanes=n),r.return=t,r.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,t.firstEffect=t.lastEffect=e),t.child=r}(e,t,o.children,r),t.memoizedState=null,r))}function Qi(e,t,r,n){var o=e.mode,a=e.child;return t={mode:"hidden",children:t},0==(2&o)&&null!==a?(a.childLanes=0,a.pendingProps=t):a=Is(t,o,0,null),r=Ds(r,o,n,null),a.return=e,r.return=e,a.sibling=r,e.child=a,r}function Ki(e,t){e.lanes|=t;var r=e.alternate;null!==r&&(r.lanes|=t),ea(e.return,t)}function Xi(e,t,r,n,o,a){var i=e.memoizedState;null===i?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:n,tail:r,tailMode:o,lastEffect:a}:(i.isBackwards=t,i.rendering=null,i.renderingStartTime=0,i.last=n,i.tail=r,i.tailMode=o,i.lastEffect=a)}function Yi(e,t,r){var n=t.pendingProps,o=n.revealOrder,a=n.tail;if(ji(e,t,n.children,r),0!=(2&(n=ja.current)))n=1&n|2,t.flags|=64;else{if(null!==e&&0!=(64&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Ki(e,r);else if(19===e.tag)Ki(e,r);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}n&=1}if(io(ja,n),0==(2&t.mode))t.memoizedState=null;else switch(o){case"forwards":for(r=t.child,o=null;null!==r;)null!==(e=r.alternate)&&null===Na(e)&&(o=r),r=r.sibling;null===(r=o)?(o=t.child,t.child=null):(o=r.sibling,r.sibling=null),Xi(t,!1,o,r,a,t.lastEffect);break;case"backwards":for(r=null,o=t.child,t.child=null;null!==o;){if(null!==(e=o.alternate)&&null===Na(e)){t.child=o;break}e=o.sibling,o.sibling=r,r=o,o=e}Xi(t,!0,r,null,a,t.lastEffect);break;case"together":Xi(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function Zi(e,t,r){if(null!==e&&(t.dependencies=e.dependencies),Nl|=t.lanes,0!=(r&t.childLanes)){if(null!==e&&t.child!==e.child)throw Error(i(153));if(null!==t.child){for(r=Ms(e=t.child,e.pendingProps),t.child=r,r.return=t;null!==e.sibling;)e=e.sibling,(r=r.sibling=Ms(e,e.pendingProps)).return=t;r.sibling=null}return t.child}return null}function Ji(e,t){if(!Ma)switch(e.tailMode){case"hidden":t=e.tail;for(var r=null;null!==t;)null!==t.alternate&&(r=t),t=t.sibling;null===r?e.tail=null:r.sibling=null;break;case"collapsed":r=e.tail;for(var n=null;null!==r;)null!==r.alternate&&(n=r),r=r.sibling;null===n?t||null===e.tail?e.tail=null:e.tail.sibling=null:n.sibling=null}}function el(e,t,r){var n=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return po(t.type)&&ho(),null;case 3:return Ra(),ao(uo),ao(so),qa(),(n=t.stateNode).pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||(Wa(t)?t.flags|=4:n.hydrate||(t.flags|=256)),null;case 5:Ta(t);var a=za(Aa.current);if(r=t.type,null!==e&&null!=t.stateNode)Vi(e,t,r,n),e.ref!==t.ref&&(t.flags|=128);else{if(!n){if(null===t.stateNode)throw Error(i(166));return null}if(e=za(Ca.current),Wa(t)){n=t.stateNode,r=t.type;var l=t.memoizedProps;switch(n[$n]=t,n[Qn]=l,r){case"dialog":Cn("cancel",n),Cn("close",n);break;case"iframe":case"object":case"embed":Cn("load",n);break;case"video":case"audio":for(e=0;e<kn.length;e++)Cn(kn[e],n);break;case"source":Cn("error",n);break;case"img":case"image":case"link":Cn("error",n),Cn("load",n);break;case"details":Cn("toggle",n);break;case"input":ee(n,l),Cn("invalid",n);break;case"select":n._wrapperState={wasMultiple:!!l.multiple},Cn("invalid",n);break;case"textarea":se(n,l),Cn("invalid",n)}for(var u in Se(r,l),e=null,l)l.hasOwnProperty(u)&&(a=l[u],"children"===u?"string"==typeof a?n.textContent!==a&&(e=["children",a]):"number"==typeof a&&n.textContent!==""+a&&(e=["children",""+a]):s.hasOwnProperty(u)&&null!=a&&"onScroll"===u&&Cn("scroll",n));switch(r){case"input":X(n),ne(n,l,!0);break;case"textarea":X(n),ce(n);break;case"select":case"option":break;default:"function"==typeof l.onClick&&(n.onclick=Ln)}n=e,t.updateQueue=n,null!==n&&(t.flags|=4)}else{switch(u=9===a.nodeType?a:a.ownerDocument,e===fe&&(e=de(r)),e===fe?"script"===r?((e=u.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof n.is?e=u.createElement(r,{is:n.is}):(e=u.createElement(r),"select"===r&&(u=e,n.multiple?u.multiple=!0:n.size&&(u.size=n.size))):e=u.createElementNS(e,r),e[$n]=t,e[Qn]=n,Ui(e,t),t.stateNode=e,u=_e(r,n),r){case"dialog":Cn("cancel",e),Cn("close",e),a=n;break;case"iframe":case"object":case"embed":Cn("load",e),a=n;break;case"video":case"audio":for(a=0;a<kn.length;a++)Cn(kn[a],e);a=n;break;case"source":Cn("error",e),a=n;break;case"img":case"image":case"link":Cn("error",e),Cn("load",e),a=n;break;case"details":Cn("toggle",e),a=n;break;case"input":ee(e,n),a=J(e,n),Cn("invalid",e);break;case"option":a=ae(e,n);break;case"select":e._wrapperState={wasMultiple:!!n.multiple},a=o({},n,{value:void 0}),Cn("invalid",e);break;case"textarea":se(e,n),a=le(e,n),Cn("invalid",e);break;default:a=n}Se(r,a);var c=a;for(l in c)if(c.hasOwnProperty(l)){var f=c[l];"style"===l?ke(e,f):"dangerouslySetInnerHTML"===l?null!=(f=f?f.__html:void 0)&&ge(e,f):"children"===l?"string"==typeof f?("textarea"!==r||""!==f)&&be(e,f):"number"==typeof f&&be(e,""+f):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(s.hasOwnProperty(l)?null!=f&&"onScroll"===l&&Cn("scroll",e):null!=f&&w(e,l,f,u))}switch(r){case"input":X(e),ne(e,n,!1);break;case"textarea":X(e),ce(e);break;case"option":null!=n.value&&e.setAttribute("value",""+Q(n.value));break;case"select":e.multiple=!!n.multiple,null!=(l=n.value)?ie(e,!!n.multiple,l,!1):null!=n.defaultValue&&ie(e,!!n.multiple,n.defaultValue,!0);break;default:"function"==typeof a.onClick&&(e.onclick=Ln)}Bn(r,n)&&(t.flags|=4)}null!==t.ref&&(t.flags|=128)}return null;case 6:if(e&&null!=t.stateNode)qi(0,t,e.memoizedProps,n);else{if("string"!=typeof n&&null===t.stateNode)throw Error(i(166));r=za(Aa.current),za(Ca.current),Wa(t)?(n=t.stateNode,r=t.memoizedProps,n[$n]=t,n.nodeValue!==r&&(t.flags|=4)):((n=(9===r.nodeType?r:r.ownerDocument).createTextNode(n))[$n]=t,t.stateNode=n)}return null;case 13:return ao(ja),n=t.memoizedState,0!=(64&t.flags)?(t.lanes=r,t):(n=null!==n,r=!1,null===e?void 0!==t.memoizedProps.fallback&&Wa(t):r=null!==e.memoizedState,n&&!r&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&ja.current)?0===Pl&&(Pl=3):(0!==Pl&&3!==Pl||(Pl=4),null===El||0==(134217727&Nl)&&0==(134217727&Ll)||fs(El,zl))),(n||r)&&(t.flags|=4),null);case 4:return Ra(),null===e&&An(t.stateNode.containerInfo),null;case 10:return Jo(t),null;case 17:return po(t.type)&&ho(),null;case 19:if(ao(ja),null===(n=t.memoizedState))return null;if(l=0!=(64&t.flags),null===(u=n.rendering))if(l)Ji(n,!1);else{if(0!==Pl||null!==e&&0!=(64&e.flags))for(e=t.child;null!==e;){if(null!==(u=Na(e))){for(t.flags|=64,Ji(n,!1),null!==(l=u.updateQueue)&&(t.updateQueue=l,t.flags|=4),null===n.lastEffect&&(t.firstEffect=null),t.lastEffect=n.lastEffect,n=r,r=t.child;null!==r;)e=n,(l=r).flags&=2,l.nextEffect=null,l.firstEffect=null,l.lastEffect=null,null===(u=l.alternate)?(l.childLanes=0,l.lanes=e,l.child=null,l.memoizedProps=null,l.memoizedState=null,l.updateQueue=null,l.dependencies=null,l.stateNode=null):(l.childLanes=u.childLanes,l.lanes=u.lanes,l.child=u.child,l.memoizedProps=u.memoizedProps,l.memoizedState=u.memoizedState,l.updateQueue=u.updateQueue,l.type=u.type,e=u.dependencies,l.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),r=r.sibling;return io(ja,1&ja.current|2),t.child}e=e.sibling}null!==n.tail&&Do()>Dl&&(t.flags|=64,l=!0,Ji(n,!1),t.lanes=33554432)}else{if(!l)if(null!==(e=Na(u))){if(t.flags|=64,l=!0,null!==(r=e.updateQueue)&&(t.updateQueue=r,t.flags|=4),Ji(n,!0),null===n.tail&&"hidden"===n.tailMode&&!u.alternate&&!Ma)return null!==(t=t.lastEffect=n.lastEffect)&&(t.nextEffect=null),null}else 2*Do()-n.renderingStartTime>Dl&&1073741824!==r&&(t.flags|=64,l=!0,Ji(n,!1),t.lanes=33554432);n.isBackwards?(u.sibling=t.child,t.child=u):(null!==(r=n.last)?r.sibling=u:t.child=u,n.last=u)}return null!==n.tail?(r=n.tail,n.rendering=r,n.tail=r.sibling,n.lastEffect=t.lastEffect,n.renderingStartTime=Do(),r.sibling=null,t=ja.current,io(ja,l?1&t|2:1&t),r):null;case 23:case 24:return hs(),null!==e&&null!==e.memoizedState!=(null!==t.memoizedState)&&"unstable-defer-without-hiding"!==n.mode&&(t.flags|=4),null}throw Error(i(156,t.tag))}function tl(e){switch(e.tag){case 1:po(e.type)&&ho();var t=e.flags;return 4096&t?(e.flags=-4097&t|64,e):null;case 3:if(Ra(),ao(uo),ao(so),qa(),0!=(64&(t=e.flags)))throw Error(i(285));return e.flags=-4097&t|64,e;case 5:return Ta(e),null;case 13:return ao(ja),4096&(t=e.flags)?(e.flags=-4097&t|64,e):null;case 19:return ao(ja),null;case 4:return Ra(),null;case 10:return Jo(e),null;case 23:case 24:return hs(),null;default:return null}}function rl(e,t){try{var r="",n=t;do{r+=G(n),n=n.return}while(n);var o=r}catch(e){o="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:o}}function nl(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}Ui=function(e,t){for(var r=t.child;null!==r;){if(5===r.tag||6===r.tag)e.appendChild(r.stateNode);else if(4!==r.tag&&null!==r.child){r.child.return=r,r=r.child;continue}if(r===t)break;for(;null===r.sibling;){if(null===r.return||r.return===t)return;r=r.return}r.sibling.return=r.return,r=r.sibling}},Vi=function(e,t,r,n){var a=e.memoizedProps;if(a!==n){e=t.stateNode,za(Ca.current);var i,l=null;switch(r){case"input":a=J(e,a),n=J(e,n),l=[];break;case"option":a=ae(e,a),n=ae(e,n),l=[];break;case"select":a=o({},a,{value:void 0}),n=o({},n,{value:void 0}),l=[];break;case"textarea":a=le(e,a),n=le(e,n),l=[];break;default:"function"!=typeof a.onClick&&"function"==typeof n.onClick&&(e.onclick=Ln)}for(f in Se(r,n),r=null,a)if(!n.hasOwnProperty(f)&&a.hasOwnProperty(f)&&null!=a[f])if("style"===f){var u=a[f];for(i in u)u.hasOwnProperty(i)&&(r||(r={}),r[i]="")}else"dangerouslySetInnerHTML"!==f&&"children"!==f&&"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(s.hasOwnProperty(f)?l||(l=[]):(l=l||[]).push(f,null));for(f in n){var c=n[f];if(u=null!=a?a[f]:void 0,n.hasOwnProperty(f)&&c!==u&&(null!=c||null!=u))if("style"===f)if(u){for(i in u)!u.hasOwnProperty(i)||c&&c.hasOwnProperty(i)||(r||(r={}),r[i]="");for(i in c)c.hasOwnProperty(i)&&u[i]!==c[i]&&(r||(r={}),r[i]=c[i])}else r||(l||(l=[]),l.push(f,r)),r=c;else"dangerouslySetInnerHTML"===f?(c=c?c.__html:void 0,u=u?u.__html:void 0,null!=c&&u!==c&&(l=l||[]).push(f,c)):"children"===f?"string"!=typeof c&&"number"!=typeof c||(l=l||[]).push(f,""+c):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&(s.hasOwnProperty(f)?(null!=c&&"onScroll"===f&&Cn("scroll",e),l||u===c||(l=[])):"object"==typeof c&&null!==c&&c.$$typeof===L?c.toString():(l=l||[]).push(f,c))}r&&(l=l||[]).push("style",r);var f=l;(t.updateQueue=f)&&(t.flags|=4)}},qi=function(e,t,r,n){r!==n&&(t.flags|=4)};var ol="function"==typeof WeakMap?WeakMap:Map;function al(e,t,r){(r=ia(-1,r)).tag=3,r.payload={element:null};var n=t.value;return r.callback=function(){Ul||(Ul=!0,Vl=n),nl(0,t)},r}function il(e,t,r){(r=ia(-1,r)).tag=3;var n=e.type.getDerivedStateFromError;if("function"==typeof n){var o=t.value;r.payload=function(){return nl(0,t),n(o)}}var a=e.stateNode;return null!==a&&"function"==typeof a.componentDidCatch&&(r.callback=function(){"function"!=typeof n&&(null===ql?ql=new Set([this]):ql.add(this),nl(0,t));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),r}var ll="function"==typeof WeakSet?WeakSet:Set;function sl(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Ps(e,t)}else t.current=null}function ul(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.flags&&null!==e){var r=e.memoizedProps,n=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?r:$o(t.type,r),n),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:return void(256&t.flags&&Wn(t.stateNode.containerInfo));case 5:case 6:case 4:case 17:return}throw Error(i(163))}function cl(e,t,r){switch(r.tag){case 0:case 11:case 15:case 22:if(null!==(t=null!==(t=r.updateQueue)?t.lastEffect:null)){e=t=t.next;do{if(3==(3&e.tag)){var n=e.create;e.destroy=n()}e=e.next}while(e!==t)}if(null!==(t=null!==(t=r.updateQueue)?t.lastEffect:null)){e=t=t.next;do{var o=e;n=o.next,0!=(4&(o=o.tag))&&0!=(1&o)&&(zs(r,e),As(r,e)),e=n}while(e!==t)}return;case 1:return e=r.stateNode,4&r.flags&&(null===t?e.componentDidMount():(n=r.elementType===r.type?t.memoizedProps:$o(r.type,t.memoizedProps),e.componentDidUpdate(n,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(t=r.updateQueue)&&ca(r,t,e));case 3:if(null!==(t=r.updateQueue)){if(e=null,null!==r.child)switch(r.child.tag){case 5:e=r.child.stateNode;break;case 1:e=r.child.stateNode}ca(r,t,e)}return;case 5:return e=r.stateNode,void(null===t&&4&r.flags&&Bn(r.type,r.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===r.memoizedState&&(r=r.alternate,null!==r&&(r=r.memoizedState,null!==r&&(r=r.dehydrated,null!==r&&wt(r)))));case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(i(163))}function fl(e,t){for(var r=e;;){if(5===r.tag){var n=r.stateNode;if(t)"function"==typeof(n=n.style).setProperty?n.setProperty("display","none","important"):n.display="none";else{n=r.stateNode;var o=r.memoizedProps.style;o=null!=o&&o.hasOwnProperty("display")?o.display:null,n.style.display=we("display",o)}}else if(6===r.tag)r.stateNode.nodeValue=t?"":r.memoizedProps;else if((23!==r.tag&&24!==r.tag||null===r.memoizedState||r===e)&&null!==r.child){r.child.return=r,r=r.child;continue}if(r===e)break;for(;null===r.sibling;){if(null===r.return||r.return===e)return;r=r.return}r.sibling.return=r.return,r=r.sibling}}function dl(e,t){if(wo&&"function"==typeof wo.onCommitFiberUnmount)try{wo.onCommitFiberUnmount(vo,t)}catch(e){}switch(t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e=e.next;do{var n=r,o=n.destroy;if(n=n.tag,void 0!==o)if(0!=(4&n))zs(t,r);else{n=t;try{o()}catch(e){Ps(n,e)}}r=r.next}while(r!==e)}break;case 1:if(sl(t),"function"==typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(e){Ps(t,e)}break;case 5:sl(t);break;case 4:yl(e,t)}}function pl(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function hl(e){return 5===e.tag||3===e.tag||4===e.tag}function ml(e){e:{for(var t=e.return;null!==t;){if(hl(t))break e;t=t.return}throw Error(i(160))}var r=t;switch(t=r.stateNode,r.tag){case 5:var n=!1;break;case 3:case 4:t=t.containerInfo,n=!0;break;default:throw Error(i(161))}16&r.flags&&(be(t,""),r.flags&=-17);e:t:for(r=e;;){for(;null===r.sibling;){if(null===r.return||hl(r.return)){r=null;break e}r=r.return}for(r.sibling.return=r.return,r=r.sibling;5!==r.tag&&6!==r.tag&&18!==r.tag;){if(2&r.flags)continue t;if(null===r.child||4===r.tag)continue t;r.child.return=r,r=r.child}if(!(2&r.flags)){r=r.stateNode;break e}}n?gl(e,r,t):bl(e,r,t)}function gl(e,t,r){var n=e.tag,o=5===n||6===n;if(o)e=o?e.stateNode:e.stateNode.instance,t?8===r.nodeType?r.parentNode.insertBefore(e,t):r.insertBefore(e,t):(8===r.nodeType?(t=r.parentNode).insertBefore(e,r):(t=r).appendChild(e),null!=(r=r._reactRootContainer)||null!==t.onclick||(t.onclick=Ln));else if(4!==n&&null!==(e=e.child))for(gl(e,t,r),e=e.sibling;null!==e;)gl(e,t,r),e=e.sibling}function bl(e,t,r){var n=e.tag,o=5===n||6===n;if(o)e=o?e.stateNode:e.stateNode.instance,t?r.insertBefore(e,t):r.appendChild(e);else if(4!==n&&null!==(e=e.child))for(bl(e,t,r),e=e.sibling;null!==e;)bl(e,t,r),e=e.sibling}function yl(e,t){for(var r,n,o=t,a=!1;;){if(!a){a=o.return;e:for(;;){if(null===a)throw Error(i(160));switch(r=a.stateNode,a.tag){case 5:n=!1;break e;case 3:case 4:r=r.containerInfo,n=!0;break e}a=a.return}a=!0}if(5===o.tag||6===o.tag){e:for(var l=e,s=o,u=s;;)if(dl(l,u),null!==u.child&&4!==u.tag)u.child.return=u,u=u.child;else{if(u===s)break e;for(;null===u.sibling;){if(null===u.return||u.return===s)break e;u=u.return}u.sibling.return=u.return,u=u.sibling}n?(l=r,s=o.stateNode,8===l.nodeType?l.parentNode.removeChild(s):l.removeChild(s)):r.removeChild(o.stateNode)}else if(4===o.tag){if(null!==o.child){r=o.stateNode.containerInfo,n=!0,o.child.return=o,o=o.child;continue}}else if(dl(e,o),null!==o.child){o.child.return=o,o=o.child;continue}if(o===t)break;for(;null===o.sibling;){if(null===o.return||o.return===t)return;4===(o=o.return).tag&&(a=!1)}o.sibling.return=o.return,o=o.sibling}}function vl(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:var r=t.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var n=r=r.next;do{3==(3&n.tag)&&(e=n.destroy,n.destroy=void 0,void 0!==e&&e()),n=n.next}while(n!==r)}return;case 1:return;case 5:if(null!=(r=t.stateNode)){n=t.memoizedProps;var o=null!==e?e.memoizedProps:n;e=t.type;var a=t.updateQueue;if(t.updateQueue=null,null!==a){for(r[Qn]=n,"input"===e&&"radio"===n.type&&null!=n.name&&te(r,n),_e(e,o),t=_e(e,n),o=0;o<a.length;o+=2){var l=a[o],s=a[o+1];"style"===l?ke(r,s):"dangerouslySetInnerHTML"===l?ge(r,s):"children"===l?be(r,s):w(r,l,s,t)}switch(e){case"input":re(r,n);break;case"textarea":ue(r,n);break;case"select":e=r._wrapperState.wasMultiple,r._wrapperState.wasMultiple=!!n.multiple,null!=(a=n.value)?ie(r,!!n.multiple,a,!1):e!==!!n.multiple&&(null!=n.defaultValue?ie(r,!!n.multiple,n.defaultValue,!0):ie(r,!!n.multiple,n.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(i(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((r=t.stateNode).hydrate&&(r.hydrate=!1,wt(r.containerInfo)));case 12:return;case 13:return null!==t.memoizedState&&(Bl=Do(),fl(t.child,!0)),void wl(t);case 19:return void wl(t);case 17:return;case 23:case 24:return void fl(t,null!==t.memoizedState)}throw Error(i(163))}function wl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var r=e.stateNode;null===r&&(r=e.stateNode=new ll),t.forEach((function(t){var n=js.bind(null,e,t);r.has(t)||(r.add(t),t.then(n,n))}))}}function kl(e,t){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&null!==(t=t.memoizedState)&&null===t.dehydrated}var xl=Math.ceil,Sl=k.ReactCurrentDispatcher,_l=k.ReactCurrentOwner,Cl=0,El=null,Al=null,zl=0,Ol=0,Rl=oo(0),Pl=0,Tl=null,jl=0,Nl=0,Ll=0,Fl=0,Ml=null,Bl=0,Dl=1/0;function Il(){Dl=Do()+500}var Hl,Wl=null,Ul=!1,Vl=null,ql=null,Gl=!1,$l=null,Ql=90,Kl=[],Xl=[],Yl=null,Zl=0,Jl=null,es=-1,ts=0,rs=0,ns=null,os=!1;function as(){return 0!=(48&Cl)?Do():-1!==es?es:es=Do()}function is(e){if(0==(2&(e=e.mode)))return 1;if(0==(4&e))return 99===Io()?1:2;if(0===ts&&(ts=jl),0!==Go.transition){0!==rs&&(rs=null!==Ml?Ml.pendingLanes:0),e=ts;var t=4186112&~rs;return 0==(t&=-t)&&0==(t=(e=4186112&~e)&-e)&&(t=8192),t}return e=Io(),e=Bt(0!=(4&Cl)&&98===e?12:e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),ts)}function ls(e,t,r){if(50<Zl)throw Zl=0,Jl=null,Error(i(185));if(null===(e=ss(e,t)))return null;Ht(e,t,r),e===El&&(Ll|=t,4===Pl&&fs(e,zl));var n=Io();1===t?0!=(8&Cl)&&0==(48&Cl)?ds(e):(us(e,r),0===Cl&&(Il(),Vo())):(0==(4&Cl)||98!==n&&99!==n||(null===Yl?Yl=new Set([e]):Yl.add(e)),us(e,r)),Ml=e}function ss(e,t){e.lanes|=t;var r=e.alternate;for(null!==r&&(r.lanes|=t),r=e,e=e.return;null!==e;)e.childLanes|=t,null!==(r=e.alternate)&&(r.childLanes|=t),r=e,e=e.return;return 3===r.tag?r.stateNode:null}function us(e,t){for(var r=e.callbackNode,n=e.suspendedLanes,o=e.pingedLanes,a=e.expirationTimes,l=e.pendingLanes;0<l;){var s=31-Wt(l),u=1<<s,c=a[s];if(-1===c){if(0==(u&n)||0!=(u&o)){c=t,Lt(u);var f=Nt;a[s]=10<=f?c+250:6<=f?c+5e3:-1}}else c<=t&&(e.expiredLanes|=u);l&=~u}if(n=Ft(e,e===El?zl:0),t=Nt,0===n)null!==r&&(r!==jo&&So(r),e.callbackNode=null,e.callbackPriority=0);else{if(null!==r){if(e.callbackPriority===t)return;r!==jo&&So(r)}15===t?(r=ds.bind(null,e),null===Lo?(Lo=[r],Fo=xo(zo,qo)):Lo.push(r),r=jo):r=14===t?Uo(99,ds.bind(null,e)):Uo(r=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(i(358,e))}}(t),cs.bind(null,e)),e.callbackPriority=t,e.callbackNode=r}}function cs(e){if(es=-1,rs=ts=0,0!=(48&Cl))throw Error(i(327));var t=e.callbackNode;if(Es()&&e.callbackNode!==t)return null;var r=Ft(e,e===El?zl:0);if(0===r)return null;var n=r,o=Cl;Cl|=16;var a=bs();for(El===e&&zl===n||(Il(),ms(e,n));;)try{ws();break}catch(t){gs(e,t)}if(Zo(),Sl.current=a,Cl=o,null!==Al?n=0:(El=null,zl=0,n=Pl),0!=(jl&Ll))ms(e,0);else if(0!==n){if(2===n&&(Cl|=64,e.hydrate&&(e.hydrate=!1,Wn(e.containerInfo)),0!==(r=Mt(e))&&(n=ys(e,r))),1===n)throw t=Tl,ms(e,0),fs(e,r),us(e,Do()),t;switch(e.finishedWork=e.current.alternate,e.finishedLanes=r,n){case 0:case 1:throw Error(i(345));case 2:Ss(e);break;case 3:if(fs(e,r),(62914560&r)===r&&10<(n=Bl+500-Do())){if(0!==Ft(e,0))break;if(((o=e.suspendedLanes)&r)!==r){as(),e.pingedLanes|=e.suspendedLanes&o;break}e.timeoutHandle=In(Ss.bind(null,e),n);break}Ss(e);break;case 4:if(fs(e,r),(4186112&r)===r)break;for(n=e.eventTimes,o=-1;0<r;){var l=31-Wt(r);a=1<<l,(l=n[l])>o&&(o=l),r&=~a}if(r=o,10<(r=(120>(r=Do()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*xl(r/1960))-r)){e.timeoutHandle=In(Ss.bind(null,e),r);break}Ss(e);break;case 5:Ss(e);break;default:throw Error(i(329))}}return us(e,Do()),e.callbackNode===t?cs.bind(null,e):null}function fs(e,t){for(t&=~Fl,t&=~Ll,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var r=31-Wt(t),n=1<<r;e[r]=-1,t&=~n}}function ds(e){if(0!=(48&Cl))throw Error(i(327));if(Es(),e===El&&0!=(e.expiredLanes&zl)){var t=zl,r=ys(e,t);0!=(jl&Ll)&&(r=ys(e,t=Ft(e,t)))}else r=ys(e,t=Ft(e,0));if(0!==e.tag&&2===r&&(Cl|=64,e.hydrate&&(e.hydrate=!1,Wn(e.containerInfo)),0!==(t=Mt(e))&&(r=ys(e,t))),1===r)throw r=Tl,ms(e,0),fs(e,t),us(e,Do()),r;return e.finishedWork=e.current.alternate,e.finishedLanes=t,Ss(e),us(e,Do()),null}function ps(e,t){io(Rl,Ol),Ol|=t,jl|=t}function hs(){Ol=Rl.current,ao(Rl)}function ms(e,t){e.finishedWork=null,e.finishedLanes=0;var r=e.timeoutHandle;if(-1!==r&&(e.timeoutHandle=-1,Hn(r)),null!==Al)for(r=Al.return;null!==r;){var n=r;switch(n.tag){case 1:null!=(n=n.type.childContextTypes)&&ho();break;case 3:Ra(),ao(uo),ao(so),qa();break;case 5:Ta(n);break;case 4:Ra();break;case 13:case 19:ao(ja);break;case 10:Jo(n);break;case 23:case 24:hs()}r=r.return}El=e,Al=Ms(e.current,null),zl=Ol=jl=t,Pl=0,Tl=null,Fl=Ll=Nl=0}function gs(e,t){for(;;){var r=Al;try{if(Zo(),Ga.current=Ai,Za){for(var n=Ka.memoizedState;null!==n;){var o=n.queue;null!==o&&(o.pending=null),n=n.next}Za=!1}if(Qa=0,Ya=Xa=Ka=null,Ja=!1,_l.current=null,null===r||null===r.return){Pl=1,Tl=t,Al=null;break}e:{var a=e,i=r.return,l=r,s=t;if(t=zl,l.flags|=2048,l.firstEffect=l.lastEffect=null,null!==s&&"object"==typeof s&&"function"==typeof s.then){var u=s;if(0==(2&l.mode)){var c=l.alternate;c?(l.updateQueue=c.updateQueue,l.memoizedState=c.memoizedState,l.lanes=c.lanes):(l.updateQueue=null,l.memoizedState=null)}var f=0!=(1&ja.current),d=i;do{var p;if(p=13===d.tag){var h=d.memoizedState;if(null!==h)p=null!==h.dehydrated;else{var m=d.memoizedProps;p=void 0!==m.fallback&&(!0!==m.unstable_avoidThisFallback||!f)}}if(p){var g=d.updateQueue;if(null===g){var b=new Set;b.add(u),d.updateQueue=b}else g.add(u);if(0==(2&d.mode)){if(d.flags|=64,l.flags|=16384,l.flags&=-2981,1===l.tag)if(null===l.alternate)l.tag=17;else{var y=ia(-1,1);y.tag=2,la(l,y)}l.lanes|=1;break e}s=void 0,l=t;var v=a.pingCache;if(null===v?(v=a.pingCache=new ol,s=new Set,v.set(u,s)):void 0===(s=v.get(u))&&(s=new Set,v.set(u,s)),!s.has(l)){s.add(l);var w=Ts.bind(null,a,u,l);u.then(w,w)}d.flags|=4096,d.lanes=t;break e}d=d.return}while(null!==d);s=Error(($(l.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==Pl&&(Pl=2),s=rl(s,l),d=i;do{switch(d.tag){case 3:a=s,d.flags|=4096,t&=-t,d.lanes|=t,sa(d,al(0,a,t));break e;case 1:a=s;var k=d.type,x=d.stateNode;if(0==(64&d.flags)&&("function"==typeof k.getDerivedStateFromError||null!==x&&"function"==typeof x.componentDidCatch&&(null===ql||!ql.has(x)))){d.flags|=4096,t&=-t,d.lanes|=t,sa(d,il(d,a,t));break e}}d=d.return}while(null!==d)}xs(r)}catch(e){t=e,Al===r&&null!==r&&(Al=r=r.return);continue}break}}function bs(){var e=Sl.current;return Sl.current=Ai,null===e?Ai:e}function ys(e,t){var r=Cl;Cl|=16;var n=bs();for(El===e&&zl===t||ms(e,t);;)try{vs();break}catch(t){gs(e,t)}if(Zo(),Cl=r,Sl.current=n,null!==Al)throw Error(i(261));return El=null,zl=0,Pl}function vs(){for(;null!==Al;)ks(Al)}function ws(){for(;null!==Al&&!_o();)ks(Al)}function ks(e){var t=Hl(e.alternate,e,Ol);e.memoizedProps=e.pendingProps,null===t?xs(e):Al=t,_l.current=null}function xs(e){var t=e;do{var r=t.alternate;if(e=t.return,0==(2048&t.flags)){if(null!==(r=el(r,t,Ol)))return void(Al=r);if(24!==(r=t).tag&&23!==r.tag||null===r.memoizedState||0!=(1073741824&Ol)||0==(4&r.mode)){for(var n=0,o=r.child;null!==o;)n|=o.lanes|o.childLanes,o=o.sibling;r.childLanes=n}null!==e&&0==(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=t.firstEffect),null!==t.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=t.firstEffect),e.lastEffect=t.lastEffect),1<t.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=t:e.firstEffect=t,e.lastEffect=t))}else{if(null!==(r=tl(t)))return r.flags&=2047,void(Al=r);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(t=t.sibling))return void(Al=t);Al=t=e}while(null!==t);0===Pl&&(Pl=5)}function Ss(e){var t=Io();return Wo(99,_s.bind(null,e,t)),null}function _s(e,t){do{Es()}while(null!==$l);if(0!=(48&Cl))throw Error(i(327));var r=e.finishedWork;if(null===r)return null;if(e.finishedWork=null,e.finishedLanes=0,r===e.current)throw Error(i(177));e.callbackNode=null;var n=r.lanes|r.childLanes,o=n,a=e.pendingLanes&~o;e.pendingLanes=o,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=o,e.mutableReadLanes&=o,e.entangledLanes&=o,o=e.entanglements;for(var l=e.eventTimes,s=e.expirationTimes;0<a;){var u=31-Wt(a),c=1<<u;o[u]=0,l[u]=-1,s[u]=-1,a&=~c}if(null!==Yl&&0==(24&n)&&Yl.has(e)&&Yl.delete(e),e===El&&(Al=El=null,zl=0),1<r.flags?null!==r.lastEffect?(r.lastEffect.nextEffect=r,n=r.firstEffect):n=r:n=r.firstEffect,null!==n){if(o=Cl,Cl|=32,_l.current=null,Fn=$t,dn(l=fn())){if("selectionStart"in l)s={start:l.selectionStart,end:l.selectionEnd};else e:if(s=(s=l.ownerDocument)&&s.defaultView||window,(c=s.getSelection&&s.getSelection())&&0!==c.rangeCount){s=c.anchorNode,a=c.anchorOffset,u=c.focusNode,c=c.focusOffset;try{s.nodeType,u.nodeType}catch(e){s=null;break e}var f=0,d=-1,p=-1,h=0,m=0,g=l,b=null;t:for(;;){for(var y;g!==s||0!==a&&3!==g.nodeType||(d=f+a),g!==u||0!==c&&3!==g.nodeType||(p=f+c),3===g.nodeType&&(f+=g.nodeValue.length),null!==(y=g.firstChild);)b=g,g=y;for(;;){if(g===l)break t;if(b===s&&++h===a&&(d=f),b===u&&++m===c&&(p=f),null!==(y=g.nextSibling))break;b=(g=b).parentNode}g=y}s=-1===d||-1===p?null:{start:d,end:p}}else s=null;s=s||{start:0,end:0}}else s=null;Mn={focusedElem:l,selectionRange:s},$t=!1,ns=null,os=!1,Wl=n;do{try{Cs()}catch(e){if(null===Wl)throw Error(i(330));Ps(Wl,e),Wl=Wl.nextEffect}}while(null!==Wl);ns=null,Wl=n;do{try{for(l=e;null!==Wl;){var v=Wl.flags;if(16&v&&be(Wl.stateNode,""),128&v){var w=Wl.alternate;if(null!==w){var k=w.ref;null!==k&&("function"==typeof k?k(null):k.current=null)}}switch(1038&v){case 2:ml(Wl),Wl.flags&=-3;break;case 6:ml(Wl),Wl.flags&=-3,vl(Wl.alternate,Wl);break;case 1024:Wl.flags&=-1025;break;case 1028:Wl.flags&=-1025,vl(Wl.alternate,Wl);break;case 4:vl(Wl.alternate,Wl);break;case 8:yl(l,s=Wl);var x=s.alternate;pl(s),null!==x&&pl(x)}Wl=Wl.nextEffect}}catch(e){if(null===Wl)throw Error(i(330));Ps(Wl,e),Wl=Wl.nextEffect}}while(null!==Wl);if(k=Mn,w=fn(),v=k.focusedElem,l=k.selectionRange,w!==v&&v&&v.ownerDocument&&cn(v.ownerDocument.documentElement,v)){null!==l&&dn(v)&&(w=l.start,void 0===(k=l.end)&&(k=w),"selectionStart"in v?(v.selectionStart=w,v.selectionEnd=Math.min(k,v.value.length)):(k=(w=v.ownerDocument||document)&&w.defaultView||window).getSelection&&(k=k.getSelection(),s=v.textContent.length,x=Math.min(l.start,s),l=void 0===l.end?x:Math.min(l.end,s),!k.extend&&x>l&&(s=l,l=x,x=s),s=un(v,x),a=un(v,l),s&&a&&(1!==k.rangeCount||k.anchorNode!==s.node||k.anchorOffset!==s.offset||k.focusNode!==a.node||k.focusOffset!==a.offset)&&((w=w.createRange()).setStart(s.node,s.offset),k.removeAllRanges(),x>l?(k.addRange(w),k.extend(a.node,a.offset)):(w.setEnd(a.node,a.offset),k.addRange(w))))),w=[];for(k=v;k=k.parentNode;)1===k.nodeType&&w.push({element:k,left:k.scrollLeft,top:k.scrollTop});for("function"==typeof v.focus&&v.focus(),v=0;v<w.length;v++)(k=w[v]).element.scrollLeft=k.left,k.element.scrollTop=k.top}$t=!!Fn,Mn=Fn=null,e.current=r,Wl=n;do{try{for(v=e;null!==Wl;){var S=Wl.flags;if(36&S&&cl(v,Wl.alternate,Wl),128&S){w=void 0;var _=Wl.ref;if(null!==_){var C=Wl.stateNode;switch(Wl.tag){case 5:w=C;break;default:w=C}"function"==typeof _?_(w):_.current=w}}Wl=Wl.nextEffect}}catch(e){if(null===Wl)throw Error(i(330));Ps(Wl,e),Wl=Wl.nextEffect}}while(null!==Wl);Wl=null,No(),Cl=o}else e.current=r;if(Gl)Gl=!1,$l=e,Ql=t;else for(Wl=n;null!==Wl;)t=Wl.nextEffect,Wl.nextEffect=null,8&Wl.flags&&((S=Wl).sibling=null,S.stateNode=null),Wl=t;if(0===(n=e.pendingLanes)&&(ql=null),1===n?e===Jl?Zl++:(Zl=0,Jl=e):Zl=0,r=r.stateNode,wo&&"function"==typeof wo.onCommitFiberRoot)try{wo.onCommitFiberRoot(vo,r,void 0,64==(64&r.current.flags))}catch(e){}if(us(e,Do()),Ul)throw Ul=!1,e=Vl,Vl=null,e;return 0!=(8&Cl)||Vo(),null}function Cs(){for(;null!==Wl;){var e=Wl.alternate;os||null===ns||(0!=(8&Wl.flags)?Ze(Wl,ns)&&(os=!0):13===Wl.tag&&kl(e,Wl)&&Ze(Wl,ns)&&(os=!0));var t=Wl.flags;0!=(256&t)&&ul(e,Wl),0==(512&t)||Gl||(Gl=!0,Uo(97,(function(){return Es(),null}))),Wl=Wl.nextEffect}}function Es(){if(90!==Ql){var e=97<Ql?97:Ql;return Ql=90,Wo(e,Os)}return!1}function As(e,t){Kl.push(t,e),Gl||(Gl=!0,Uo(97,(function(){return Es(),null})))}function zs(e,t){Xl.push(t,e),Gl||(Gl=!0,Uo(97,(function(){return Es(),null})))}function Os(){if(null===$l)return!1;var e=$l;if($l=null,0!=(48&Cl))throw Error(i(331));var t=Cl;Cl|=32;var r=Xl;Xl=[];for(var n=0;n<r.length;n+=2){var o=r[n],a=r[n+1],l=o.destroy;if(o.destroy=void 0,"function"==typeof l)try{l()}catch(e){if(null===a)throw Error(i(330));Ps(a,e)}}for(r=Kl,Kl=[],n=0;n<r.length;n+=2){o=r[n],a=r[n+1];try{var s=o.create;o.destroy=s()}catch(e){if(null===a)throw Error(i(330));Ps(a,e)}}for(s=e.current.firstEffect;null!==s;)e=s.nextEffect,s.nextEffect=null,8&s.flags&&(s.sibling=null,s.stateNode=null),s=e;return Cl=t,Vo(),!0}function Rs(e,t,r){la(e,t=al(0,t=rl(r,t),1)),t=as(),null!==(e=ss(e,1))&&(Ht(e,1,t),us(e,t))}function Ps(e,t){if(3===e.tag)Rs(e,e,t);else for(var r=e.return;null!==r;){if(3===r.tag){Rs(r,e,t);break}if(1===r.tag){var n=r.stateNode;if("function"==typeof r.type.getDerivedStateFromError||"function"==typeof n.componentDidCatch&&(null===ql||!ql.has(n))){var o=il(r,e=rl(t,e),1);if(la(r,o),o=as(),null!==(r=ss(r,1)))Ht(r,1,o),us(r,o);else if("function"==typeof n.componentDidCatch&&(null===ql||!ql.has(n)))try{n.componentDidCatch(t,e)}catch(e){}break}}r=r.return}}function Ts(e,t,r){var n=e.pingCache;null!==n&&n.delete(t),t=as(),e.pingedLanes|=e.suspendedLanes&r,El===e&&(zl&r)===r&&(4===Pl||3===Pl&&(62914560&zl)===zl&&500>Do()-Bl?ms(e,0):Fl|=r),us(e,t)}function js(e,t){var r=e.stateNode;null!==r&&r.delete(t),0==(t=0)&&(0==(2&(t=e.mode))?t=1:0==(4&t)?t=99===Io()?1:2:(0===ts&&(ts=jl),0===(t=Dt(62914560&~ts))&&(t=4194304))),r=as(),null!==(e=ss(e,t))&&(Ht(e,t,r),us(e,r))}function Ns(e,t,r,n){this.tag=e,this.key=r,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=n,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function Ls(e,t,r,n){return new Ns(e,t,r,n)}function Fs(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Ms(e,t){var r=e.alternate;return null===r?((r=Ls(e.tag,t,e.key,e.mode)).elementType=e.elementType,r.type=e.type,r.stateNode=e.stateNode,r.alternate=e,e.alternate=r):(r.pendingProps=t,r.type=e.type,r.flags=0,r.nextEffect=null,r.firstEffect=null,r.lastEffect=null),r.childLanes=e.childLanes,r.lanes=e.lanes,r.child=e.child,r.memoizedProps=e.memoizedProps,r.memoizedState=e.memoizedState,r.updateQueue=e.updateQueue,t=e.dependencies,r.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},r.sibling=e.sibling,r.index=e.index,r.ref=e.ref,r}function Bs(e,t,r,n,o,a){var l=2;if(n=e,"function"==typeof e)Fs(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case _:return Ds(r.children,o,a,t);case F:l=8,o|=16;break;case C:l=8,o|=1;break;case E:return(e=Ls(12,r,t,8|o)).elementType=E,e.type=E,e.lanes=a,e;case R:return(e=Ls(13,r,t,o)).type=R,e.elementType=R,e.lanes=a,e;case P:return(e=Ls(19,r,t,o)).elementType=P,e.lanes=a,e;case M:return Is(r,o,a,t);case B:return(e=Ls(24,r,t,o)).elementType=B,e.lanes=a,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case A:l=10;break e;case z:l=9;break e;case O:l=11;break e;case T:l=14;break e;case j:l=16,n=null;break e;case N:l=22;break e}throw Error(i(130,null==e?e:typeof e,""))}return(t=Ls(l,r,t,o)).elementType=e,t.type=n,t.lanes=a,t}function Ds(e,t,r,n){return(e=Ls(7,e,n,t)).lanes=r,e}function Is(e,t,r,n){return(e=Ls(23,e,n,t)).elementType=M,e.lanes=r,e}function Hs(e,t,r){return(e=Ls(6,e,null,t)).lanes=r,e}function Ws(e,t,r){return(t=Ls(4,null!==e.children?e.children:[],e.key,t)).lanes=r,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Us(e,t,r){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=r,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=It(0),this.expirationTimes=It(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=It(0),this.mutableSourceEagerHydrationData=null}function Vs(e,t,r,n){var o=t.current,a=as(),l=is(o);e:if(r){t:{if(Ke(r=r._reactInternals)!==r||1!==r.tag)throw Error(i(170));var s=r;do{switch(s.tag){case 3:s=s.stateNode.context;break t;case 1:if(po(s.type)){s=s.stateNode.__reactInternalMemoizedMergedChildContext;break t}}s=s.return}while(null!==s);throw Error(i(171))}if(1===r.tag){var u=r.type;if(po(u)){r=go(r,u,s);break e}}r=s}else r=lo;return null===t.context?t.context=r:t.pendingContext=r,(t=ia(a,l)).payload={element:e},null!==(n=void 0===n?null:n)&&(t.callback=n),la(o,t),ls(o,l,a),l}function qs(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Gs(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var r=e.retryLane;e.retryLane=0!==r&&r<t?r:t}}function $s(e,t){Gs(e,t),(e=e.alternate)&&Gs(e,t)}function Qs(e,t,r){var n=null!=r&&null!=r.hydrationOptions&&r.hydrationOptions.mutableSources||null;if(r=new Us(e,t,null!=r&&!0===r.hydrate),t=Ls(3,null,null,2===t?7:1===t?3:0),r.current=t,t.stateNode=r,oa(t),e[Kn]=r.current,An(8===e.nodeType?e.parentNode:e),n)for(e=0;e<n.length;e++){var o=(t=n[e])._getVersion;o=o(t._source),null==r.mutableSourceEagerHydrationData?r.mutableSourceEagerHydrationData=[t,o]:r.mutableSourceEagerHydrationData.push(t,o)}this._internalRoot=r}function Ks(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Xs(e,t,r,n,o){var a=r._reactRootContainer;if(a){var i=a._internalRoot;if("function"==typeof o){var l=o;o=function(){var e=qs(i);l.call(e)}}Vs(t,i,e,o)}else{if(a=r._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var r;r=e.lastChild;)e.removeChild(r);return new Qs(e,0,t?{hydrate:!0}:void 0)}(r,n),i=a._internalRoot,"function"==typeof o){var s=o;o=function(){var e=qs(i);s.call(e)}}!function(e,t){var r=Cl;Cl&=-2,Cl|=8;try{e(t)}finally{0===(Cl=r)&&(Il(),Vo())}}((function(){Vs(t,i,e,o)}))}return qs(i)}Hl=function(e,t,r){var n=t.lanes;if(null!==e)if(e.memoizedProps!==t.pendingProps||uo.current)Ti=!0;else{if(0==(r&n)){switch(Ti=!1,t.tag){case 3:Wi(t),Ua();break;case 5:Pa(t);break;case 1:po(t.type)&&bo(t);break;case 4:Oa(t,t.stateNode.containerInfo);break;case 10:n=t.memoizedProps.value;var o=t.type._context;io(Qo,o._currentValue),o._currentValue=n;break;case 13:if(null!==t.memoizedState)return 0!=(r&t.child.childLanes)?$i(e,t,r):(io(ja,1&ja.current),null!==(t=Zi(e,t,r))?t.sibling:null);io(ja,1&ja.current);break;case 19:if(n=0!=(r&t.childLanes),0!=(64&e.flags)){if(n)return Yi(e,t,r);t.flags|=64}if(null!==(o=t.memoizedState)&&(o.rendering=null,o.tail=null,o.lastEffect=null),io(ja,ja.current),n)break;return null;case 23:case 24:return t.lanes=0,Mi(e,t,r)}return Zi(e,t,r)}Ti=0!=(16384&e.flags)}else Ti=!1;switch(t.lanes=0,t.tag){case 2:if(n=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,o=fo(t,so.current),ta(t,r),o=ri(null,t,n,e,o,r),t.flags|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,po(n)){var a=!0;bo(t)}else a=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,oa(t);var l=n.getDerivedStateFromProps;"function"==typeof l&&da(t,n,l,e),o.updater=pa,t.stateNode=o,o._reactInternals=t,ba(t,n,e,r),t=Hi(null,t,n,!0,a,r)}else t.tag=0,ji(null,t,o,r),t=t.child;return t;case 16:o=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,o=(a=o._init)(o._payload),t.type=o,a=t.tag=function(e){if("function"==typeof e)return Fs(e)?1:0;if(null!=e){if((e=e.$$typeof)===O)return 11;if(e===T)return 14}return 2}(o),e=$o(o,e),a){case 0:t=Di(null,t,o,e,r);break e;case 1:t=Ii(null,t,o,e,r);break e;case 11:t=Ni(null,t,o,e,r);break e;case 14:t=Li(null,t,o,$o(o.type,e),n,r);break e}throw Error(i(306,o,""))}return t;case 0:return n=t.type,o=t.pendingProps,Di(e,t,n,o=t.elementType===n?o:$o(n,o),r);case 1:return n=t.type,o=t.pendingProps,Ii(e,t,n,o=t.elementType===n?o:$o(n,o),r);case 3:if(Wi(t),n=t.updateQueue,null===e||null===n)throw Error(i(282));if(n=t.pendingProps,o=null!==(o=t.memoizedState)?o.element:null,aa(e,t),ua(t,n,null,r),(n=t.memoizedState.element)===o)Ua(),t=Zi(e,t,r);else{if((a=(o=t.stateNode).hydrate)&&(Fa=Un(t.stateNode.containerInfo.firstChild),La=t,a=Ma=!0),a){if(null!=(e=o.mutableSourceEagerHydrationData))for(o=0;o<e.length;o+=2)(a=e[o])._workInProgressVersionPrimary=e[o+1],Va.push(a);for(r=Sa(t,null,n,r),t.child=r;r;)r.flags=-3&r.flags|1024,r=r.sibling}else ji(e,t,n,r),Ua();t=t.child}return t;case 5:return Pa(t),null===e&&Ia(t),n=t.type,o=t.pendingProps,a=null!==e?e.memoizedProps:null,l=o.children,Dn(n,o)?l=null:null!==a&&Dn(n,a)&&(t.flags|=16),Bi(e,t),ji(e,t,l,r),t.child;case 6:return null===e&&Ia(t),null;case 13:return $i(e,t,r);case 4:return Oa(t,t.stateNode.containerInfo),n=t.pendingProps,null===e?t.child=xa(t,null,n,r):ji(e,t,n,r),t.child;case 11:return n=t.type,o=t.pendingProps,Ni(e,t,n,o=t.elementType===n?o:$o(n,o),r);case 7:return ji(e,t,t.pendingProps,r),t.child;case 8:case 12:return ji(e,t,t.pendingProps.children,r),t.child;case 10:e:{n=t.type._context,o=t.pendingProps,l=t.memoizedProps,a=o.value;var s=t.type._context;if(io(Qo,s._currentValue),s._currentValue=a,null!==l)if(s=l.value,0==(a=on(s,a)?0:0|("function"==typeof n._calculateChangedBits?n._calculateChangedBits(s,a):1073741823))){if(l.children===o.children&&!uo.current){t=Zi(e,t,r);break e}}else for(null!==(s=t.child)&&(s.return=t);null!==s;){var u=s.dependencies;if(null!==u){l=s.child;for(var c=u.firstContext;null!==c;){if(c.context===n&&0!=(c.observedBits&a)){1===s.tag&&((c=ia(-1,r&-r)).tag=2,la(s,c)),s.lanes|=r,null!==(c=s.alternate)&&(c.lanes|=r),ea(s.return,r),u.lanes|=r;break}c=c.next}}else l=10===s.tag&&s.type===t.type?null:s.child;if(null!==l)l.return=s;else for(l=s;null!==l;){if(l===t){l=null;break}if(null!==(s=l.sibling)){s.return=l.return,l=s;break}l=l.return}s=l}ji(e,t,o.children,r),t=t.child}return t;case 9:return o=t.type,n=(a=t.pendingProps).children,ta(t,r),n=n(o=ra(o,a.unstable_observedBits)),t.flags|=1,ji(e,t,n,r),t.child;case 14:return a=$o(o=t.type,t.pendingProps),Li(e,t,o,a=$o(o.type,a),n,r);case 15:return Fi(e,t,t.type,t.pendingProps,n,r);case 17:return n=t.type,o=t.pendingProps,o=t.elementType===n?o:$o(n,o),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,po(n)?(e=!0,bo(t)):e=!1,ta(t,r),ma(t,n,o),ba(t,n,o,r),Hi(null,t,n,!0,e,r);case 19:return Yi(e,t,r);case 23:case 24:return Mi(e,t,r)}throw Error(i(156,t.tag))},Qs.prototype.render=function(e){Vs(e,this._internalRoot,null,null)},Qs.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Vs(null,e,null,(function(){t[Kn]=null}))},Je=function(e){13===e.tag&&(ls(e,4,as()),$s(e,4))},et=function(e){13===e.tag&&(ls(e,67108864,as()),$s(e,67108864))},tt=function(e){if(13===e.tag){var t=as(),r=is(e);ls(e,r,t),$s(e,r)}},rt=function(e,t){return t()},Ee=function(e,t,r){switch(t){case"input":if(re(e,r),t=r.name,"radio"===r.type&&null!=t){for(r=e;r.parentNode;)r=r.parentNode;for(r=r.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<r.length;t++){var n=r[t];if(n!==e&&n.form===e.form){var o=eo(n);if(!o)throw Error(i(90));Y(n),re(n,o)}}}break;case"textarea":ue(e,r);break;case"select":null!=(t=r.value)&&ie(e,!!r.multiple,t,!1)}},Te=function(e,t){var r=Cl;Cl|=1;try{return e(t)}finally{0===(Cl=r)&&(Il(),Vo())}},je=function(e,t,r,n,o){var a=Cl;Cl|=4;try{return Wo(98,e.bind(null,t,r,n,o))}finally{0===(Cl=a)&&(Il(),Vo())}},Ne=function(){0==(49&Cl)&&(function(){if(null!==Yl){var e=Yl;Yl=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,us(e,Do())}))}Vo()}(),Es())},Le=function(e,t){var r=Cl;Cl|=2;try{return e(t)}finally{0===(Cl=r)&&(Il(),Vo())}};var Ys={findFiberByHostInstance:Yn,bundleType:0,version:"17.0.1",rendererPackageName:"react-dom"},Zs={bundleType:Ys.bundleType,version:Ys.version,rendererPackageName:Ys.rendererPackageName,rendererConfig:Ys.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:k.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=function(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ke(e)))throw Error(i(188));return t!==e?null:e}for(var r=e,n=t;;){var o=r.return;if(null===o)break;var a=o.alternate;if(null===a){if(null!==(n=o.return)){r=n;continue}break}if(o.child===a.child){for(a=o.child;a;){if(a===r)return Ye(o),e;if(a===n)return Ye(o),t;a=a.sibling}throw Error(i(188))}if(r.return!==n.return)r=o,n=a;else{for(var l=!1,s=o.child;s;){if(s===r){l=!0,r=o,n=a;break}if(s===n){l=!0,n=o,r=a;break}s=s.sibling}if(!l){for(s=a.child;s;){if(s===r){l=!0,r=a,n=o;break}if(s===n){l=!0,n=a,r=o;break}s=s.sibling}if(!l)throw Error(i(189))}}if(r.alternate!==n)throw Error(i(190))}if(3!==r.tag)throw Error(i(188));return r.stateNode.current===r?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}(e))?null:e.stateNode},findFiberByHostInstance:Ys.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var Js=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!Js.isDisabled&&Js.supportsFiber)try{vo=Js.inject(Zs),wo=Js}catch(me){}}t.render=function(e,t,r){if(!Ks(t))throw Error(i(200));return Xs(null,e,t,!1,r)}},3935:(e,t,r)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=r(4448)},9590:e=>{var t="undefined"!=typeof Element,r="function"==typeof Map,n="function"==typeof Set,o="function"==typeof ArrayBuffer&&!!ArrayBuffer.isView;function a(e,i){if(e===i)return!0;if(e&&i&&"object"==typeof e&&"object"==typeof i){if(e.constructor!==i.constructor)return!1;var l,s,u,c;if(Array.isArray(e)){if((l=e.length)!=i.length)return!1;for(s=l;0!=s--;)if(!a(e[s],i[s]))return!1;return!0}if(r&&e instanceof Map&&i instanceof Map){if(e.size!==i.size)return!1;for(c=e.entries();!(s=c.next()).done;)if(!i.has(s.value[0]))return!1;for(c=e.entries();!(s=c.next()).done;)if(!a(s.value[1],i.get(s.value[0])))return!1;return!0}if(n&&e instanceof Set&&i instanceof Set){if(e.size!==i.size)return!1;for(c=e.entries();!(s=c.next()).done;)if(!i.has(s.value[0]))return!1;return!0}if(o&&ArrayBuffer.isView(e)&&ArrayBuffer.isView(i)){if((l=e.length)!=i.length)return!1;for(s=l;0!=s--;)if(e[s]!==i[s])return!1;return!0}if(e.constructor===RegExp)return e.source===i.source&&e.flags===i.flags;if(e.valueOf!==Object.prototype.valueOf)return e.valueOf()===i.valueOf();if(e.toString!==Object.prototype.toString)return e.toString()===i.toString();if((l=(u=Object.keys(e)).length)!==Object.keys(i).length)return!1;for(s=l;0!=s--;)if(!Object.prototype.hasOwnProperty.call(i,u[s]))return!1;if(t&&e instanceof Element)return!1;for(s=l;0!=s--;)if(("_owner"!==u[s]&&"__v"!==u[s]&&"__o"!==u[s]||!e.$$typeof)&&!a(e[u[s]],i[u[s]]))return!1;return!0}return e!=e&&i!=i}e.exports=function(e,t){try{return a(e,t)}catch(e){if((e.message||"").match(/stack|recursion/i))return console.warn("react-fast-compare cannot handle circular refs"),!1;throw e}}},2408:(e,t,r)=>{"use strict";var n=r(7418),o=60103,a=60106;t.Fragment=60107,t.StrictMode=60108,t.Profiler=60114;var i=60109,l=60110,s=60112;t.Suspense=60113;var u=60115,c=60116;if("function"==typeof Symbol&&Symbol.for){var f=Symbol.for;o=f("react.element"),a=f("react.portal"),t.Fragment=f("react.fragment"),t.StrictMode=f("react.strict_mode"),t.Profiler=f("react.profiler"),i=f("react.provider"),l=f("react.context"),s=f("react.forward_ref"),t.Suspense=f("react.suspense"),u=f("react.memo"),c=f("react.lazy")}var d="function"==typeof Symbol&&Symbol.iterator;function p(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=1;r<arguments.length;r++)t+="&args[]="+encodeURIComponent(arguments[r]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m={};function g(e,t,r){this.props=e,this.context=t,this.refs=m,this.updater=r||h}function b(){}function y(e,t,r){this.props=e,this.context=t,this.refs=m,this.updater=r||h}g.prototype.isReactComponent={},g.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(p(85));this.updater.enqueueSetState(this,e,t,"setState")},g.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},b.prototype=g.prototype;var v=y.prototype=new b;v.constructor=y,n(v,g.prototype),v.isPureReactComponent=!0;var w={current:null},k=Object.prototype.hasOwnProperty,x={key:!0,ref:!0,__self:!0,__source:!0};function S(e,t,r){var n,a={},i=null,l=null;if(null!=t)for(n in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(i=""+t.key),t)k.call(t,n)&&!x.hasOwnProperty(n)&&(a[n]=t[n]);var s=arguments.length-2;if(1===s)a.children=r;else if(1<s){for(var u=Array(s),c=0;c<s;c++)u[c]=arguments[c+2];a.children=u}if(e&&e.defaultProps)for(n in s=e.defaultProps)void 0===a[n]&&(a[n]=s[n]);return{$$typeof:o,type:e,key:i,ref:l,props:a,_owner:w.current}}function _(e){return"object"==typeof e&&null!==e&&e.$$typeof===o}var C=/\/+/g;function E(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function A(e,t,r,n,i){var l=typeof e;"undefined"!==l&&"boolean"!==l||(e=null);var s=!1;if(null===e)s=!0;else switch(l){case"string":case"number":s=!0;break;case"object":switch(e.$$typeof){case o:case a:s=!0}}if(s)return i=i(s=e),e=""===n?"."+E(s,0):n,Array.isArray(i)?(r="",null!=e&&(r=e.replace(C,"$&/")+"/"),A(i,t,r,"",(function(e){return e}))):null!=i&&(_(i)&&(i=function(e,t){return{$$typeof:o,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(i,r+(!i.key||s&&s.key===i.key?"":(""+i.key).replace(C,"$&/")+"/")+e)),t.push(i)),1;if(s=0,n=""===n?".":n+":",Array.isArray(e))for(var u=0;u<e.length;u++){var c=n+E(l=e[u],u);s+=A(l,t,r,c,i)}else if("function"==typeof(c=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=d&&e[d]||e["@@iterator"])?e:null}(e)))for(e=c.call(e),u=0;!(l=e.next()).done;)s+=A(l=l.value,t,r,c=n+E(l,u++),i);else if("object"===l)throw t=""+e,Error(p(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return s}function z(e,t,r){if(null==e)return e;var n=[],o=0;return A(e,n,"","",(function(e){return t.call(r,e,o++)})),n}function O(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var R={current:null};function P(){var e=R.current;if(null===e)throw Error(p(321));return e}var T={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:w,IsSomeRendererActing:{current:!1},assign:n};t.Children={map:z,forEach:function(e,t,r){z(e,(function(){t.apply(this,arguments)}),r)},count:function(e){var t=0;return z(e,(function(){t++})),t},toArray:function(e){return z(e,(function(e){return e}))||[]},only:function(e){if(!_(e))throw Error(p(143));return e}},t.Component=g,t.PureComponent=y,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=T,t.cloneElement=function(e,t,r){if(null==e)throw Error(p(267,e));var a=n({},e.props),i=e.key,l=e.ref,s=e._owner;if(null!=t){if(void 0!==t.ref&&(l=t.ref,s=w.current),void 0!==t.key&&(i=""+t.key),e.type&&e.type.defaultProps)var u=e.type.defaultProps;for(c in t)k.call(t,c)&&!x.hasOwnProperty(c)&&(a[c]=void 0===t[c]&&void 0!==u?u[c]:t[c])}var c=arguments.length-2;if(1===c)a.children=r;else if(1<c){u=Array(c);for(var f=0;f<c;f++)u[f]=arguments[f+2];a.children=u}return{$$typeof:o,type:e.type,key:i,ref:l,props:a,_owner:s}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:l,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},t.createElement=S,t.createFactory=function(e){var t=S.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:s,render:e}},t.isValidElement=_,t.lazy=function(e){return{$$typeof:c,_payload:{_status:-1,_result:e},_init:O}},t.memo=function(e,t){return{$$typeof:u,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return P().useCallback(e,t)},t.useContext=function(e,t){return P().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return P().useEffect(e,t)},t.useImperativeHandle=function(e,t,r){return P().useImperativeHandle(e,t,r)},t.useLayoutEffect=function(e,t){return P().useLayoutEffect(e,t)},t.useMemo=function(e,t){return P().useMemo(e,t)},t.useReducer=function(e,t,r){return P().useReducer(e,t,r)},t.useRef=function(e){return P().useRef(e)},t.useState=function(e){return P().useState(e)},t.version="17.0.1"},7294:(e,t,r)=>{"use strict";e.exports=r(2408)},53:(e,t)=>{"use strict";var r,n,o,a;if("object"==typeof performance&&"function"==typeof performance.now){var i=performance;t.unstable_now=function(){return i.now()}}else{var l=Date,s=l.now();t.unstable_now=function(){return l.now()-s}}if("undefined"==typeof window||"function"!=typeof MessageChannel){var u=null,c=null,f=function(){if(null!==u)try{var e=t.unstable_now();u(!0,e),u=null}catch(e){throw setTimeout(f,0),e}};r=function(e){null!==u?setTimeout(r,0,e):(u=e,setTimeout(f,0))},n=function(e,t){c=setTimeout(e,t)},o=function(){clearTimeout(c)},t.unstable_shouldYield=function(){return!1},a=t.unstable_forceFrameRate=function(){}}else{var d=window.setTimeout,p=window.clearTimeout;if("undefined"!=typeof console){var h=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!=typeof h&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var m=!1,g=null,b=-1,y=5,v=0;t.unstable_shouldYield=function(){return t.unstable_now()>=v},a=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):y=0<e?Math.floor(1e3/e):5};var w=new MessageChannel,k=w.port2;w.port1.onmessage=function(){if(null!==g){var e=t.unstable_now();v=e+y;try{g(!0,e)?k.postMessage(null):(m=!1,g=null)}catch(e){throw k.postMessage(null),e}}else m=!1},r=function(e){g=e,m||(m=!0,k.postMessage(null))},n=function(e,r){b=d((function(){e(t.unstable_now())}),r)},o=function(){p(b),b=-1}}function x(e,t){var r=e.length;e.push(t);e:for(;;){var n=r-1>>>1,o=e[n];if(!(void 0!==o&&0<C(o,t)))break e;e[n]=t,e[r]=o,r=n}}function S(e){return void 0===(e=e[0])?null:e}function _(e){var t=e[0];if(void 0!==t){var r=e.pop();if(r!==t){e[0]=r;e:for(var n=0,o=e.length;n<o;){var a=2*(n+1)-1,i=e[a],l=a+1,s=e[l];if(void 0!==i&&0>C(i,r))void 0!==s&&0>C(s,i)?(e[n]=s,e[l]=r,n=l):(e[n]=i,e[a]=r,n=a);else{if(!(void 0!==s&&0>C(s,r)))break e;e[n]=s,e[l]=r,n=l}}}return t}return null}function C(e,t){var r=e.sortIndex-t.sortIndex;return 0!==r?r:e.id-t.id}var E=[],A=[],z=1,O=null,R=3,P=!1,T=!1,j=!1;function N(e){for(var t=S(A);null!==t;){if(null===t.callback)_(A);else{if(!(t.startTime<=e))break;_(A),t.sortIndex=t.expirationTime,x(E,t)}t=S(A)}}function L(e){if(j=!1,N(e),!T)if(null!==S(E))T=!0,r(F);else{var t=S(A);null!==t&&n(L,t.startTime-e)}}function F(e,r){T=!1,j&&(j=!1,o()),P=!0;var a=R;try{for(N(r),O=S(E);null!==O&&(!(O.expirationTime>r)||e&&!t.unstable_shouldYield());){var i=O.callback;if("function"==typeof i){O.callback=null,R=O.priorityLevel;var l=i(O.expirationTime<=r);r=t.unstable_now(),"function"==typeof l?O.callback=l:O===S(E)&&_(E),N(r)}else _(E);O=S(E)}if(null!==O)var s=!0;else{var u=S(A);null!==u&&n(L,u.startTime-r),s=!1}return s}finally{O=null,R=a,P=!1}}var M=a;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){T||P||(T=!0,r(F))},t.unstable_getCurrentPriorityLevel=function(){return R},t.unstable_getFirstCallbackNode=function(){return S(E)},t.unstable_next=function(e){switch(R){case 1:case 2:case 3:var t=3;break;default:t=R}var r=R;R=t;try{return e()}finally{R=r}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=M,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var r=R;R=e;try{return t()}finally{R=r}},t.unstable_scheduleCallback=function(e,a,i){var l=t.unstable_now();switch(i="object"==typeof i&&null!==i&&"number"==typeof(i=i.delay)&&0<i?l+i:l,e){case 1:var s=-1;break;case 2:s=250;break;case 5:s=1073741823;break;case 4:s=1e4;break;default:s=5e3}return e={id:z++,callback:a,priorityLevel:e,startTime:i,expirationTime:s=i+s,sortIndex:-1},i>l?(e.sortIndex=i,x(A,e),null===S(E)&&e===S(A)&&(j?o():j=!0,n(L,i-l))):(e.sortIndex=s,x(E,e),T||P||(T=!0,r(F))),e},t.unstable_wrapCallback=function(e){var t=R;return function(){var r=R;R=t;try{return e.apply(this,arguments)}finally{R=r}}}},3840:(e,t,r)=>{"use strict";e.exports=r(53)},7621:(e,t,r)=>{var n;!function(o){var a=/^\s+/,i=/\s+$/,l=0,s=o.round,u=o.min,c=o.max,f=o.random;function d(e,t){if(t=t||{},(e=e||"")instanceof d)return e;if(!(this instanceof d))return new d(e,t);var r=function(e){var t,r,n,l={r:0,g:0,b:0},s=1,f=null,d=null,p=null,h=!1,m=!1;return"string"==typeof e&&(e=function(e){e=e.replace(a,"").replace(i,"").toLowerCase();var t,r=!1;if(R[e])e=R[e],r=!0;else if("transparent"==e)return{r:0,g:0,b:0,a:0,format:"name"};return(t=U.rgb.exec(e))?{r:t[1],g:t[2],b:t[3]}:(t=U.rgba.exec(e))?{r:t[1],g:t[2],b:t[3],a:t[4]}:(t=U.hsl.exec(e))?{h:t[1],s:t[2],l:t[3]}:(t=U.hsla.exec(e))?{h:t[1],s:t[2],l:t[3],a:t[4]}:(t=U.hsv.exec(e))?{h:t[1],s:t[2],v:t[3]}:(t=U.hsva.exec(e))?{h:t[1],s:t[2],v:t[3],a:t[4]}:(t=U.hex8.exec(e))?{r:L(t[1]),g:L(t[2]),b:L(t[3]),a:D(t[4]),format:r?"name":"hex8"}:(t=U.hex6.exec(e))?{r:L(t[1]),g:L(t[2]),b:L(t[3]),format:r?"name":"hex"}:(t=U.hex4.exec(e))?{r:L(t[1]+""+t[1]),g:L(t[2]+""+t[2]),b:L(t[3]+""+t[3]),a:D(t[4]+""+t[4]),format:r?"name":"hex8"}:!!(t=U.hex3.exec(e))&&{r:L(t[1]+""+t[1]),g:L(t[2]+""+t[2]),b:L(t[3]+""+t[3]),format:r?"name":"hex"}}(e)),"object"==typeof e&&(V(e.r)&&V(e.g)&&V(e.b)?(t=e.r,r=e.g,n=e.b,l={r:255*j(t,255),g:255*j(r,255),b:255*j(n,255)},h=!0,m="%"===String(e.r).substr(-1)?"prgb":"rgb"):V(e.h)&&V(e.s)&&V(e.v)?(f=M(e.s),d=M(e.v),l=function(e,t,r){e=6*j(e,360),t=j(t,100),r=j(r,100);var n=o.floor(e),a=e-n,i=r*(1-t),l=r*(1-a*t),s=r*(1-(1-a)*t),u=n%6;return{r:255*[r,l,i,i,s,r][u],g:255*[s,r,r,l,i,i][u],b:255*[i,i,s,r,r,l][u]}}(e.h,f,d),h=!0,m="hsv"):V(e.h)&&V(e.s)&&V(e.l)&&(f=M(e.s),p=M(e.l),l=function(e,t,r){var n,o,a;function i(e,t,r){return r<0&&(r+=1),r>1&&(r-=1),r<1/6?e+6*(t-e)*r:r<.5?t:r<2/3?e+(t-e)*(2/3-r)*6:e}if(e=j(e,360),t=j(t,100),r=j(r,100),0===t)n=o=a=r;else{var l=r<.5?r*(1+t):r+t-r*t,s=2*r-l;n=i(s,l,e+1/3),o=i(s,l,e),a=i(s,l,e-1/3)}return{r:255*n,g:255*o,b:255*a}}(e.h,f,p),h=!0,m="hsl"),e.hasOwnProperty("a")&&(s=e.a)),s=T(s),{ok:h,format:e.format||m,r:u(255,c(l.r,0)),g:u(255,c(l.g,0)),b:u(255,c(l.b,0)),a:s}}(e);this._originalInput=e,this._r=r.r,this._g=r.g,this._b=r.b,this._a=r.a,this._roundA=s(100*this._a)/100,this._format=t.format||r.format,this._gradientType=t.gradientType,this._r<1&&(this._r=s(this._r)),this._g<1&&(this._g=s(this._g)),this._b<1&&(this._b=s(this._b)),this._ok=r.ok,this._tc_id=l++}function p(e,t,r){e=j(e,255),t=j(t,255),r=j(r,255);var n,o,a=c(e,t,r),i=u(e,t,r),l=(a+i)/2;if(a==i)n=o=0;else{var s=a-i;switch(o=l>.5?s/(2-a-i):s/(a+i),a){case e:n=(t-r)/s+(t<r?6:0);break;case t:n=(r-e)/s+2;break;case r:n=(e-t)/s+4}n/=6}return{h:n,s:o,l}}function h(e,t,r){e=j(e,255),t=j(t,255),r=j(r,255);var n,o,a=c(e,t,r),i=u(e,t,r),l=a,s=a-i;if(o=0===a?0:s/a,a==i)n=0;else{switch(a){case e:n=(t-r)/s+(t<r?6:0);break;case t:n=(r-e)/s+2;break;case r:n=(e-t)/s+4}n/=6}return{h:n,s:o,v:l}}function m(e,t,r,n){var o=[F(s(e).toString(16)),F(s(t).toString(16)),F(s(r).toString(16))];return n&&o[0].charAt(0)==o[0].charAt(1)&&o[1].charAt(0)==o[1].charAt(1)&&o[2].charAt(0)==o[2].charAt(1)?o[0].charAt(0)+o[1].charAt(0)+o[2].charAt(0):o.join("")}function g(e,t,r,n){return[F(B(n)),F(s(e).toString(16)),F(s(t).toString(16)),F(s(r).toString(16))].join("")}function b(e,t){t=0===t?0:t||10;var r=d(e).toHsl();return r.s-=t/100,r.s=N(r.s),d(r)}function y(e,t){t=0===t?0:t||10;var r=d(e).toHsl();return r.s+=t/100,r.s=N(r.s),d(r)}function v(e){return d(e).desaturate(100)}function w(e,t){t=0===t?0:t||10;var r=d(e).toHsl();return r.l+=t/100,r.l=N(r.l),d(r)}function k(e,t){t=0===t?0:t||10;var r=d(e).toRgb();return r.r=c(0,u(255,r.r-s(-t/100*255))),r.g=c(0,u(255,r.g-s(-t/100*255))),r.b=c(0,u(255,r.b-s(-t/100*255))),d(r)}function x(e,t){t=0===t?0:t||10;var r=d(e).toHsl();return r.l-=t/100,r.l=N(r.l),d(r)}function S(e,t){var r=d(e).toHsl(),n=(r.h+t)%360;return r.h=n<0?360+n:n,d(r)}function _(e){var t=d(e).toHsl();return t.h=(t.h+180)%360,d(t)}function C(e){var t=d(e).toHsl(),r=t.h;return[d(e),d({h:(r+120)%360,s:t.s,l:t.l}),d({h:(r+240)%360,s:t.s,l:t.l})]}function E(e){var t=d(e).toHsl(),r=t.h;return[d(e),d({h:(r+90)%360,s:t.s,l:t.l}),d({h:(r+180)%360,s:t.s,l:t.l}),d({h:(r+270)%360,s:t.s,l:t.l})]}function A(e){var t=d(e).toHsl(),r=t.h;return[d(e),d({h:(r+72)%360,s:t.s,l:t.l}),d({h:(r+216)%360,s:t.s,l:t.l})]}function z(e,t,r){t=t||6,r=r||30;var n=d(e).toHsl(),o=360/r,a=[d(e)];for(n.h=(n.h-(o*t>>1)+720)%360;--t;)n.h=(n.h+o)%360,a.push(d(n));return a}function O(e,t){t=t||6;for(var r=d(e).toHsv(),n=r.h,o=r.s,a=r.v,i=[],l=1/t;t--;)i.push(d({h:n,s:o,v:a})),a=(a+l)%1;return i}d.prototype={isDark:function(){return this.getBrightness()<128},isLight:function(){return!this.isDark()},isValid:function(){return this._ok},getOriginalInput:function(){return this._originalInput},getFormat:function(){return this._format},getAlpha:function(){return this._a},getBrightness:function(){var e=this.toRgb();return(299*e.r+587*e.g+114*e.b)/1e3},getLuminance:function(){var e,t,r,n=this.toRgb();return e=n.r/255,t=n.g/255,r=n.b/255,.2126*(e<=.03928?e/12.92:o.pow((e+.055)/1.055,2.4))+.7152*(t<=.03928?t/12.92:o.pow((t+.055)/1.055,2.4))+.0722*(r<=.03928?r/12.92:o.pow((r+.055)/1.055,2.4))},setAlpha:function(e){return this._a=T(e),this._roundA=s(100*this._a)/100,this},toHsv:function(){var e=h(this._r,this._g,this._b);return{h:360*e.h,s:e.s,v:e.v,a:this._a}},toHsvString:function(){var e=h(this._r,this._g,this._b),t=s(360*e.h),r=s(100*e.s),n=s(100*e.v);return 1==this._a?"hsv("+t+", "+r+"%, "+n+"%)":"hsva("+t+", "+r+"%, "+n+"%, "+this._roundA+")"},toHsl:function(){var e=p(this._r,this._g,this._b);return{h:360*e.h,s:e.s,l:e.l,a:this._a}},toHslString:function(){var e=p(this._r,this._g,this._b),t=s(360*e.h),r=s(100*e.s),n=s(100*e.l);return 1==this._a?"hsl("+t+", "+r+"%, "+n+"%)":"hsla("+t+", "+r+"%, "+n+"%, "+this._roundA+")"},toHex:function(e){return m(this._r,this._g,this._b,e)},toHexString:function(e){return"#"+this.toHex(e)},toHex8:function(e){return function(e,t,r,n,o){var a=[F(s(e).toString(16)),F(s(t).toString(16)),F(s(r).toString(16)),F(B(n))];return o&&a[0].charAt(0)==a[0].charAt(1)&&a[1].charAt(0)==a[1].charAt(1)&&a[2].charAt(0)==a[2].charAt(1)&&a[3].charAt(0)==a[3].charAt(1)?a[0].charAt(0)+a[1].charAt(0)+a[2].charAt(0)+a[3].charAt(0):a.join("")}(this._r,this._g,this._b,this._a,e)},toHex8String:function(e){return"#"+this.toHex8(e)},toRgb:function(){return{r:s(this._r),g:s(this._g),b:s(this._b),a:this._a}},toRgbString:function(){return 1==this._a?"rgb("+s(this._r)+", "+s(this._g)+", "+s(this._b)+")":"rgba("+s(this._r)+", "+s(this._g)+", "+s(this._b)+", "+this._roundA+")"},toPercentageRgb:function(){return{r:s(100*j(this._r,255))+"%",g:s(100*j(this._g,255))+"%",b:s(100*j(this._b,255))+"%",a:this._a}},toPercentageRgbString:function(){return 1==this._a?"rgb("+s(100*j(this._r,255))+"%, "+s(100*j(this._g,255))+"%, "+s(100*j(this._b,255))+"%)":"rgba("+s(100*j(this._r,255))+"%, "+s(100*j(this._g,255))+"%, "+s(100*j(this._b,255))+"%, "+this._roundA+")"},toName:function(){return 0===this._a?"transparent":!(this._a<1)&&(P[m(this._r,this._g,this._b,!0)]||!1)},toFilter:function(e){var t="#"+g(this._r,this._g,this._b,this._a),r=t,n=this._gradientType?"GradientType = 1, ":"";if(e){var o=d(e);r="#"+g(o._r,o._g,o._b,o._a)}return"progid:DXImageTransform.Microsoft.gradient("+n+"startColorstr="+t+",endColorstr="+r+")"},toString:function(e){var t=!!e;e=e||this._format;var r=!1,n=this._a<1&&this._a>=0;return t||!n||"hex"!==e&&"hex6"!==e&&"hex3"!==e&&"hex4"!==e&&"hex8"!==e&&"name"!==e?("rgb"===e&&(r=this.toRgbString()),"prgb"===e&&(r=this.toPercentageRgbString()),"hex"!==e&&"hex6"!==e||(r=this.toHexString()),"hex3"===e&&(r=this.toHexString(!0)),"hex4"===e&&(r=this.toHex8String(!0)),"hex8"===e&&(r=this.toHex8String()),"name"===e&&(r=this.toName()),"hsl"===e&&(r=this.toHslString()),"hsv"===e&&(r=this.toHsvString()),r||this.toHexString()):"name"===e&&0===this._a?this.toName():this.toRgbString()},clone:function(){return d(this.toString())},_applyModification:function(e,t){var r=e.apply(null,[this].concat([].slice.call(t)));return this._r=r._r,this._g=r._g,this._b=r._b,this.setAlpha(r._a),this},lighten:function(){return this._applyModification(w,arguments)},brighten:function(){return this._applyModification(k,arguments)},darken:function(){return this._applyModification(x,arguments)},desaturate:function(){return this._applyModification(b,arguments)},saturate:function(){return this._applyModification(y,arguments)},greyscale:function(){return this._applyModification(v,arguments)},spin:function(){return this._applyModification(S,arguments)},_applyCombination:function(e,t){return e.apply(null,[this].concat([].slice.call(t)))},analogous:function(){return this._applyCombination(z,arguments)},complement:function(){return this._applyCombination(_,arguments)},monochromatic:function(){return this._applyCombination(O,arguments)},splitcomplement:function(){return this._applyCombination(A,arguments)},triad:function(){return this._applyCombination(C,arguments)},tetrad:function(){return this._applyCombination(E,arguments)}},d.fromRatio=function(e,t){if("object"==typeof e){var r={};for(var n in e)e.hasOwnProperty(n)&&(r[n]="a"===n?e[n]:M(e[n]));e=r}return d(e,t)},d.equals=function(e,t){return!(!e||!t)&&d(e).toRgbString()==d(t).toRgbString()},d.random=function(){return d.fromRatio({r:f(),g:f(),b:f()})},d.mix=function(e,t,r){r=0===r?0:r||50;var n=d(e).toRgb(),o=d(t).toRgb(),a=r/100;return d({r:(o.r-n.r)*a+n.r,g:(o.g-n.g)*a+n.g,b:(o.b-n.b)*a+n.b,a:(o.a-n.a)*a+n.a})},d.readability=function(e,t){var r=d(e),n=d(t);return(o.max(r.getLuminance(),n.getLuminance())+.05)/(o.min(r.getLuminance(),n.getLuminance())+.05)},d.isReadable=function(e,t,r){var n,o,a,i,l,s=d.readability(e,t);switch(o=!1,(a=r,"AA"!==(i=((a=a||{level:"AA",size:"small"}).level||"AA").toUpperCase())&&"AAA"!==i&&(i="AA"),"small"!==(l=(a.size||"small").toLowerCase())&&"large"!==l&&(l="small"),n={level:i,size:l}).level+n.size){case"AAsmall":case"AAAlarge":o=s>=4.5;break;case"AAlarge":o=s>=3;break;case"AAAsmall":o=s>=7}return o},d.mostReadable=function(e,t,r){var n,o,a,i,l=null,s=0;o=(r=r||{}).includeFallbackColors,a=r.level,i=r.size;for(var u=0;u<t.length;u++)(n=d.readability(e,t[u]))>s&&(s=n,l=d(t[u]));return d.isReadable(e,l,{level:a,size:i})||!o?l:(r.includeFallbackColors=!1,d.mostReadable(e,["#fff","#000"],r))};var R=d.names={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"0ff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000",blanchedalmond:"ffebcd",blue:"00f",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",burntsienna:"ea7e5d",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"0ff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgreen:"006400",darkgrey:"a9a9a9",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkslategrey:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dimgrey:"696969",dodgerblue:"1e90ff",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"f0f",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",grey:"808080",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgray:"d3d3d3",lightgreen:"90ee90",lightgrey:"d3d3d3",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslategray:"789",lightslategrey:"789",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"0f0",limegreen:"32cd32",linen:"faf0e6",magenta:"f0f",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370db",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"db7093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",rebeccapurple:"663399",red:"f00",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",slategrey:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",wheat:"f5deb3",white:"fff",whitesmoke:"f5f5f5",yellow:"ff0",yellowgreen:"9acd32"},P=d.hexNames=function(e){var t={};for(var r in e)e.hasOwnProperty(r)&&(t[e[r]]=r);return t}(R);function T(e){return e=parseFloat(e),(isNaN(e)||e<0||e>1)&&(e=1),e}function j(e,t){(function(e){return"string"==typeof e&&-1!=e.indexOf(".")&&1===parseFloat(e)})(e)&&(e="100%");var r=function(e){return"string"==typeof e&&-1!=e.indexOf("%")}(e);return e=u(t,c(0,parseFloat(e))),r&&(e=parseInt(e*t,10)/100),o.abs(e-t)<1e-6?1:e%t/parseFloat(t)}function N(e){return u(1,c(0,e))}function L(e){return parseInt(e,16)}function F(e){return 1==e.length?"0"+e:""+e}function M(e){return e<=1&&(e=100*e+"%"),e}function B(e){return o.round(255*parseFloat(e)).toString(16)}function D(e){return L(e)/255}var I,H,W,U=(H="[\\s|\\(]+("+(I="(?:[-\\+]?\\d*\\.\\d+%?)|(?:[-\\+]?\\d+%?)")+")[,|\\s]+("+I+")[,|\\s]+("+I+")\\s*\\)?",W="[\\s|\\(]+("+I+")[,|\\s]+("+I+")[,|\\s]+("+I+")[,|\\s]+("+I+")\\s*\\)?",{CSS_UNIT:new RegExp(I),rgb:new RegExp("rgb"+H),rgba:new RegExp("rgba"+W),hsl:new RegExp("hsl"+H),hsla:new RegExp("hsla"+W),hsv:new RegExp("hsv"+H),hsva:new RegExp("hsva"+W),hex3:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex6:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,hex4:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex8:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/});function V(e){return!!U.CSS_UNIT.exec(e)}e.exports?e.exports=d:void 0===(n=function(){return d}.call(t,r,t,e))||(e.exports=n)}(Math)}},t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={id:n,loaded:!1,exports:{}};return e[n](o,o.exports,r),o.loaded=!0,o.exports}r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{"use strict";var e=r(3935),t=r(7294);var n=r(7621),o=r.n(n),a=r(4686),i=(e,t,r)=>{var n=(0,a.memoizedGet)(e,"colors."+t,t);return o()(n).isValid()?n:r},l=(e,t)=>r=>{var n=i(r,e);return o()(n).setAlpha(t).toRgbString()};function s(e,t){return void 0===e&&(e="1rem"),void 0===t&&(t="rgba(255, 255, 255, 0.15)"),{backgroundImage:"linear-gradient(\n    45deg,\n    "+t+" 25%,\n    transparent 25%,\n    transparent 50%,\n    "+t+" 50%,\n    "+t+" 75%,\n    transparent 75%,\n    transparent\n  )",backgroundSize:e+" "+e}}function u(e,t){return r=>"dark"===r.colorMode?t:e}function c(e){var{orientation:t,vertical:r,horizontal:n}=e;return t?"vertical"===t?r:n:{}}function f(e){var{theme:t,colorScheme:r}=e;return u(i(t,r+".100",r),l(r+".200",.16)(t))(e)}const d={parts:["container","title","icon"],baseStyle:{container:{px:4,py:3},title:{fontWeight:"bold",lineHeight:6,mr:2},description:{lineHeight:6},icon:{mr:3,w:5,h:6}},variants:{subtle:function(e){var{colorScheme:t}=e;return{container:{bg:f(e)},icon:{color:u(t+".500",t+".200")(e)}}},"left-accent":function(e){var{colorScheme:t}=e;return{container:{pl:3,borderLeft:"4px solid",borderColor:u(t+".500",t+".200")(e),bg:f(e)},icon:{color:u(t+".500",t+".200")(e)}}},"top-accent":function(e){var{colorScheme:t}=e;return{container:{pt:2,borderTop:"4px solid",borderColor:u(t+".500",t+".200")(e),bg:f(e)},icon:{color:u(t+".500",t+".200")(e)}}},solid:function(e){var{colorScheme:t}=e;return{container:{bg:u(t+".500",t+".200")(e),color:u("white","gray.900")(e)}}}},defaultProps:{variant:"subtle"}};var p={px:"1px",0:"0",1:"0.25rem",2:"0.5rem",3:"0.75rem",4:"1rem",5:"1.25rem",6:"1.5rem",7:"1.75rem",8:"2rem",9:"2.25rem",10:"2.5rem",12:"3rem",14:"3.5rem",16:"4rem",20:"5rem",24:"6rem",28:"7rem",32:"8rem",36:"9rem",40:"10rem",44:"11rem",48:"12rem",52:"13rem",56:"14rem",60:"15rem",64:"16rem",72:"18rem",80:"20rem",96:"24rem"};function h(){return(h=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}const m=h({},p,{full:"100%","3xs":"14rem","2xs":"16rem",xs:"20rem",sm:"24rem",md:"28rem",lg:"32rem",xl:"36rem","2xl":"42rem","3xl":"48rem","4xl":"56rem","5xl":"64rem","6xl":"72rem","7xl":"80rem"},{container:{sm:"640px",md:"768px",lg:"1024px",xl:"1280px"}});function g(e){return{transform:"translate(25%, 25%)",borderRadius:"full",border:"0.2em solid",borderColor:u("white","gray.800")(e)}}function b(e){return{bg:u("gray.200","whiteAlpha.400")(e)}}function y(e){var t,r,n,{name:l,theme:s}=e,c=l?(t={string:l},n=o().random().toHexString(),!t||(0,a.isEmptyObject)(t)?n:t.string&&t.colors?function(e,t){var r=0;if(0===e.length)return t[0];for(var n=0;n<e.length;n+=1)r=e.charCodeAt(n)+((r<<5)-r),r&=r;return t[r=(r%t.length+t.length)%t.length]}(t.string,t.colors):t.string&&!t.colors?function(e){var t=0;if(0===e.length)return t.toString();for(var r=0;r<e.length;r+=1)t=e.charCodeAt(r)+((t<<5)-t),t&=t;for(var n="#",o=0;o<3;o+=1)n+=("00"+(t>>8*o&255).toString(16)).substr(-2);return n}(t.string):t.colors&&!t.string?(r=t.colors)[Math.floor(Math.random()*r.length)]:n):"gray.400",f=(e=>t=>"dark"===(e=>t=>{var r=i(t,e);return o()(r).isDark()?"dark":"light"})(e)(t))(c)(s),d="white";return f||(d="gray.800"),{bg:c,color:d,borderColor:u("white","gray.800")(e),verticalAlign:"top"}}function v(e){var t=m[e];return{container:{width:e,height:e,fontSize:"calc("+(null!=t?t:e)+" / 2.5)"},excessLabel:{width:e,height:e},label:{fontSize:"calc("+(null!=t?t:e)+" / 2.5)",lineHeight:"100%"!==e?null!=t?t:e:void 0}}}const w={parts:["container","excessLabel","badge","label"],baseStyle:e=>({badge:g(e),excessLabel:b(e),container:y(e)}),sizes:{"2xs":v("4"),xs:v("6"),sm:v("8"),md:v("12"),lg:v("16"),xl:v("24"),"2xl":v("32"),full:v("100%")},defaultProps:{size:"md"}},k={baseStyle:{px:1,textTransform:"uppercase",fontSize:"xs",borderRadius:"sm",fontWeight:"bold"},variants:{solid:function(e){var{colorScheme:t,theme:r}=e;return{bg:u(t+".500",l(t+".500",.6)(r))(e),color:u("white","whiteAlpha.800")(e)}},subtle:function(e){var{colorScheme:t,theme:r}=e;return{bg:u(t+".100",l(t+".200",.16)(r))(e),color:u(t+".800",t+".200")(e)}},outline:function(e){var{colorScheme:t,theme:r}=e,n=l(t+".200",.8)(r),o=u(i(r,t+".500"),n)(e);return{color:o,boxShadow:"inset 0 0 0px 1px "+o}}},defaultProps:{variant:"subtle",colorScheme:"gray"}};function x(){return(x=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function S(e){var{colorScheme:t,theme:r}=e;if("gray"===t)return{color:u("inherit","whiteAlpha.900")(e),_hover:{bg:u("gray.100","whiteAlpha.200")(e)},_active:{bg:u("gray.200","whiteAlpha.300")(e)}};var n=l(t+".200",.12)(r),o=l(t+".200",.24)(r);return{color:u(t+".600",t+".200")(e),bg:"transparent",_hover:{bg:u(t+".50",n)(e)},_active:{bg:u(t+".100",o)(e)}}}var _={yellow:{bg:"yellow.400",color:"black",hoverBg:"yellow.500",activeBg:"yellow.600"},cyan:{bg:"cyan.400",color:"black",hoverBg:"cyan.500",activeBg:"cyan.600"}};const C={baseStyle:{lineHeight:"1.2",borderRadius:"md",fontWeight:"semibold",_focus:{boxShadow:"outline"},_disabled:{opacity:.4,cursor:"not-allowed",boxShadow:"none"},_hover:{_disabled:{bg:"initial"}}},variants:{ghost:S,outline:function(e){var{colorScheme:t}=e,r=u("gray.200","whiteAlpha.300")(e);return x({border:"1px solid",borderColor:"gray"===t?r:"currentColor"},S(e))},solid:function(e){var{colorScheme:t}=e;if("gray"===t){var r=u("gray.100","whiteAlpha.200")(e);return{bg:r,_hover:{bg:u("gray.200","whiteAlpha.300")(e),_disabled:{bg:r}},_active:{bg:u("gray.300","whiteAlpha.400")(e)}}}var{bg:n=t+".500",color:o="white",hoverBg:a=t+".600",activeBg:i=t+".700"}=_[t]||{},l=u(n,t+".200")(e);return{bg:l,color:u(o,"gray.800")(e),_hover:{bg:u(a,t+".300")(e),_disabled:{bg:l}},_active:{bg:u(i,t+".400")(e)}}},link:function(e){var{colorScheme:t}=e;return{padding:0,height:"auto",lineHeight:"normal",color:u(t+".500",t+".200")(e),_hover:{textDecoration:"underline",_disabled:{textDecoration:"none"}},_active:{color:u(t+".700",t+".500")(e)}}},unstyled:{bg:"none",color:"inherit",display:"inline",lineHeight:"inherit",m:0,p:0}},sizes:{lg:{h:12,minW:12,fontSize:"lg",px:6},md:{h:10,minW:10,fontSize:"md",px:4},sm:{h:8,minW:8,fontSize:"sm",px:3},xs:{h:6,minW:6,fontSize:"xs",px:2}},defaultProps:{variant:"solid",size:"md",colorScheme:"gray"}};function E(e){var{colorScheme:t}=e;return{w:"100%",transition:"box-shadow 250ms",border:"2px solid",borderRadius:"sm",borderColor:"inherit",color:"white",_checked:{bg:u(t+".500",t+".200")(e),borderColor:u(t+".500",t+".200")(e),color:u("white","gray.900")(e),_hover:{bg:u(t+".600",t+".300")(e),borderColor:u(t+".600",t+".300")(e)},_disabled:{borderColor:u("gray.200","transparent")(e),bg:u("gray.200","whiteAlpha.300")(e),color:u("gray.500","whiteAlpha.500")(e)}},_indeterminate:{bg:u(t+".500",t+".200")(e),borderColor:u(t+".500",t+".200")(e),color:u("white","gray.900")(e)},_disabled:{bg:u("gray.100","whiteAlpha.100")(e),borderColor:u("gray.100","transparent")(e)},_focus:{boxShadow:"outline"},_invalid:{borderColor:u("red.500","red.300")(e)}}}var A={userSelect:"none",_disabled:{opacity:.4}};const z={parts:["control","label","description","icon"],baseStyle:e=>({control:E(e),label:A}),sizes:{sm:{control:{h:3,w:3},label:{fontSize:"sm"},icon:{fontSize:"0.45rem"}},md:{control:{w:4,h:4},label:{fontSize:"md"},icon:{fontSize:"0.625rem"}},lg:{control:{w:5,h:5},label:{fontSize:"lg"},icon:{fontSize:"0.625rem"}}},defaultProps:{size:"md",colorScheme:"blue"}},O={baseStyle:function(e){return{borderRadius:"md",transition:"all 0.2s",_disabled:{opacity:.4,cursor:"not-allowed",boxShadow:"none"},_hover:{bg:u("blackAlpha.100","whiteAlpha.100")(e)},_active:{bg:u("blackAlpha.200","whiteAlpha.200")(e)},_focus:{boxShadow:"outline"}}},sizes:{lg:{w:"40px",h:"40px",fontSize:"16px"},md:{w:"32px",h:"32px",fontSize:"12px"},sm:{w:"24px",h:"24px",fontSize:"10px"}},defaultProps:{size:"md"}};var{variants:R,defaultProps:P}=k;const T={baseStyle:{fontFamily:"mono",fontSize:"sm",px:"0.2em",borderRadius:"sm"},variants:R,defaultProps:P};var j={bg:"blackAlpha.600",zIndex:"modal"};function N(e){var{isCentered:t,scrollBehavior:r}=e;return{display:"flex",zIndex:"modal",justifyContent:"center",alignItems:t?"center":"flex-start",overflow:"inside"===r?"hidden":"auto"}}function L(e){var{scrollBehavior:t}=e;return{borderRadius:"md",bg:u("white","gray.700")(e),color:"inherit",my:"3.75rem",zIndex:"modal",maxH:"inside"===t?"calc(100vh - 7.5rem)":void 0,boxShadow:u("lg","dark-lg")(e)}}var F={px:6,py:4,fontSize:"xl",fontWeight:"semibold"};function M(e){var{scrollBehavior:t}=e;return{px:6,py:2,flex:1,overflow:"inside"===t?"auto":void 0}}var B={px:6,py:4};function D(e){return"full"===e?{dialog:{maxW:"100vw",h:"100vh"}}:{dialog:{maxW:e}}}const I={parts:["overlay","dialogContainer","dialog","header","body","footer"],baseStyle:e=>({overlay:j,dialogContainer:N(e),dialog:L(e),header:F,body:M(e),footer:B}),sizes:{xs:D("xs"),sm:D("sm"),md:D("md"),lg:D("lg"),xl:D("xl"),"2xl":D("2xl"),"3xl":D("3xl"),"4xl":D("4xl"),"5xl":D("5xl"),"6xl":D("6xl"),full:D("full")},defaultProps:{size:"md"}};function H(){return(H=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function W(e){return"full"===e?{dialog:{maxW:"100vw",h:"100vh"}}:{dialog:{maxW:e}}}var U={bg:"blackAlpha.600",zIndex:"overlay"},V={display:"flex",zIndex:"modal",justifyContent:"center"};function q(e){var{isFullHeight:t}=e;return H({},t&&{height:"100vh"},{zIndex:"modal",maxH:"100vh",bg:u("white","gray.700")(e),color:"inherit",boxShadow:u("lg","dark-lg")(e)})}var G={px:6,py:4,fontSize:"xl",fontWeight:"semibold"},$={px:6,py:2,flex:1,overflow:"auto"},Q={px:6,py:4};const K={parts:I.parts,baseStyle:e=>({overlay:U,dialogContainer:V,dialog:q(e),header:G,body:$,footer:Q}),sizes:{xs:W("xs"),sm:W("md"),md:W("lg"),lg:W("2xl"),xl:W("4xl"),full:W("full")},defaultProps:{size:"xs"}};function X(e){return{color:u("red.500","red.300")(e),mt:2,fontSize:"sm"}}function Y(e){return{ml:1,color:u("red.500","red.300")(e)}}function Z(e){return{mt:2,color:u("gray.500","whiteAlpha.600")(e),lineHeight:"normal",fontSize:"sm"}}function J(e){return{mr:"0.5em",color:u("red.500","red.300")(e)}}const ee={parts:["errorText","errorIcon","requiredIndicator","helperText"],baseStyle:e=>({errorText:X(e),requiredIndicator:Y(e),helperText:Z(e),errorIcon:J(e)})};var te={lg:{fontSize:"lg",pl:4,pr:4,h:12,borderRadius:"md"},md:{fontSize:"md",pl:4,pr:4,h:10,borderRadius:"md"},sm:{fontSize:"sm",pl:3,pr:3,h:8,borderRadius:"sm"}};function re(e){var{focusBorderColor:t,errorBorderColor:r}=e;return{focusBorderColor:t||u("blue.500","blue.300")(e),errorBorderColor:r||u("red.500","red.300")(e)}}const ne={parts:["field","addon"],baseStyle:{field:{width:"100%",outline:0,position:"relative",appearance:"none",transition:"all 0.2s"}},sizes:{lg:{field:te.lg,addon:te.lg},md:{field:te.md,addon:te.md},sm:{field:te.sm,addon:te.sm}},variants:{outline:function(e){var{theme:t}=e,{focusBorderColor:r,errorBorderColor:n}=re(e);return{field:{border:"1px solid",borderColor:"inherit",bg:"inherit",_hover:{borderColor:u("gray.300","whiteAlpha.400")(e)},_readOnly:{boxShadow:"none !important",userSelect:"all"},_disabled:{opacity:.4,cursor:"not-allowed"},_focus:{zIndex:1,borderColor:i(t,r),boxShadow:"0 0 0 1px "+i(t,r)},_invalid:{borderColor:i(t,n),boxShadow:"0 0 0 1px "+i(t,n)}},addon:{border:"1px solid",borderColor:u("inherit","whiteAlpha.50")(e),bg:u("gray.100","whiteAlpha.300")(e)}}},filled:function(e){var{theme:t}=e,{focusBorderColor:r,errorBorderColor:n}=re(e);return{field:{border:"2px solid",borderColor:"transparent",bg:u("gray.100","whiteAlpha.50")(e),_hover:{bg:u("gray.200","whiteAlpha.100")(e)},_readOnly:{boxShadow:"none !important",userSelect:"all"},_disabled:{opacity:.4,cursor:"not-allowed"},_focus:{bg:"transparent",borderColor:i(t,r)},_invalid:{borderColor:i(t,n)}},addon:{border:"2px solid",borderColor:"transparent",bg:u("gray.100","whiteAlpha.50")(e)}}},flushed:function(e){var{theme:t}=e,{focusBorderColor:r,errorBorderColor:n}=re(e);return{field:{borderBottom:"1px solid",borderColor:"inherit",borderRadius:0,pl:0,pr:0,bg:"transparent",_readOnly:{boxShadow:"none !important",userSelect:"all"},_focus:{borderColor:i(t,r),boxShadow:"0px 1px 0px 0px "+i(t,r)},_invalid:{borderColor:i(t,n)}},addon:{borderBottom:"2px solid",borderColor:"inherit",borderRadius:0,paddingX:0,bg:"transparent"}}},unstyled:{field:{bg:"transparent",pl:0,pr:0,height:"auto"},addon:{bg:"transparent",pl:0,pr:0,height:"auto"}}},defaultProps:{size:"md",variant:"outline"}},oe={baseStyle:function(e){return{bg:u("gray.100","whiteAlpha")(e),borderRadius:"md",borderWidth:"1px",borderBottomWidth:"3px",fontSize:"0.8em",fontWeight:"bold",lineHeight:"normal",px:"0.4em",whiteSpace:"nowrap"}}};function ae(e){return{bg:u("#fff","gray.700")(e),boxShadow:u("sm","dark-lg")(e),color:"inherit",minW:"3xs",py:"2",zIndex:1,borderRadius:"md",borderWidth:"1px"}}function ie(e){return{py:"0.4rem",px:"0.8rem",transition:"background 50ms ease-in 0s",_focus:{bg:u("gray.100","whiteAlpha.100")(e)},_active:{bg:u("gray.200","whiteAlpha.200")(e)},_expanded:{bg:u("gray.100","whiteAlpha.100")(e)},_disabled:{opacity:.4,cursor:"not-allowed"}}}var le={mx:4,my:2,fontWeight:"semibold",fontSize:"sm"},se={opacity:.6},ue={border:0,borderBottom:"1px solid",borderColor:"inherit",my:"0.5rem",opacity:.6};const ce={parts:["item","command","list","button","groupTitle","divider"],baseStyle:e=>({list:ae(e),item:ie(e),groupTitle:le,command:se,divider:ue})};var fe,{variants:de,defaultProps:pe}=ne,he=null==(fe=ne.baseStyle)?void 0:fe.field,me={width:"24px"};function ge(e){return{borderLeft:"1px solid",borderColor:u("inherit","whiteAlpha.300")(e),color:u("inherit","whiteAlpha.800")(e),_active:{bg:u("gray.200","whiteAlpha.300")(e)},_disabled:{opacity:.4,cursor:"not-allowed"}}}function be(e){var t,r=null==(t=ne.sizes)?void 0:t[e],n={lg:"md",md:"md",sm:"sm"};return{field:null==r?void 0:r.field,stepper:{fontSize:"lg"===e?"14px":"10px",_first:{borderTopRightRadius:n[e]},_last:{borderBottomRightRadius:n[e],mt:"-1px",borderTopWidth:1}}}}const ye={parts:["field","stepper","stepperGroup"],baseStyle:e=>({field:he,stepperGroup:me,stepper:ge(e)}),sizes:{sm:be("sm"),md:be("md"),lg:be("lg")},variants:de,defaultProps:pe};function ve(){return(ve=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}const we={baseStyle:ve({},ne.baseStyle.field,{textAlign:"center"}),sizes:{lg:{fontSize:"lg",w:12,h:12,borderRadius:"md"},md:{fontSize:"md",w:10,h:10,borderRadius:"md"},sm:{fontSize:"sm",w:8,h:8,borderRadius:"sm"}},variants:{outline:e=>ne.variants.outline(e).field,flushed:e=>ne.variants.flushed(e).field,filled:e=>ne.variants.filled(e).field,unstyled:ne.variants.unstyled.field},defaultProps:ne.defaultProps};var ke={w:"100%",maxW:"xs",zIndex:10};function xe(e){return{bg:u("white","gray.700")(e),border:"1px solid",borderColor:"inherit",borderRadius:"md",boxShadow:"sm",zIndex:"inherit",_focus:{outline:0,boxShadow:"outline"}}}function Se(e){return{bg:u("white","gray.700")(e)}}var _e={px:3,py:2,borderBottomWidth:"1px"},Ce={px:3,py:2},Ee={px:3,py:2,borderTopWidth:"1px"};const Ae={parts:["popper","content","header","body","footer","arrow"],baseStyle:e=>({popper:ke,content:xe(e),header:_e,body:Ce,footer:Ee,arrow:Se(e)})};function ze(){return(ze=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}var Oe={lineHeight:"1",fontSize:"0.25em",fontWeight:"bold",color:"white"};function Re(e){return{bg:u("gray.100","whiteAlpha.300")(e)}}function Pe(e){return ze({transition:"all 0.3s"},function(e){var{colorScheme:t,theme:r,isIndeterminate:n,hasStripe:o}=e,a=u(s(),s("1rem","rgba(0,0,0,0.1)"))(e),l=u(t+".500",t+".200")(e),c="linear-gradient(\n    to right,\n    transparent 0%,\n    "+i(r,l)+" 50%,\n    transparent 100%\n  )";return ze({},!n&&o&&a,n?{bgImage:c}:{bgColor:l})}(e))}const Te={parts:["track","filledTrack","panel"],sizes:{xs:{track:{h:"0.25rem"}},sm:{track:{h:"0.5rem"}},md:{track:{h:"0.75rem"}},lg:{track:{h:"1rem"}}},baseStyle:e=>({label:Oe,filledTrack:Pe(e),track:Re(e)}),defaultProps:{size:"md",colorScheme:"blue"}};function je(){return(je=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function Ne(e){var{control:t}=z.baseStyle(e);return je({},t,{borderRadius:"full",_checked:je({},t._checked,{_before:{content:'""',display:"inline-block",pos:"relative",w:"50%",h:"50%",borderRadius:"50%",bg:"currentColor"}})})}const Le={parts:["control","label"],baseStyle:e=>({label:z.baseStyle(e).label,control:Ne(e)}),sizes:{md:{control:{w:4,h:4},label:{fontSize:"md"}},lg:{control:{w:5,h:5},label:{fontSize:"lg"}},sm:{control:{width:3,height:3},label:{fontSize:"sm"}}},defaultProps:{size:"md",colorScheme:"blue"}};function Fe(){return(Fe=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}var{sizes:Me,defaultProps:Be,variants:De}=ne;function Ie(e){return Fe({},ne.baseStyle.field,{appearance:"none",paddingBottom:"1px",lineHeight:"normal","> option":{bg:u("white","gray.700")(e)}})}var He={color:"currentColor",fontSize:"1.25rem",_disabled:{opacity:.5}};const We={parts:["field","icon"],baseStyle:e=>({field:Ie(e),icon:He}),sizes:Me,variants:De,defaultProps:Be};var Ue=r(6418);function Ve(e,t){return(0,Ue.F4)({from:{borderColor:e,background:e},to:{borderColor:t,background:t}})}const qe={baseStyle:e=>{var t=u("gray.100","gray.800")(e),r=u("gray.400","gray.600")(e),{startColor:n=t,endColor:o=r,speed:a,theme:l}=e,s=i(l,n),c=i(l,o);return{opacity:.7,borderRadius:"2px",borderColor:s,background:c,animation:a+"s linear infinite alternate "+Ve(s,c)}}},Ge={baseStyle:e=>({borderRadius:"md",fontWeight:"semibold",_focus:{boxShadow:"outline",padding:"1rem",position:"fixed",top:"1.5rem",left:"1.5rem",bg:u("white","gray.700")(e)}})};function $e(){return($e=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}var Qe=e=>{var{orientation:t}=e;return $e({_disabled:{opacity:.6,cursor:"default",pointerEvents:"none"}},c({orientation:t,vertical:{h:"100%"},horizontal:{w:"100%"}}))};function Ke(e){return{borderRadius:"sm",bg:u("gray.200","whiteAlpha.200")(e),_disabled:{bg:u("gray.300","whiteAlpha.300")(e)}}}function Xe(e){return $e({zIndex:1,borderRadius:"full",bg:"white",boxShadow:"base",border:"1px solid",borderColor:"transparent",transition:"transform 0.2s",_focus:{boxShadow:"outline"},_disabled:{bg:"gray.300"}},function(e){return c({orientation:e.orientation,vertical:{left:"50%",transform:"translateX(-50%)",_active:{transform:"translateX(-50%) scale(1.15)"}},horizontal:{top:"50%",transform:"translateY(-50%)",_active:{transform:"translateY(-50%) scale(1.15)"}}})}(e))}function Ye(e){var{colorScheme:t}=e;return{bg:u(t+".500",t+".200")(e)}}const Ze={parts:["container","thumb","track","filledTrack"],sizes:{lg:function(e){return{thumb:{w:"16px",h:"16px"},track:c({orientation:e.orientation,horizontal:{h:"4px"},vertical:{w:"4px"}})}},md:function(e){return{thumb:{w:"14px",h:"14px"},track:c({orientation:e.orientation,horizontal:{h:"4px"},vertical:{w:"4px"}})}},sm:function(e){return{thumb:{w:"10px",h:"10px"},track:c({orientation:e.orientation,horizontal:{h:"2px"},vertical:{w:"2px"}})}}},baseStyle:e=>({container:Qe(e),track:Ke(e),thumb:Xe(e),filledTrack:Ye(e)}),defaultProps:{size:"md",colorScheme:"blue"}};function Je(e){var{colorScheme:t}=e;return{borderRadius:"full",p:"2px",transition:"all 120ms",bg:u("gray.300","whiteAlpha.400")(e),_focus:{boxShadow:"outline"},_disabled:{opacity:.4,cursor:"not-allowed"},_checked:{bg:u(t+".500",t+".200")(e)}}}var et={bg:"white",transition:"transform 250ms",borderRadius:"full",transform:"translateX(0)"};const tt={parts:["track","thumb"],baseStyle:e=>({track:Je(e),thumb:et}),sizes:{sm:{track:{w:"1.375rem",h:"0.75rem"},thumb:{w:"0.75rem",h:"0.75rem",_checked:{transform:"translateX(0.625rem)"}}},md:{track:{w:"1.875rem",h:"1rem"},thumb:{w:"1rem",h:"1rem",_checked:{transform:"translateX(0.875rem)"}}},lg:{track:{w:"2.875rem",h:"1.5rem"},thumb:{w:"1.5rem",h:"1.5rem",_checked:{transform:"translateX(1.375rem)"}}}},defaultProps:{size:"md",colorScheme:"blue"}};function rt(e){var{isFitted:t}=e;return{flex:t?1:void 0,transition:"all 0.2s",_focus:{zIndex:1,boxShadow:"outline"}}}function nt(e){var{align:t="start",orientation:r}=e;return{justifyContent:{end:"flex-end",center:"center",start:"flex-start"}[t],flexDirection:"vertical"===r?"column":"row"}}var ot={p:4};const at={parts:["tablist","tab","tabpanel","indicator"],baseStyle:e=>({tab:rt(e),tablist:nt(e),tabpanel:ot}),sizes:{sm:{tab:{py:"0.25rem",px:"1rem",fontSize:"0.85rem"}},md:{tab:{fontSize:"1rem",py:"0.5rem",px:"1rem"}},lg:{tab:{fontSize:"1.15rem",py:"0.75rem",px:"1rem"}}},variants:{line:function(e){var{colorScheme:t,orientation:r}=e,n="vertical"===r?"borderLeft":"borderBottom";return{tablist:{[n]:"2px solid",borderColor:"inherit"},tab:{[n]:"2px solid",borderColor:"transparent",mb:"-2px",_selected:{color:u(t+".600",t+".300")(e),borderColor:"currentColor"},_active:{bg:u("gray.200","whiteAlpha.300")(e)},_disabled:{opacity:.4,cursor:"not-allowed"}}}},enclosed:function(e){var{colorScheme:t}=e;return{tab:{borderTopRadius:"md",border:"1px solid",borderColor:"transparent",mb:"-1px",_selected:{color:u(t+".600",t+".300")(e),borderColor:"inherit",borderBottomColor:u("white","gray.800")(e)}},tablist:{mb:"-1px",borderBottom:"1px solid",borderColor:"inherit"}}},"enclosed-colored":function(e){var{colorScheme:t}=e;return{tab:{border:"1px solid",borderColor:"inherit",bg:u("gray.50","whiteAlpha.50")(e),mb:"-1px",_notLast:{mr:"-1px"},_selected:{bg:u("#fff","gray.800")(e),color:u(t+".600",t+".300")(e),borderColor:"inherit",borderTopColor:"currentColor",borderBottomColor:"transparent"}},tablist:{mb:"-1px",borderBottom:"1px solid",borderColor:"inherit"}}},"soft-rounded":function(e){var{colorScheme:t,theme:r}=e;return{tab:{borderRadius:"full",fontWeight:"semibold",color:"gray.600",_selected:{color:i(r,t+".700"),bg:i(r,t+".100")}}}},"solid-rounded":function(e){var{colorScheme:t}=e;return{tab:{borderRadius:"full",fontWeight:"semibold",color:u("gray.600","inherit")(e),_selected:{color:u("#fff","gray.800")(e),bg:u(t+".600",t+".300")(e)}}}},unstyled:{}},defaultProps:{size:"md",variant:"line",colorScheme:"blue"}},it={parts:["container","label","closeButton"],variants:{subtle:e=>({container:k.variants.subtle(e)}),solid:e=>({container:k.variants.solid(e)}),outline:e=>({container:k.variants.outline(e)})},baseStyle:{container:{fontWeight:"medium",lineHeight:1.2,outline:0,_focus:{boxShadow:"outline"}},label:{lineHeight:1.2},closeButton:{fontSize:"18px",w:"1.25rem",h:"1.25rem",borderRadius:"sm",ml:"0.375rem",mr:"-1",opacity:.5,_disabled:{opacity:.4},_focus:{boxShadow:"outline",bg:"rgba(0, 0, 0, 0.14)"},_hover:{opacity:.8},_active:{opacity:1}}},sizes:{sm:{container:{minH:"1.25rem",minW:"1.25rem",fontSize:"xs",px:1,borderRadius:"sm"}},md:{container:{minH:"1.5rem",minW:"1.5rem",fontSize:"sm",borderRadius:"md",px:2}},lg:{container:{minH:8,minW:8,fontSize:"md",borderRadius:"md",px:3}}},defaultProps:{size:"md",variant:"subtle",colorScheme:"gray"}};function lt(){return(lt=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}var st=lt({},ne.baseStyle.field,{paddingY:"8px",minHeight:"80px",lineHeight:"short"}),ut={outline:e=>ne.variants.outline(e).field,flushed:e=>ne.variants.flushed(e).field,filled:e=>ne.variants.filled(e).field,unstyled:ne.variants.unstyled.field},ct={sm:ne.sizes.sm.field,md:ne.sizes.md.field,lg:ne.sizes.lg.field};const ft={Accordion:{parts:["container","button","panel"],baseStyle:{container:{borderTopWidth:"1px",borderColor:"inherit",_last:{borderBottomWidth:"1px"}},button:{fontSize:"1rem",_focus:{boxShadow:"outline"},_hover:{bg:"blackAlpha.50"},_disabled:{opacity:.4,cursor:"not-allowed"},px:4,py:2},panel:{pt:2,px:4,pb:5}}},Alert:d,Avatar:w,Badge:k,Breadcrumb:{parts:["link","separator"],baseStyle:{link:{transition:"all 0.15s ease-out",cursor:"pointer",textDecoration:"none",outline:"none",color:"inherit",_hover:{textDecoration:"underline"},_focus:{boxShadow:"outline"}}}},Button:C,Checkbox:z,CloseButton:O,Code:T,Drawer:K,Editable:{parts:["preview","input"],baseStyle:{preview:{borderRadius:"md",py:"3px",transition:"all 0.2s"},input:{borderRadius:"md",py:"3px",transition:"all 0.2s",width:"full",_focus:{boxShadow:"outline"},_placeholder:{opacity:.6}}}},Form:ee,FormLabel:{baseStyle:{fontSize:"md",mr:3,mb:2,fontWeight:"medium",transition:"all 0.2s",opacity:1,_disabled:{opacity:.4}}},Heading:{baseStyle:{fontFamily:"heading",fontWeight:"bold"},sizes:{"4xl":{fontSize:["6xl",null,"7xl"],lineHeight:1},"3xl":{fontSize:["5xl",null,"6xl"],lineHeight:1},"2xl":{fontSize:["4xl",null,"5xl"],lineHeight:["2.5rem",null,"1"]},xl:{fontSize:["3xl",null,"4xl"],lineHeight:["2.25rem",null,"2.5rem"]},lg:{fontSize:["2xl",null,"3xl"],lineHeight:["2rem",null,"2.25rem"]},md:{fontSize:"xl",lineHeight:"1.75rem"},sm:{fontSize:"md",lineHeight:"1.5rem"},xs:{fontSize:"sm",lineHeight:"1.25rem"}},defaultProps:{size:"xl"}},Input:ne,Kbd:oe,Link:{baseStyle:{transition:"all 0.15s ease-out",cursor:"pointer",textDecoration:"none",outline:"none",color:"inherit",_hover:{textDecoration:"underline"},_focus:{boxShadow:"outline"}}},Menu:ce,Modal:I,NumberInput:ye,PinInput:we,Popover:Ae,Progress:Te,Radio:Le,Select:We,Skeleton:qe,SkipLink:Ge,Slider:Ze,Spinner:{sizes:{xs:{w:"0.75rem",h:"0.75rem"},sm:{w:"1rem",h:"1rem"},md:{w:"1.5rem",h:"1.5rem"},lg:{w:"2rem",h:"2rem"},xl:{w:"3rem",h:"3rem"}},defaultProps:{size:"md"}},Stat:{parts:["label","number","icon","helpText"],baseStyle:{label:{fontWeight:"medium"},helpText:{opacity:.8,marginBottom:2},number:{verticalAlign:"baseline",fontWeight:"semibold"},icon:{mr:1,w:"14px",h:"14px",verticalAlign:"middle"}},sizes:{md:{label:{fontSize:"sm"},helpText:{fontSize:"sm"},number:{fontSize:"2xl"}}},defaultProps:{size:"md"}},Switch:tt,Tabs:at,Tag:it,Textarea:{baseStyle:st,sizes:ct,variants:ut,defaultProps:{size:"md",variant:"outline"}},Tooltip:{baseStyle:function(e){return{px:"8px",py:"2px",bg:u("gray.700","gray.300")(e),color:u("whiteAlpha.900","gray.900")(e),borderRadius:"sm",fontWeight:"medium",pointerEvents:"none",fontSize:"sm",boxShadow:"md",maxW:"320px",zIndex:"tooltip"}}}};function dt(){return(dt=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}var pt;function ht(){return(ht=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function mt(){return(mt=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}const gt=mt({},ht({breakpoints:(pt=(0,a.fromEntries)(Object.entries(dt({base:"0em"},{sm:"30em",md:"48em",lg:"62em",xl:"80em"})).sort(((e,t)=>parseInt(e[1],10)>parseInt(t[1],10)?1:-1))),Object.assign(Object.values(pt),pt)),zIndices:{hide:-1,auto:"auto",base:0,docked:10,dropdown:1e3,sticky:1100,banner:1200,overlay:1300,modal:1400,popover:1500,skipLink:1600,toast:1700,tooltip:1800},radii:{none:"0",sm:"0.125rem",base:"0.25rem",md:"0.375rem",lg:"0.5rem",xl:"0.75rem","2xl":"1rem","3xl":"1.5rem",full:"9999px"},colors:{transparent:"transparent",current:"currentColor",black:"#000000",white:"#FFFFFF",whiteAlpha:{50:"rgba(255, 255, 255, 0.04)",100:"rgba(255, 255, 255, 0.06)",200:"rgba(255, 255, 255, 0.08)",300:"rgba(255, 255, 255, 0.16)",400:"rgba(255, 255, 255, 0.24)",500:"rgba(255, 255, 255, 0.36)",600:"rgba(255, 255, 255, 0.48)",700:"rgba(255, 255, 255, 0.64)",800:"rgba(255, 255, 255, 0.80)",900:"rgba(255, 255, 255, 0.92)"},blackAlpha:{50:"rgba(0, 0, 0, 0.04)",100:"rgba(0, 0, 0, 0.06)",200:"rgba(0, 0, 0, 0.08)",300:"rgba(0, 0, 0, 0.16)",400:"rgba(0, 0, 0, 0.24)",500:"rgba(0, 0, 0, 0.36)",600:"rgba(0, 0, 0, 0.48)",700:"rgba(0, 0, 0, 0.64)",800:"rgba(0, 0, 0, 0.80)",900:"rgba(0, 0, 0, 0.92)"},gray:{50:"#F7FAFC",100:"#EDF2F7",200:"#E2E8F0",300:"#CBD5E0",400:"#A0AEC0",500:"#718096",600:"#4A5568",700:"#2D3748",800:"#1A202C",900:"#171923"},red:{50:"#FFF5F5",100:"#FED7D7",200:"#FEB2B2",300:"#FC8181",400:"#F56565",500:"#E53E3E",600:"#C53030",700:"#9B2C2C",800:"#822727",900:"#63171B"},orange:{50:"#FFFAF0",100:"#FEEBC8",200:"#FBD38D",300:"#F6AD55",400:"#ED8936",500:"#DD6B20",600:"#C05621",700:"#9C4221",800:"#7B341E",900:"#652B19"},yellow:{50:"#FFFFF0",100:"#FEFCBF",200:"#FAF089",300:"#F6E05E",400:"#ECC94B",500:"#D69E2E",600:"#B7791F",700:"#975A16",800:"#744210",900:"#5F370E"},green:{50:"#F0FFF4",100:"#C6F6D5",200:"#9AE6B4",300:"#68D391",400:"#48BB78",500:"#38A169",600:"#2F855A",700:"#276749",800:"#22543D",900:"#1C4532"},teal:{50:"#E6FFFA",100:"#B2F5EA",200:"#81E6D9",300:"#4FD1C5",400:"#38B2AC",500:"#319795",600:"#2C7A7B",700:"#285E61",800:"#234E52",900:"#1D4044"},blue:{50:"#ebf8ff",100:"#bee3f8",200:"#90cdf4",300:"#63b3ed",400:"#4299e1",500:"#3182ce",600:"#2b6cb0",700:"#2c5282",800:"#2a4365",900:"#1A365D"},cyan:{50:"#EDFDFD",100:"#C4F1F9",200:"#9DECF9",300:"#76E4F7",400:"#0BC5EA",500:"#00B5D8",600:"#00A3C4",700:"#0987A0",800:"#086F83",900:"#065666"},purple:{50:"#FAF5FF",100:"#E9D8FD",200:"#D6BCFA",300:"#B794F4",400:"#9F7AEA",500:"#805AD5",600:"#6B46C1",700:"#553C9A",800:"#44337A",900:"#322659"},pink:{50:"#FFF5F7",100:"#FED7E2",200:"#FBB6CE",300:"#F687B3",400:"#ED64A6",500:"#D53F8C",600:"#B83280",700:"#97266D",800:"#702459",900:"#521B41"},linkedin:{50:"#E8F4F9",100:"#CFEDFB",200:"#9BDAF3",300:"#68C7EC",400:"#34B3E4",500:"#00A0DC",600:"#008CC9",700:"#0077B5",800:"#005E93",900:"#004471"},facebook:{50:"#E8F4F9",100:"#D9DEE9",200:"#B7C2DA",300:"#6482C0",400:"#4267B2",500:"#385898",600:"#314E89",700:"#29487D",800:"#223B67",900:"#1E355B"},messenger:{50:"#D0E6FF",100:"#B9DAFF",200:"#A2CDFF",300:"#7AB8FF",400:"#2E90FF",500:"#0078FF",600:"#0063D1",700:"#0052AC",800:"#003C7E",900:"#002C5C"},whatsapp:{50:"#E2F7F4",100:"#C3F0E9",200:"#A0E7DC",300:"#76DCCD",400:"#43CFBA",500:"#00BFA5",600:"#00AC92",700:"#009780",800:"#007D6A",900:"#005A4C"},twitter:{50:"#E5F4FD",100:"#C8E9FB",200:"#A8DCFA",300:"#83CDF7",400:"#57BBF5",500:"#1DA1F2",600:"#1A94DA",700:"#1681BF",800:"#136B9E",900:"#0D4D71"},telegram:{50:"#E3F2F9",100:"#C5E4F3",200:"#A2D4EC",300:"#7AC1E4",400:"#47A9DA",500:"#0088CC",600:"#007AB8",700:"#006BA1",800:"#005885",900:"#003F5E"}}},{letterSpacings:{tighter:"-0.05em",tight:"-0.025em",normal:"0",wide:"0.025em",wider:"0.05em",widest:"0.1em"},lineHeights:{normal:"normal",none:1,shorter:1.25,short:1.375,base:1.5,tall:1.625,taller:"2",3:".75rem",4:"1rem",5:"1.25rem",6:"1.5rem",7:"1.75rem",8:"2rem",9:"2.25rem",10:"2.5rem"},fontWeights:{hairline:100,thin:200,light:300,normal:400,medium:500,semibold:600,bold:700,extrabold:800,black:900},fonts:{heading:'-apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',body:'-apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',mono:'SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace'},fontSizes:{xs:"0.75rem",sm:"0.875rem",md:"1rem",lg:"1.125rem",xl:"1.25rem","2xl":"1.5rem","3xl":"1.875rem","4xl":"2.25rem","5xl":"3rem","6xl":"3.75rem","7xl":"4.5rem","8xl":"6rem","9xl":"8rem"}},{sizes:m,shadows:{xs:"0 0 0 1px rgba(0, 0, 0, 0.05)",sm:"0 1px 2px 0 rgba(0, 0, 0, 0.05)",base:"0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)",md:"0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)",lg:"0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)",xl:"0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)","2xl":"0 25px 50px -12px rgba(0, 0, 0, 0.25)",outline:"0 0 0 3px rgba(66, 153, 225, 0.6)",inner:"inset 0 2px 4px 0 rgba(0,0,0,0.06)",none:"none","dark-lg":"rgba(0, 0, 0, 0.1) 0px 0px 0px 1px, rgba(0, 0, 0, 0.2) 0px 5px 10px, rgba(0, 0, 0, 0.4) 0px 15px 40px"},space:p,borders:{none:0,"1px":"1px solid","2px":"2px solid","4px":"4px solid","8px":"8px solid"},transition:{property:{common:"background-color, border-color, color, fill, stroke, opacity, box-shadow, transform",colors:"background-color, border-color, color, fill, stroke",dimensions:"width, height",position:"left, right, top, bottom",background:"background-color, background-image, background-position"},easing:{"ease-in":"cubic-bezier(0.4, 0, 1, 1)","ease-out":"cubic-bezier(0, 0, 0.2, 1)","ease-in-out":"cubic-bezier(0.4, 0, 0.2, 1)"},duration:{"ultra-fast":"50ms",faster:"100ms",fast:"150ms",normal:"200ms",slow:"300ms",slower:"400ms","ultra-slow":"500ms"}}}),{components:ft,styles:{global:e=>({body:{fontFamily:"body",color:u("gray.800","whiteAlpha.900")(e),bg:u("white","gray.800")(e),transition:"background-color 0.2s",lineHeight:"base"},"*::placeholder":{color:u("gray.400","whiteAlpha.400")(e)},"*, *::before, &::after":{borderColor:u("gray.200","whiteAlpha.300")(e),wordWrap:"break-word"}})},config:{useSystemColorMode:!1,initialColorMode:"light"}}),bt=()=>t.createElement(Ue.xB,{styles:'\n      html {\n        line-height: 1.5;\n        -webkit-text-size-adjust: 100%;\n        font-family: system-ui, sans-serif;\n        -webkit-font-smoothing: antialiased;\n        text-rendering: optimizeLegibility;      \n        -moz-osx-font-smoothing: grayscale; \n        touch-action: manipulation; \n      }\n\n      body {\n        position: relative;\n        min-height: 100%;\n        font-feature-settings: \'kern\';\n      }\n\n      *,\n      *::before,\n      *::after {\n        border-width: 0;\n        border-style: solid;\n        box-sizing: border-box;\n      }\n\n      main {\n        display: block;\n      }\n\n      hr {\n        border-top-width: 1px;\n        box-sizing: content-box;\n        height: 0;\n        overflow: visible;\n      }\n\n      pre,\n      code,\n      kbd,\n      samp {\n        font-family: SFMono-Regular,  Menlo, Monaco, Consolas, monospace;\n        font-size: 1em;\n      }\n\n      a {\n        background-color: transparent;\n        color: inherit;\n        text-decoration: inherit;\n      }\n\n      abbr[title] {\n        border-bottom: none;\n        text-decoration: underline;\n        -webkit-text-decoration: underline dotted;\n        text-decoration: underline dotted;\n      }\n\n      b,\n      strong {\n        font-weight: bold;\n      }\n\n      small {\n        font-size: 80%;\n      }\n\n      sub,\n      sup {\n        font-size: 75%;\n        line-height: 0;\n        position: relative;\n        vertical-align: baseline;\n      }\n\n      sub {\n        bottom: -0.25em;\n      }\n\n      sup {\n        top: -0.5em;\n      }\n\n      img {\n        border-style: none;\n      }\n\n      button,\n      input,\n      optgroup,\n      select,\n      textarea {\n        font-family: inherit;\n        font-size: 100%;\n        line-height: 1.15;\n        margin: 0;\n      }\n\n      button,\n      input {\n        overflow: visible;\n      }\n\n      button,\n      select {\n        text-transform: none;\n      }\n\n      button::-moz-focus-inner,\n      [type="button"]::-moz-focus-inner,\n      [type="reset"]::-moz-focus-inner,\n      [type="submit"]::-moz-focus-inner {\n        border-style: none;\n        padding: 0;\n      }\n\n      fieldset {\n        padding: 0.35em 0.75em 0.625em;\n      }\n\n      legend {\n        box-sizing: border-box;\n        color: inherit;\n        display: table;\n        max-width: 100%;\n        padding: 0;\n        white-space: normal;\n      }\n\n      progress {\n        vertical-align: baseline;\n      }\n\n      textarea {\n        overflow: auto;\n      }\n\n      [type="checkbox"],\n      [type="radio"] {\n        box-sizing: border-box;\n        padding: 0;\n      }\n\n      [type="number"]::-webkit-inner-spin-button,\n      [type="number"]::-webkit-outer-spin-button {\n        -webkit-appearance: none !important;\n      }\n\n      input[type="number"] {\n        -moz-appearance: textfield;\n      }\n\n      [type="search"] {\n        -webkit-appearance: textfield;\n        outline-offset: -2px;\n      }\n\n      [type="search"]::-webkit-search-decoration {\n        -webkit-appearance: none !important;\n      }\n\n      ::-webkit-file-upload-button {\n        -webkit-appearance: button;\n        font: inherit;\n      }\n\n      details {\n        display: block;\n      }\n\n      summary {\n        display: list-item;\n      }\n\n      template {\n        display: none;\n      }\n\n      [hidden] {\n        display: none !important;\n      }\n\n      body,\n      blockquote,\n      dl,\n      dd,\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6,\n      hr,\n      figure,\n      p,\n      pre {\n        margin: 0;\n      }\n\n      button {\n        background: transparent;\n        padding: 0;\n      }\n\n      fieldset {\n        margin: 0;\n        padding: 0;\n      }\n\n      ol,\n      ul {\n        margin: 0;\n        padding: 0;\n      }\n\n      textarea {\n        resize: vertical;\n      }\n\n      button,\n      [role="button"] {\n        cursor: pointer;\n      }\n\n      button::-moz-focus-inner {\n        border: 0 !important;\n      }\n\n      table {\n        border-collapse: collapse;\n      }\n\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        font-size: inherit;\n        font-weight: inherit;\n      }\n\n      button,\n      input,\n      optgroup,\n      select,\n      textarea {\n        padding: 0;\n        line-height: inherit;\n        color: inherit;\n      }\n\n      img,\n      svg,\n      video,\n      canvas,\n      audio,\n      iframe,\n      embed,\n      object {\n        display: block;\n        vertical-align: middle;\n      }\n\n      img,\n      video {\n        max-width: 100%;\n        height: auto;\n      }\n\n      [data-js-focus-visible] :focus:not([data-focus-visible-added]) {\n        outline: none;\n        box-shadow: none;\n      }\n\n      select::-ms-expand {\n        display: none;\n      }\n    '});var yt=a.isBrowser?t.useLayoutEffect:t.useEffect,[vt,wt]=(0,a.createContext)({strict:!1,name:"PortalManagerContext"}),kt=e=>{var{children:r,zIndex:n}=e,o=t.useRef(null),a=function(){var e,r,n=t.useRef(!1),[o,a]=t.useState(0);return e=()=>{n.current=!0},void 0===r&&(r=[]),t.useEffect((()=>()=>e()),r),t.useCallback((()=>{n.current||a(o+1)}),[o])}();yt((()=>{a()}),[]);var i=wt(),l={node:(null==i?void 0:i.node)||o.current,zIndex:n};return t.createElement(vt,{value:l},r,t.createElement("div",{className:"chakra-portal-manager",ref:o}))};a.__DEV__&&(kt.displayName="PortalManager");var xt=r(1180),St=e=>{var{children:r,colorModeManager:n,portalZIndex:o,resetCSS:a=!0,theme:i=gt}=e;return t.createElement(xt.ThemeProvider,{theme:i},t.createElement(xt.ColorModeProvider,{colorModeManager:n,options:i.config},a&&t.createElement(bt,null),t.createElement(xt.GlobalStyle,null),o?t.createElement(kt,{zIndex:o},r):r))},_t=r(4442);function Ct(e){void 0===e&&(e=!1);var[r,n]=(0,t.useState)(e);return[r,{on:(0,t.useCallback)((()=>{n(!0)}),[]),off:(0,t.useCallback)((()=>{n(!1)}),[]),toggle:(0,t.useCallback)((()=>{n((e=>!e))}),[])}]}var Et=r(658),At={border:"0px",clip:"rect(0px, 0px, 0px, 0px)",height:"1px",width:"1px",margin:"-1px",padding:"0px",overflow:"hidden",whiteSpace:"nowrap",position:"absolute"},zt=(0,xt.chakra)("span",{baseStyle:At});a.__DEV__&&(zt.displayName="VisuallyHidden");var Ot=(0,xt.chakra)("input",{baseStyle:At});function Rt(){return(Rt=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function Pt(e){e.preventDefault(),e.stopPropagation()}a.__DEV__&&(Ot.displayName="VisuallyHiddenInput");var Tt=r(5284);function jt(){return(jt=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}var Nt=(0,xt.forwardRef)(((e,r)=>{var n=(0,xt.useMultiStyleConfig)("Switch",e),o=(0,Tt.Lr)(e),{state:i,getInputProps:l,getCheckboxProps:s,htmlProps:u}=function(e){void 0===e&&(e={});var{defaultIsChecked:r,isChecked:n,isFocusable:o,isDisabled:i,isReadOnly:l,isRequired:s,onChange:u,isIndeterminate:c,isInvalid:f,name:d,value:p,id:h}=e,m=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,["defaultIsChecked","isChecked","isFocusable","isDisabled","isReadOnly","isRequired","onChange","isIndeterminate","isInvalid","name","value","id"]),[g,b]=Ct(),[y,v]=Ct(),[w,k]=Ct(),x=(0,t.useRef)(null),[S,_]=(0,t.useState)(!!r),[C,E]=function(e,r){var{current:n}=t.useRef(void 0!==e);return[n,n&&void 0!==e?e:r]}(n,S),A=(0,t.useCallback)((e=>{l||i?e.preventDefault():(C||_(E?e.target.checked:!!c||e.target.checked),null==u||u(e))}),[l,i,E,C,c,u]);yt((()=>{x.current&&(x.current.indeterminate=Boolean(c))}),[c]);var z=i&&!o,O=(0,t.useCallback)((e=>{" "===e.key&&k.on()}),[k]),R=(0,t.useCallback)((e=>{" "===e.key&&k.off()}),[k]);return{state:{isInvalid:f,isFocused:g,isChecked:E,isActive:w,isHovered:y,isIndeterminate:c,isDisabled:i,isReadOnly:l,isRequired:s},getCheckboxProps:function(e,t){return void 0===e&&(e={}),void 0===t&&(t=null),Rt({},e,{ref:t,"data-active":(0,a.dataAttr)(w),"data-hover":(0,a.dataAttr)(y),"data-checked":(0,a.dataAttr)(E),"data-focus":(0,a.dataAttr)(g),"data-indeterminate":(0,a.dataAttr)(c),"data-disabled":(0,a.dataAttr)(i),"data-invalid":(0,a.dataAttr)(f),"data-readonly":(0,a.dataAttr)(l),"aria-hidden":!0,onMouseDown:(0,Et.v0)(e.onMouseDown,(e=>{e.preventDefault(),k.on()})),onMouseUp:(0,Et.v0)(e.onMouseUp,k.off),onMouseEnter:(0,Et.v0)(e.onMouseEnter,v.on),onMouseLeave:(0,Et.v0)(e.onMouseLeave,v.off)})},getInputProps:function(e,t){return void 0===e&&(e={}),void 0===t&&(t=null),Rt({},e,{ref:(0,a.mergeRefs)(x,t),type:"checkbox",name:d,value:p,id:h,onChange:(0,Et.v0)(e.onChange,A),onBlur:(0,Et.v0)(e.onBlur,b.off),onFocus:(0,Et.v0)(e.onFocus,b.on),onKeyDown:(0,Et.v0)(e.onKeyDown,O),onKeyUp:(0,Et.v0)(e.onKeyUp,R),required:s,checked:E,disabled:z,readOnly:l,"aria-invalid":f,"aria-disabled":i,style:At})},getLabelProps:function(e,t){return void 0===e&&(e={}),void 0===t&&(t=null),Rt({},e,{ref:t,onMouseDown:(0,Et.v0)(e.onMouseDown,Pt),onTouchStart:(0,Et.v0)(e.onTouchStart,Pt),"data-disabled":(0,a.dataAttr)(i),"data-checked":(0,a.dataAttr)(E),"data-invalid":(0,a.dataAttr)(f)})},htmlProps:m}}(o),c=l({},r),f=s(),d=jt({display:"inline-flex",flexShrink:0,justifyContent:"flex-start",boxSizing:"content-box",cursor:"pointer"},n.track);return t.createElement(xt.chakra.label,jt({},u,{className:(0,a.cx)("chakra-switch",e.className),__css:{display:"inline-block",verticalAlign:"middle",lineHeight:"normal"}}),t.createElement("input",jt({className:"chakra-switch__input"},c)),t.createElement(xt.chakra.span,jt({},f,{className:"chakra-switch__track",__css:d}),t.createElement(xt.chakra.span,{__css:n.thumb,className:"chakra-switch__thumb","data-checked":(0,a.dataAttr)(i.isChecked),"data-hover":(0,a.dataAttr)(i.isHovered)})))}));a.__DEV__&&(Nt.displayName="Switch");const Lt=function(){var e=(0,_t.useColorMode)(),r=e.colorMode,n=e.toggleColorMode,o="dark"===r;return t.createElement(Nt,{position:"fixed",top:"1rem",right:"1rem",color:"green",isChecked:o,onChange:n})};var Ft=r(7154),Mt=r.n(Ft);function Bt(){return(Bt=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}var Dt=(0,xt.forwardRef)((function(e,r){var{direction:n,align:o,justify:a,wrap:i,basis:l,grow:s,shrink:u}=e,c=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,["direction","align","justify","wrap","basis","grow","shrink"]),f={display:"flex",flexDirection:n,alignItems:o,justifyContent:a,flexWrap:i,flexBasis:l,flexGrow:s,flexShrink:u};return t.createElement(xt.chakra.div,Bt({ref:r,__css:f},c))}));a.__DEV__&&(Dt.displayName="Flex");const It=function(e){var r=(0,_t.useColorMode)().colorMode;return t.createElement(Dt,Mt()({direction:"column",alignItems:"stretch",justifyContent:"space-around",bg:{light:"gray.50",dark:"gray.900"}[r],color:{light:"black",dark:"white"}[r],height:"100vh"},e))};var Ht=r(5697),Wt=r.n(Ht),Ut=function(e){var r=e.children;return t.createElement(Dt,{flexShrink:0,flexBasis:"30px",direction:"row",m:"10px",justifyContent:"flex-end",alignItems:"baseline"},r)};Ut.propTypes={children:Wt().oneOfType([Wt().arrayOf(Wt().node),Wt().node])};const Vt=Ut;var qt=r(8655),Gt=r.n(qt),$t=r(395);function Qt(){var e=Gt()(["\n  fill: red;\n  position: relative;\n  top: 5px;\n  width: 50px;\n  animation: "," 0.8s ease infinite;\n"]);return Qt=function(){return e},e}function Kt(){var e=Gt()(["\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.3);\n  }\n  100% {\n    transform: scale(1);\n  }\n"]);return Kt=function(){return e},e}var Xt=(0,Ue.F4)(Kt()),Yt=$t.Z.svg(Qt(),Xt),Zt=function(e){var r=e.height;return t.createElement(Yt,{viewBox:"0 0 32 29.6",height:r},t.createElement("path",{d:"M23.6,0c-3.4,0-6.3,2.7-7.6,5.6C14.7,2.7,11.8,0, 8.4,0C3.8,0,0,3.8,0,8.4c0,9.4,9.5,11.9,16,21.2 c6.1-9.3,16-12.1,16-21.2C32,3.8,28.2,0,23.6,0z"}))};Zt.defaultProps={height:100},Zt.propTypes={height:Wt().number};const Jt=Zt;var er=r(4575),tr=r.n(er),rr=r(3913),nr=r.n(rr),or=function(){function e(t,r){tr()(this,e),this.number=t,this.color=r}return nr()(e,[{key:"isEqual",value:function(e){return this.number==e.number&&this.color.isEqual(e.color)}},{key:"getColor",value:function(){return this.color}},{key:"getNumber",value:function(){return this.number}}]),e}(),ar=function(){function e(t){tr()(this,e),this.hints=t}return nr()(e,[{key:"isEqual",value:function(e){return this.hints.length==e.hints.length&&this.hints.every((function(t,r){return t.isEqual(e.hints[r])}))}},{key:"getHints",value:function(){return this.hints}}]),e}(),ir=function(){function e(t,r){tr()(this,e),this.linesHints=t,this.colsHints=r}return nr()(e,[{key:"getLinesHints",value:function(){return this.linesHints}},{key:"getColsHints",value:function(){return this.colsHints}},{key:"isEqual",value:function(e){return this.colsHints.length==e.colsHints.length&&this.linesHints.length==e.linesHints.length&&this.linesHints.every((function(t,r){return t.isEqual(e.linesHints[r])}))&&this.colsHints.every((function(t,r){return t.isEqual(e.colsHints[r])}))}}]),e}(),lr=function(){function e(t){tr()(this,e),this.data=t,this.nbLines=t.length,this.nonEmpty(),this.nbCols=t[0].length,this.consistentSize()}return nr()(e,[{key:"nonEmpty",value:function(){if(0==this.nbLines||1==this.nbLines&&0==this.data[0].length)throw new Error("Image data should not be empty.")}},{key:"consistentSize",value:function(){var e=this;if(!this.data.every((function(t){return t.length==e.nbCols})))throw new Error("The image is neither a Square nor a Rectangle: line sizes are not consistent.")}},{key:"getNbCols",value:function(){return this.nbCols}},{key:"getNbLines",value:function(){return this.nbLines}},{key:"getLine",value:function(e){return this.data[e]}},{key:"isEqual",value:function(e){return this.flatten().every((function(t,r){return t==e.flatten()[r]}))&&e.nbCols==this.nbCols&&this.nbLines==e.nbLines}},{key:"flatten",value:function(){return this.data.reduce((function(e,t){return e.concat(t)}),[])}},{key:"transpose",value:function(){for(var t=[],r=0;r<this.nbCols;r++)t.push([]);for(var n=0;n<this.nbCols;n++)for(var o=0;o<this.nbLines;o++)t[n].push(this.data[o][n]);return new e(t)}},{key:"toHints",value:function(){var e=sr(this),t=sr(this.transpose());return new ir(e,t)}},{key:"setIndex",value:function(t,r){var n=this.flatten().map((function(e,n){return t==n?r:e}));return e.fromColorArray(n,this.nbLines,this.nbCols)}},{key:"getIndex",value:function(e){return this.data[Math.floor(e/this.nbCols)][e%this.nbCols]}}],[{key:"fromColorArray",value:function(t,r,n){for(var o=[],a=0;a<r;a++)o.push([]);for(var i=0;i<r;i++)for(var l=0;l<n;l++)o[i].push(t[i*n+l]);return new e(o)}}]),e}();function sr(e){for(var t=[],r=0;r<e.nbLines;r++){for(var n=e.getLine(r),o=[],a=n[0],i=1,l=1;l<n.length;l++){var s=n[l];s.isEqual(a)?i++:(a.isEmpty()||o.push(new or(i,a)),i=1,a=s)}a.isEmpty()||o.push(new or(i,a)),t.push(new ar(o))}return t}var ur=function(){function e(t,r,n){var o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;tr()(this,e),this.r=t,this.g=r,this.b=n,this.a=o}return nr()(e,[{key:"isEqual",value:function(e){return this.r===e.r&&this.g===e.g&&this.b===e.b&&this.a===e.a}},{key:"isEmpty",value:function(){return this.isEqual(cr)}},{key:"toCSSRGB",value:function(){return"rgb(".concat(this.r,",").concat(this.g,",").concat(this.b,",").concat(this.a,")")}}],[{key:"Empty",value:function(){return new e(0,0,0,0)}},{key:"Black",value:function(){return new e(0,0,0)}},{key:"Cross",value:function(){return new e(256,0,0)}},{key:"White",value:function(){return new e(256,256,256)}},{key:"Hint",value:function(){return new e(-2,-2,-2)}}]),e}(),cr=ur.Empty(),fr=ur.Black(),dr=ur.Cross(),pr=(ur.Hint(),ur.White()),hr=(0,xt.chakra)("div",{baseStyle:{display:"flex",alignItems:"center",justifyContent:"center"}});function mr(){return(mr=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function gr(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}a.__DEV__&&(hr.displayName="Center");var br=(0,xt.forwardRef)((function(e,r){var{area:n,templateAreas:o,gap:a,rowGap:i,columnGap:l,column:s,row:u,autoFlow:c,autoRows:f,templateRows:d,autoColumns:p,templateColumns:h}=e,m=gr(e,["area","templateAreas","gap","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","templateColumns"]),g={display:"grid",gridArea:n,gridTemplateAreas:o,gridGap:a,gridRowGap:i,gridColumnGap:l,gridAutoColumns:p,gridColumn:s,gridRow:u,gridAutoFlow:c,gridAutoRows:f,gridTemplateRows:d,gridTemplateColumns:h};return t.createElement(xt.chakra.div,mr({ref:r,__css:g},m))}));function yr(e){return(0,a.mapResponsive)(e,(e=>"auto"===e?"auto":"span "+e+"/span "+e))}a.__DEV__&&(br.displayName="Grid");var vr=(0,xt.forwardRef)((function(e,r){var{colSpan:n,colStart:o,colEnd:i,rowEnd:l,rowSpan:s,rowStart:u}=e,c=gr(e,["colSpan","colStart","colEnd","rowEnd","rowSpan","rowStart"]),f=(0,a.filterUndefined)({gridColumn:yr(n),gridRow:yr(s),gridColumnStart:o,gridColumnEnd:i,gridRowStart:u,gridRowEnd:l});return t.createElement(xt.chakra.div,mr({ref:r,__css:f},c))}));function wr(){return(wr=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function kr(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}var xr=(0,xt.chakra)("div");a.__DEV__&&(xr.displayName="Box");var Sr=(0,xt.forwardRef)((function(e,r){var{size:n,centerContent:o=!0}=e,a=kr(e,["size","centerContent"]),i=o?{display:"flex",alignItems:"center",justifyContent:"center"}:{};return t.createElement(xr,wr({ref:r,boxSize:n,__css:wr({},i,{flexShrink:0,flexGrow:0})},a))}));a.__DEV__&&(Sr.displayName="Square");var _r=(0,xt.forwardRef)((function(e,r){var{size:n}=e,o=kr(e,["size"]);return t.createElement(Sr,wr({size:n,ref:r,borderRadius:"9999px"},o))}));a.__DEV__&&(_r.displayName="Circle");var Cr=function(e){var r=e.hints,n=e.direction;return t.createElement(Dt,{flexDirection:n},r.getHints().map((function(e,r){return t.createElement(xr,{textColor:e.getColor().toCSSRGB(),key:r,style:{margin:5}},e.getNumber())})))};Cr.propTypes={hints:Wt().instanceOf(ar).isRequired,direction:Wt().oneOf(["row","column"]).isRequired};const Er=Cr;var Ar=r(3038),zr=r.n(Ar);function Or(){return(Or=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}var Rr=(0,xt.forwardRef)((function(e,r){var n,o,{columns:i,spacingX:l,spacingY:s,spacing:u,minChildWidth:c}=e,f=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,["columns","spacingX","spacingY","spacing","minChildWidth"]),d=c?(o=c,(0,a.mapResponsive)(o,(e=>{return(0,a.isNull)(e)?null:"repeat(auto-fit, minmax("+(t=e,((0,a.isNumber)(t)?t+"px":t)+", 1fr))");var t}))):(n=i,(0,a.mapResponsive)(n,(e=>(0,a.isNull)(e)?null:"repeat("+e+", 1fr)")));return t.createElement(br,Or({ref:r,gap:u,columnGap:l,rowGap:s,templateColumns:d},f))}));a.__DEV__&&(Rr.displayName="SimpleGrid");var Pr=function(e){var r=e.onClick,n=e.onRightClick,o=e.size,a=e.color,i=e.index;return t.createElement(xr,{bg:a.toCSSRGB(),height:o,width:o,borderRadius:10,onClick:function(e){r(e,i)},onContextMenu:function(e){n(e,i)}})};Pr.defaultProps={size:100},Pr.propTypes={size:Wt().number.isRequired,color:Wt().instanceOf(ur).isRequired,index:Wt().number.isRequired,onClick:Wt().func.isRequired,onRightClick:Wt().func.isRequired};const Tr=Pr;var jr=function(e){var r=e.nbCols,n=e.nbLines,o=e.onGridChange,a=(0,t.useState)(function(e,t){return lr.fromColorArray(Array(t*e).fill(1).map((function(e,t){return e+t})).map((function(){return pr})),e,t)}(n,r)),i=zr()(a,2),l=i[0],s=i[1],u=function(e,t){if(e.preventDefault(),l.getIndex(t).isEqual(fr)){var r=l.setIndex(t,pr);s(r),o(r)}else{var n=l.setIndex(t,fr);s(n),o(n)}},c=function(e,t){if(e.preventDefault(),l.getIndex(t).isEqual(dr)){var r=l.setIndex(t,pr);s(r),o(r)}else{var n=l.setIndex(t,dr);s(n),o(n)}};return t.createElement(Rr,{columns:r,spacing:"2px",bg:"grey",style:{gridColumn:"span ".concat(r),gridRow:"span ".concat(n)},padding:"2px",borderRadius:"10px"},l.flatten().map((function(e,r){return t.createElement(Tr,{key:r,size:100,color:e,index:r,onClick:u,onRightClick:c})})))};jr.propTypes={nbCols:Wt().number.isRequired,nbLines:Wt().number.isRequired,onGridChange:Wt().func.isRequired};const Nr=jr;var Lr=function(e){var r=e.image,n=r.toHints(),o=n.getLinesHints(),a=n.getColsHints(),i=o.map((function(e,r){return t.createElement(hr,{key:r},t.createElement(Er,{hints:e,direction:"row"}))})),l=a.map((function(e,r){return t.createElement(hr,{key:r},t.createElement(Er,{hints:e,direction:"column"}))}));return t.createElement(br,{templateRows:"100px repeat(".concat(r.getNbLines(),", 1fr)"),templateColumns:"100px repeat(".concat(r.getNbCols(),", 1fr)"),gap:"4px"},t.createElement(vr,{colSpan:1,rowSpan:1,bg:"tomato"},t.createElement(hr,null,"Timer")),t.createElement(vr,{colSpan:r.getNbCols(),rowSpan:1,bg:"tomato",style:{display:"flex",justifyContent:"space-around",alignItems:"flex-end"}},l),t.createElement(vr,{colSpan:1,rowSpan:r.getNbLines(),bg:"tomato",style:{display:"flex",justifyContent:"space-around",flexDirection:"column",alignItems:"flex-end"}},i),t.createElement(Nr,{nbCols:r.getNbCols(),nbLines:r.getNbLines(),onGridChange:function(e){lr.fromColorArray(e.flatten().map((function(e){return e.isEqual(fr)?fr:cr})),e.nbLines,e.nbCols).isEqual(r)&&console.log("WIN!")}}))};Lr.defaultProps={image:new lr([[fr,fr,fr],[fr,fr,fr],[fr,cr,fr],[fr,fr,fr],[fr,fr,fr],[fr,cr,fr],[fr,fr,fr],[fr,cr,fr],[fr,fr,fr]]),cellSize:100},Lr.propTypes={image:Wt().instanceOf(lr).isRequired};const Fr=Lr;function Mr(){return(Mr=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}var Br=(0,xt.forwardRef)((function(e,r){var n=(0,xt.useStyleConfig)("Heading",e),o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}((0,Tt.Lr)(e),["className"]);return t.createElement(xt.chakra.h2,Mr({ref:r,className:(0,a.cx)("chakra-heading",e.className)},o,{__css:n}))}));a.__DEV__&&(Br.displayName="Heading");var Dr=function(e){return t.createElement(Dt,{justifyContent:"center",alignItems:"center",flexGrow:1},t.createElement(Br,{fontSize:"50px"},e.children))};Dr.propTypes={children:Wt().object.isRequired};const Ir=Dr;function Hr(){return(Hr=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}var Wr=(0,Ue.F4)({"0%":{transform:"rotate(0deg)"},"100%":{transform:"rotate(360deg)"}}),Ur=(0,xt.forwardRef)((function(e,r){var n=(0,xt.useStyleConfig)("Spinner",e),o=(0,Tt.Lr)(e),{label:i="Loading...",thickness:l="2px",speed:s="0.45s",color:u,emptyColor:c="transparent",className:f}=o,d=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(o,["label","thickness","speed","color","emptyColor","className"]),p=(0,a.cx)("chakra-spinner",f),h=Hr({display:"inline-block",borderColor:"currentColor",borderStyle:"solid",borderRadius:"99999px",borderWidth:l,borderBottomColor:c,borderLeftColor:c,color:u,animation:Wr+" "+s+" linear infinite"},n);return t.createElement(xt.chakra.div,Hr({ref:r,__css:h,className:p},d),i&&t.createElement(zt,null,i))}));function Vr(){return(Vr=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}a.__DEV__&&(Ur.displayName="Spinner");var[qr,Gr]=(0,a.createContext)({strict:!1,name:"ButtonGroupContext"}),$r=(0,xt.forwardRef)((function(e,r){var{size:n,colorScheme:o,variant:i,className:l,spacing:s="0.5rem",isAttached:u,isDisabled:c}=e,f=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,["size","colorScheme","variant","className","spacing","isAttached","isDisabled"]),d=(0,a.cx)("chakra-button__group",l),p=t.useMemo((()=>({size:n,colorScheme:o,variant:i,isDisabled:c})),[n,o,i,c]),h={display:"inline-flex"};return h=Vr({},h,u?{"> *:first-of-type:not(:last-of-type)":{borderRightRadius:0},"> *:not(:first-of-type):not(:last-of-type)":{borderRadius:0},"> *:not(:first-of-type):last-of-type":{borderLeftRadius:0}}:{"& > *:not(style) ~ *:not(style)":{marginLeft:s}}),t.createElement(qr,{value:p},t.createElement(xt.chakra.div,Vr({ref:r,role:"group",__css:h,className:d},f)))}));function Qr(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}function Kr(){return(Kr=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}a.__DEV__&&($r.displayName="ButtonGroup");var Xr=(0,xt.forwardRef)((function(e,r){var n,o=Gr(),i=(0,xt.useStyleConfig)("Button",Kr({},o,e)),l=(0,Tt.Lr)(e),{isDisabled:s=(null==o?void 0:o.isDisabled),isLoading:u,isActive:c,isFullWidth:f,children:d,leftIcon:p,rightIcon:h,loadingText:m,iconSpacing:g="0.5rem",type:b="button",spinner:y,className:v,as:w}=l,k=Qr(l,["isDisabled","isLoading","isActive","isFullWidth","children","leftIcon","rightIcon","loadingText","iconSpacing","type","spinner","className","as"]),x=(0,a.mergeWith)({},null!=(n=null==i?void 0:i._focus)?n:{},{zIndex:1}),S=Kr({display:"inline-flex",appearance:"none",alignItems:"center",justifyContent:"center",transition:"all 250ms",userSelect:"none",position:"relative",whiteSpace:"nowrap",verticalAlign:"middle",outline:"none",width:f?"100%":"auto"},i,!!o&&{_focus:x});return t.createElement(xt.chakra.button,Kr({disabled:s||u,ref:r,as:w,type:w?void 0:b,"data-active":(0,a.dataAttr)(c),"data-loading":(0,a.dataAttr)(u),__css:S,className:(0,a.cx)("chakra-button",v)},k),p&&!u&&t.createElement(Yr,{mr:g},p),u&&t.createElement(Zr,{__css:{fontSize:"1em",lineHeight:"normal"},spacing:g,label:m},y),u?m||t.createElement(xt.chakra.span,{opacity:0},d):d,h&&!u&&t.createElement(Yr,{ml:g},h))}));a.__DEV__&&(Xr.displayName="Button");var Yr=e=>{var{children:r,className:n}=e,o=Qr(e,["children","className"]),i=t.isValidElement(r)?t.cloneElement(r,{"aria-hidden":!0,focusable:!1}):r,l=(0,a.cx)("chakra-button__icon",n);return t.createElement(xt.chakra.span,Kr({},o,{className:l}),i)};a.__DEV__&&(Yr.displayName="ButtonIcon");var Zr=e=>{var{label:r,spacing:n,children:o=t.createElement(Ur,{color:"currentColor",width:"1em",height:"1em"}),className:i,__css:l}=e,s=Qr(e,["label","spacing","children","className","__css"]),u=(0,a.cx)("chakra-button__spinner",i),c=Kr({display:"flex",alignItems:"center",position:r?"relative":"absolute",mr:r?n:0},l);return t.createElement(xt.chakra.div,Kr({className:u},s,{__css:c}),o)};function Jr(){return(Jr=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}a.__DEV__&&(Zr.displayName="ButtonSpinner");var en=(0,xt.forwardRef)((function(e,r){var{icon:n,children:o,isRound:a,"aria-label":i}=e,l=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,["icon","children","isRound","aria-label"]),s=n||o,u=t.isValidElement(s)?t.cloneElement(s,{"aria-hidden":!0,focusable:!1}):null;return t.createElement(Xr,Jr({padding:"0",borderRadius:a?"full":"md",ref:r,"aria-label":i},l),u)}));function tn(){return(tn=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}a.__DEV__&&(en.displayName="IconButton");var rn={path:t.createElement("g",{stroke:"currentColor",strokeWidth:"1.5"},t.createElement("path",{strokeLinecap:"round",fill:"none",d:"M9,9a3,3,0,1,1,4,2.829,1.5,1.5,0,0,0-1,1.415V14.25"}),t.createElement("path",{fill:"currentColor",strokeLinecap:"round",d:"M12,17.25a.375.375,0,1,0,.375.375A.375.375,0,0,0,12,17.25h0"}),t.createElement("circle",{fill:"none",strokeMiterlimit:"10",cx:"12",cy:"12",r:"11.25"})),viewBox:"0 0 24 24"},nn=(0,xt.forwardRef)((function(e,r){var{as:n,viewBox:o,color:i="currentColor",focusable:l=!1,children:s,className:u,__css:c}=e,f=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,["as","viewBox","color","focusable","children","className","__css"]),d={ref:r,focusable:l,className:(0,a.cx)("chakra-icon",u),__css:tn({w:"1em",h:"1em",display:"inline-block",lineHeight:"1em",flexShrink:0,color:i},c)},p=null!=o?o:rn.viewBox;if(n&&"string"!=typeof n)return t.createElement(xt.chakra.svg,tn({as:n},d,f));var h=null!=s?s:rn.path;return t.createElement(xt.chakra.svg,tn({verticalAlign:"middle",viewBox:p},d,f),h)}));function on(){return(on=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}a.__DEV__&&(nn.displayName="Icon");var an=(0,xt.forwardRef)((function(e,r){var n=(0,xt.useStyleConfig)("Text",e),o=(0,Tt.Lr)(e),{align:i,decoration:l,casing:s}=o,u=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(o,["className","align","decoration","casing"]);return t.createElement(xt.chakra.p,on({ref:r,className:(0,a.cx)("chakra-text",e.className),textAlign:i,textDecoration:l,textTransform:s},u,{__css:n}))}));function ln(){return(ln=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}a.__DEV__&&(an.displayName="Text");var sn=function(e){var{viewBox:r="0 0 24 24",d:n,path:o,displayName:i,defaultProps:l={}}={d:"M0.913134,0.920639 C1.49851,0.331726 2.29348,0 3.12342,0 L10.8766,0 C11.7065,0 12.5015,0.331725 13.0869,0.920639 C13.6721,1.50939 14,2.30689 14,3.13746 L14,8.12943 C13.9962,8.51443 13.9059,8.97125 13.7629,9.32852 C13.6128,9.683 13.3552,10.0709 13.0869,10.3462 C12.813,10.6163 12.4265,10.8761 12.0734,11.0274 C11.7172,11.1716 11.2607,11.263 10.8766,11.2669 L10.1234,11.2669 L10.1234,12.5676 L10.1209,12.5676 C10.1204,12.793 10.0633,13.0791 9.97807,13.262 C9.8627,13.466 9.61158,13.7198 9.40818,13.8382 L9.40824,13.8383 C9.4077,13.8386 9.40716,13.8388 9.40661,13.8391 C9.40621,13.8393 9.4058,13.8396 9.40539,13.8398 L9.40535,13.8397 C9.22958,13.9254 8.94505,13.9951 8.75059,14 L8.74789,14 C8.35724,13.9963 7.98473,13.8383 7.71035,13.5617 L5.39553,11.2669 L3.12342,11.2669 C2.29348,11.2669 1.49851,10.9352 0.913134,10.3462 C0.644826,10.0709 0.387187,9.683 0.23711,9.32852 C0.0941235,8.97125 0.00379528,8.51443 0,8.12943 L0,3.13746 C0,2.30689 0.327915,1.50939 0.913134,0.920639 Z M3.12342,1.59494 C2.71959,1.59494 2.33133,1.75628 2.04431,2.04503 C1.75713,2.33395 1.59494,2.72681 1.59494,3.13746 L1.59494,8.12943 C1.59114,8.35901 1.62114,8.51076 1.71193,8.72129 C1.79563,8.9346 1.88065,9.06264 2.04431,9.22185 C2.33133,9.5106 2.71959,9.67195 3.12342,9.67195 L5.72383,9.67195 C5.93413,9.67195 6.13592,9.75502 6.28527,9.90308 L8.52848,12.1269 L8.52848,10.4694 C8.52848,10.029 8.88552,9.67195 9.32595,9.67195 L10.8766,9.67195 C11.1034,9.67583 11.2517,9.64614 11.4599,9.55518 C11.6712,9.47132 11.7976,9.38635 11.9557,9.22185 C12.1193,9.06264 12.2044,8.9346 12.2881,8.72129 C12.3789,8.51076 12.4089,8.35901 12.4051,8.12943 L12.4051,3.13746 C12.4051,2.72681 12.2429,2.33394 11.9557,2.04503 C11.6687,1.75628 11.2804,1.59494 10.8766,1.59494 L3.12342,1.59494 Z",displayName:"ChatIcon",viewBox:"0 0 14 14"},s=(0,xt.forwardRef)(((e,a)=>t.createElement(nn,ln({ref:a,viewBox:r},l,e),null!=o?o:t.createElement("path",{fill:"currentColor",d:n}))));return a.__DEV__&&(s.displayName=i),s}();const un=function(){return t.createElement(t.Fragment,null,t.createElement(It,null,t.createElement(Lt,null),t.createElement(Ir,null,t.createElement(Dt,{direction:"row",justifyContent:"space-around",width:"200px",alignItems:"center"},t.createElement(en,{size:"lg",variant:"outline",colorScheme:"grey","aria-label":"Call Sage",fontSize:"25px",icon:t.createElement(nn,{viewBox:"0 0 590.074 590.073"},t.createElement("path",{fill:"currentColor",d:"M537.804,174.688c0-44.772-33.976-81.597-77.552-86.12c-12.23-32.981-43.882-56.534-81.128-56.534   c-16.304,0-31.499,4.59-44.514,12.422C319.808,17.949,291.513,0,258.991,0c-43.117,0-78.776,31.556-85.393,72.809   c-3.519-0.43-7.076-0.727-10.71-0.727c-47.822,0-86.598,38.767-86.598,86.598c0,2.343,0.172,4.638,0.354,6.933   c-24.25,15.348-40.392,42.333-40.392,73.153c0,27.244,12.604,51.513,32.273,67.387c-0.086,1.559-0.239,3.107-0.239,4.686   c0,47.822,38.767,86.598,86.598,86.598c14.334,0,27.817-3.538,39.723-9.696c16.495,11.848,40.115,26.67,51.551,23.715   c0,0,4.255,65.905,3.337,82.64c-1.75,31.843-11.303,67.291-18.025,95.979h104.117c0,0-15.348-63.954-16.018-85.307   c-0.669-21.354,6.675-60.675,6.675-60.675l36.118-37.36c13.903,9.505,30.695,14.908,48.807,14.908   c44.771,0,81.597-34.062,86.12-77.639c32.98-12.23,56.533-43.968,56.533-81.214c0-21.994-8.262-41.999-21.765-57.279   C535.71,195.926,537.804,185.561,537.804,174.688z M214.611,373.444c6.942-6.627,12.766-14.372,17.212-22.969l17.002,35.62   C248.816,386.096,239.569,390.179,214.611,373.444z M278.183,395.438c-8.798,1.597-23.782-25.494-34.416-47.517   c11.791,6.015,25.102,9.477,39.254,9.477c3.634,0,7.201-0.296,10.72-0.736C291.006,374.286,286.187,393.975,278.183,395.438z    M315.563,412.775c-20.35,5.651-8.167-36.501-2.334-60.904c4.218-1.568,8.301-3.413,12.183-5.604   c2.343,17.786,10.069,33.832,21.516,46.521C337.011,401.597,325.593,409.992,315.563,412.775z"})),isRound:!0}),t.createElement(en,{size:"lg",variant:"outline",colorScheme:"teal","aria-label":"Call Sage",fontSize:"25px",icon:t.createElement(sn,null),isRound:!0}))),t.createElement(Vt,null,t.createElement(an,{fontSize:13},"Made with"),t.createElement(xr,{mx:-2},t.createElement(Jt,{height:13})),t.createElement(an,{fontSize:13},"by Anthony D'Amato"))),t.createElement(Dt,{flexDirection:"row",justifyContent:"flex-start"},t.createElement(Fr,{image:new lr([[fr,fr,fr],[cr,fr,fr]])})))};var cn,fn=(cn={useSystemColorMode:!0},(0,a.mergeWith)({},gt,cn,(function e(t,r){if((0,a.isFunction)(t))return function(){var n=t(...arguments),o=(0,a.isFunction)(r)?r(...arguments):r;return(0,a.mergeWith)({},n,o,e)}})));e.render(t.createElement(t.StrictMode,null,t.createElement(St,{theme:fn},t.createElement(un,null))),document.getElementById("root"))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,